[
{
"brief":"compile only ,do not link",
"cmdstring":"-c",
"hasargument":false
},
{
"brief":"instrument for code coverage analysis",
"cmdstring":"-cov",
"hasargument":false
},
{
"brief":"generate documentation from source",
"cmdstring":"-D",
"hasargument":false
},
{
"brief":"write documentation file to ARGUMENT directory",
"cmdstring":"-Dd",
"hasargument":true
},
{
"brief":"write documentation file to ARGUMENT filename",
"cmdstring":"-Df",
"hasargument":true
},
{
"brief":"allow deprecated features",
"cmdstring":"-d",
"hasargument":false
},
{
"brief":"compile in debug code",
"cmdstring":"-debug",
"hasargument":false
},
{
"brief":"link in ARGUMENT as the default library when compiling for symbolic debugging instead of libphobos2.a",
"cmdstring":"-debuglib=",
"hasargument":true
},
{
"brief":"linkin ARGUMENT as the default library when not compiling for symbolic debugging instead of libphobos2.a",
"cmdstring":"-defaultlib=",
"hasargument":true
},
{
"brief":"write module dependencies as text to ARGUMENT",
"cmdstring":"-deps=",
"hasargument":true
},
{
"brief":"generate Position Independent Code (which is used for building shared libraries)",
"cmdstring":"-fPIC",
"hasargument":false
},
{
"brief":"add Dwarf symbolic debug info with D extensions for debuggers such as ZeroBUGS",
"cmdstring":"-g",
"hasargument":true
},
{
"brief":"add Dwarf symbolic debug info in C format for debuggers such as gdb",
"cmdstring":"-gc",
"hasargument":false
},
{
"brief":"generate D interface file",
"cmdstring":"-H",
"hasargument":false
},
{
"brief":"write D interface file to ARGUMENT directory",
"cmdstring":"-Hd",
"hasargument":true
},
{
"brief":"write D interface file to ARUGMENT file name",
"cmdstring":"-Hf",
"hasargument":true
},
{
"brief":"prin brief help to console",
"cmdstring":"--help",
"hasargument":false
},
{
"brief":"inline expand functions at the discretion of the compiler. This can imporve performance, at the expense of making it more difficult to use a debugger on it",
"cmdstring":"-inline",
"hasargument":false
},
{
"brief":"ignore unsupported pragmas",
"cmdstring":"-ignore",
"hasargument":false
},
{
"brief":"compile a 32 bit executable. This is the default for the 32 bit dmd.",
"cmdstring":"-m32",
"hasargument":false
},
{
"brief":"compile a 64 bit executable.This is the default for the 64 bit dmd.",
"cmdstring":"-m64",
"hasargument":false
},
{
"brief":"open browser specified by the BROWSER environment variable to dmd manpage.  If BROWSER is undefined, x-www-browser is assumed.",
"cmdstring":"-man",
"hasargument":false
},
{
"brief":"turns off all array bounds checking, even for save functions",
"cmdstring":"-noboundscheck",
"hasargument":false
},
{
"brief":"Optimize generated code.  For fastest executables, compile with the -O -release -inline switches together.",
"cmdstring":"-O",
"hasargument":false
},
{
"brief":"Suppressgenerationofobjectfile.Usefulinconjunctionwith-Dor-Hflags.",
"cmdstring":"-o-",
"hasargument":false
},
{
"brief":"writeobjectfilesrelativetodirectoryARGUMENTinsteadoftothecurrentdirectory",
"cmdstring":"-od",
"hasargument":true
},
{
"brief":"SetoutputfilenametoARGUMENTintheoutputdirectory.Theoutputfilecanbeanobjectfile,executablefile,orlibraryfiledependingontheotherswitches.",
"cmdstring":"-of",
"hasargument":true
},
{
"brief":"normallythepathfor.dsourcefilesisstrippedoffwhengeneratinganobjectfilename.-opwillleaveiton.",
"cmdstring":"-op",
"hasargument":false
},
{
"brief":"profiletheruntimeperformanceofthegeneratedcode",
"cmdstring":"-profile",
"hasargument":false
},
{
"brief":"suppressnon-essentialcompilermessages",
"cmdstring":"-quiet",
"hasargument":false
},
{
"brief":"compilereleaseversion,whichmeansnotgeneratingcodeforcontractsandasserts.Arrayboundscheckingisnotdoneofrsystemandtrustedfunctions.",
"cmdstring":"-release",
"hasargument":false
},
{
"brief":"link,andruntheprogramwithARGUMENTastheargumentstotheprogram.No.oorexecutablefileisleftbehind.",
"cmdstring":"-run",
"hasargument":true
},
{
"brief":"compileinunittestcode,turnsonasserts,andsetstheunitestversionidentifier",
"cmdstring":"-unittest",
"hasargument":false
},
{
"brief":"verbose",
"cmdstring":"-v",
"hasargument":false
},
{
"brief":"print informational messages identifying variables defaulting to thread local storage.  Handy for migrating to shared model.",
"cmdstring":"-vtls",
"hasargument":false
},
{
"brief":"enable warnings",
"cmdstring":"-w",
"hasargument":false
},
{
"brief":"enable informational warnings(i.e. compilation still proceeds normally)",
"cmdstring":"-wi",
"hasargument":false
}
]
