[
q{
"name" : "std.algorithm",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/algorithm.d",
"members" : [
{
"name" : "map(fun...) if (fun.length >= 1)",
"kind" : "template",
"line" : 366,
"members" : [
{
"name" : "map(Range) if (isInputRange!(Unqual!(Range)))",
"kind" : "template",
"line" : 368,
"members" : [
{
"name" : "map",
"kind" : "function",
"type" : "(Range r)",
"line" : 368}
]
}
]
}
,
{
"name" : "reduce(fun...) if (fun.length >= 1)",
"kind" : "template",
"line" : 626,
"members" : [
{
"name" : "reduce(Args...) if (Args.length > 0 && Args.length <= 2 && isIterable!(Args[__dollar - 1]))",
"kind" : "template",
"line" : 628,
"members" : [
{
"name" : "reduce",
"kind" : "function",
"type" : "(Args args)",
"line" : 628}
]
}
]
}
,
{
"name" : "fill(Range,Value) if (isForwardRange!(Range) && is(typeof(range.front = filler)))",
"kind" : "template",
"line" : 840,
"members" : [
{
"name" : "fill",
"kind" : "function",
"type" : "void(Range range, Value filler)",
"line" : 840}
]
}
,
{
"name" : "fill(Range1,Range2) if (isForwardRange!(Range1) && isForwardRange!(Range2) && is(typeof(Range1.init.front = Range2.init.front)))",
"kind" : "template",
"line" : 903,
"members" : [
{
"name" : "fill",
"kind" : "function",
"type" : "void(Range1 range, Range2 filler)",
"line" : 903}
]
}
,
{
"name" : "uninitializedFill(Range,Value) if (isForwardRange!(Range) && is(typeof(range.front = filler)))",
"kind" : "template",
"line" : 940,
"members" : [
{
"name" : "uninitializedFill",
"kind" : "function",
"type" : "void(Range range, Value filler)",
"line" : 940}
]
}
,
{
"name" : "initializeAll(Range) if (isForwardRange!(Range) && is(typeof(range.front = range.front)))",
"kind" : "template",
"line" : 991,
"members" : [
{
"name" : "initializeAll",
"kind" : "function",
"type" : "void(Range range)",
"line" : 991}
]
}
,
{
"name" : "filter(alias pred) if (is(typeof(unaryFun!(pred))))",
"kind" : "template",
"line" : 1068,
"members" : [
{
"name" : "filter(Range) if (isInputRange!(Unqual!(Range)))",
"kind" : "template",
"line" : 1070,
"members" : [
{
"name" : "filter",
"kind" : "function",
"type" : "(Range rs)",
"line" : 1070}
]
}
]
}
,
{
"name" : "filterBidirectional(alias pred)",
"kind" : "template",
"line" : 1232,
"members" : [
{
"name" : "filterBidirectional(Range) if (isBidirectionalRange!(Unqual!(Range)))",
"kind" : "template",
"line" : 1234,
"members" : [
{
"name" : "filterBidirectional",
"kind" : "function",
"type" : "(Range r)",
"line" : 1234}
]
}
]
}
,
{
"name" : "move(T)",
"kind" : "template",
"line" : 1316,
"members" : [
{
"name" : "move",
"kind" : "function",
"type" : "void(ref T source, ref T target)",
"line" : 1316}
]
}
,
{
"name" : "move(T)",
"kind" : "template",
"line" : 1398,
"members" : [
{
"name" : "move",
"kind" : "function",
"type" : "T(ref T src)",
"line" : 1398}
]
}
,
{
"name" : "moveAll(Range1,Range2) if (isInputRange!(Range1) && isInputRange!(Range2) && is(typeof(move(src.front,tgt.front))))",
"kind" : "template",
"line" : 1415,
"members" : [
{
"name" : "moveAll",
"kind" : "function",
"type" : "Range2(Range1 src, Range2 tgt)",
"line" : 1415}
]
}
,
{
"name" : "moveSome(Range1,Range2) if (isInputRange!(Range1) && isInputRange!(Range2) && is(typeof(move(src.front,tgt.front))))",
"kind" : "template",
"line" : 1445,
"members" : [
{
"name" : "moveSome",
"kind" : "function",
"type" : "Tuple!(Range1,Range2)(Range1 src, Range2 tgt)",
"line" : 1445}
]
}
,
{
"name" : "swap(T) if (isMutable!(T) && !is(typeof(T.init.proxySwap(T.init))))",
"kind" : "template",
"line" : 1477,
"members" : [
{
"name" : "swap",
"kind" : "function",
"type" : "pure nothrow @trusted void(ref T lhs, ref T rhs)",
"line" : 1477}
]
}
,
{
"name" : "swap(T) if (is(typeof(T.init.proxySwap(T.init))))",
"kind" : "template",
"line" : 1514,
"members" : [
{
"name" : "swap",
"kind" : "function",
"type" : "void(T lhs, T rhs)",
"line" : 1514}
]
}
,
{
"name" : "swapFront(R1,R2) if (isInputRange!(R1) && isInputRange!(R2))",
"kind" : "template",
"line" : 1582,
"members" : [
{
"name" : "swapFront",
"kind" : "function",
"type" : "void(R1 r1, R2 r2)",
"line" : 1582}
]
}
,
{
"name" : "splitter(Range,Separator) if (is(typeof(ElementType!(Range).init == Separator.init)) && (hasSlicing!(Range) || isNarrowString!(Range)))",
"kind" : "template",
"line" : 1623,
"members" : [
{
"name" : "splitter",
"kind" : "function",
"type" : "(Range r, Separator s)",
"line" : 1623}
]
}
,
{
"name" : "splitter(Range,Separator) if (is(typeof(Range.init.front == Separator.init.front) : bool))",
"kind" : "template",
"line" : 1830,
"members" : [
{
"name" : "splitter",
"kind" : "function",
"type" : "(Range r, Separator s)",
"line" : 1830}
]
}
,
{
"name" : "splitter(alias isTerminator,Range) if (is(typeof(unaryFun!(isTerminator)(ElementType!(Range).init))))",
"kind" : "template",
"line" : 2025,
"members" : [
{
"name" : "splitter",
"kind" : "function",
"type" : "(Range input)",
"line" : 2025}
]
}
,
{
"name" : "splitter(Range) if (isSomeString!(Range))",
"kind" : "template",
"line" : 2155,
"members" : [
{
"name" : "splitter",
"kind" : "function",
"type" : "(Range input)",
"line" : 2155}
]
}
,
{
"name" : "joiner(RoR,Separator) if (isInputRange!(RoR) && isInputRange!(ElementType!(RoR)) && isForwardRange!(Separator) && is(ElementType!(Separator) : ElementType!(ElementType!(RoR))))",
"kind" : "template",
"line" : 2200,
"members" : [
{
"name" : "joiner",
"kind" : "function",
"type" : "(RoR r, Separator sep)",
"line" : 2200}
]
}
,
{
"name" : "joiner(RoR) if (isInputRange!(RoR) && isInputRange!(ElementType!(RoR)))",
"kind" : "template",
"line" : 2338,
"members" : [
{
"name" : "joiner",
"kind" : "function",
"type" : "(RoR r)",
"line" : 2338}
]
}
,
{
"name" : "uniq(alias pred = \"a == b\",Range) if (isInputRange!(Range) && is(typeof(binaryFun!(pred)(r.front,r.front)) == bool))",
"kind" : "template",
"line" : 2434,
"members" : [
{
"name" : "uniq",
"kind" : "function",
"type" : "(Range r)",
"line" : 2434}
]
}
,
{
"name" : "Group(alias pred,R) if (isInputRange!(R))",
"kind" : "struct",
"line" : 2541,
"members" : [
{
"name" : "Group",
"kind" : "struct",
"line" : 2541,
"members" : [
{
"name" : "_input",
"kind" : "variable",
"type" : "R",
"line" : 2542}
,
{
"name" : "_current",
"kind" : "variable",
"type" : "Tuple!(ElementType!(R),uint)",
"line" : 2543}
,
{
"name" : "comp",
"kind" : "alias",
"type" : "binaryFun!(pred)",
"line" : 2544}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(R input)",
"line" : 2546}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 2552}
,
{
"name" : "front",
"kind" : "function",
"type" : "Tuple!(ElementType!(R),uint)()",
"line" : 2582}
]
}
]
}
,
{
"name" : "group(alias pred = \"a == b\",Range)",
"kind" : "template",
"line" : 2600,
"members" : [
{
"name" : "group",
"kind" : "function",
"type" : "Group!(pred,Range)(Range r)",
"line" : 2600}
]
}
,
{
"name" : "find(alias pred = \"a == b\",R,E) if (isInputRange!(R) && is(typeof(binaryFun!(pred)(haystack.front,needle)) : bool))",
"kind" : "template",
"line" : 2739,
"members" : [
{
"name" : "find",
"kind" : "function",
"type" : "R(R haystack, E needle)",
"line" : 2739}
]
}
,
{
"name" : "find(alias pred = \"a == b\",R1,R2) if (isForwardRange!(R1) && isForwardRange!(R2) && is(typeof(binaryFun!(pred)(haystack.front,needle.front)) : bool) && !isRandomAccessRange!(R1))",
"kind" : "template",
"line" : 2790,
"members" : [
{
"name" : "find",
"kind" : "function",
"type" : "R1(R1 haystack, R2 needle)",
"line" : 2790}
]
}
,
{
"name" : "find(alias pred = \"a == b\",R1,R2) if (isRandomAccessRange!(R1) && isBidirectionalRange!(R2) && is(typeof(binaryFun!(pred)(haystack.front,needle.front)) : bool))",
"kind" : "template",
"line" : 2826,
"members" : [
{
"name" : "find",
"kind" : "function",
"type" : "R1(R1 haystack, R2 needle)",
"line" : 2826}
]
}
,
{
"name" : "find(alias pred = \"a == b\",R1,R2) if (isRandomAccessRange!(R1) && isForwardRange!(R2) && !isBidirectionalRange!(R2) && is(typeof(binaryFun!(pred)(haystack.front,needle.front)) : bool))",
"kind" : "template",
"line" : 2898,
"members" : [
{
"name" : "find",
"kind" : "function",
"type" : "R1(R1 haystack, R2 needle)",
"line" : 2898}
]
}
,
{
"name" : "simpleMindedFind(alias pred,R1,R2)",
"kind" : "template",
"line" : 2941,
"members" : [
{
"name" : "simpleMindedFind",
"kind" : "function",
"type" : "R1(R1 haystack, R2 needle)",
"line" : 2941}
]
}
,
{
"name" : "find(alias pred = \"a == b\",Range,Ranges...) if (Ranges.length > 1 && allSatisfy!(isForwardRange,Ranges))",
"kind" : "template",
"line" : 3063,
"members" : [
{
"name" : "find",
"kind" : "function",
"type" : "Tuple!(Range,size_t)(Range haystack, Ranges needles)",
"line" : 3063}
]
}
,
{
"name" : "BoyerMooreFinder(alias pred,Range)",
"kind" : "struct",
"line" : 3150,
"members" : [
{
"name" : "BoyerMooreFinder",
"kind" : "struct",
"line" : 3150,
"members" : [
{
"name" : "skip",
"kind" : "variable",
"type" : "size_t[]",
"line" : 3152}
,
{
"name" : "occ",
"kind" : "variable",
"type" : "sizediff_t[ElementType!(Range)]",
"line" : 3153}
,
{
"name" : "needle",
"kind" : "variable",
"type" : "Range",
"line" : 3154}
,
{
"name" : "occurrence",
"kind" : "function",
"type" : "sizediff_t(ElementType!(Range) c)",
"line" : 3156}
,
{
"name" : "needlematch(R)",
"kind" : "template",
"line" : 3170,
"members" : [
{
"name" : "needlematch",
"kind" : "function",
"type" : "bool(R needle, size_t portion, size_t offset)",
"line" : 3170}
]
}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Range needle)",
"line" : 3189}
,
{
"name" : "beFound",
"kind" : "function",
"type" : "Range(Range haystack)",
"line" : 3215}
,
{
"name" : "length",
"kind" : "function",
"type" : "size_t()",
"line" : 3234}
]
}
]
}
,
{
"name" : "boyerMooreFinder(alias pred = \"a == b\",Range) if (isRandomAccessRange!(Range) || isSomeString!(Range))",
"kind" : "template",
"line" : 3241,
"members" : [
{
"name" : "boyerMooreFinder",
"kind" : "function",
"type" : "BoyerMooreFinder!(binaryFun!(pred),Range)(Range needle)",
"line" : 3241}
]
}
,
{
"name" : "find(Range1,alias pred,Range2)",
"kind" : "template",
"line" : 3249,
"members" : [
{
"name" : "find",
"kind" : "function",
"type" : "Range1(Range1 haystack, BoyerMooreFinder!(pred,Range2) needle)",
"line" : 3249}
]
}
,
{
"name" : "find(alias pred,Range) if (isInputRange!(Range))",
"kind" : "template",
"line" : 3295,
"members" : [
{
"name" : "find",
"kind" : "function",
"type" : "Range(Range haystack)",
"line" : 3295}
]
}
,
{
"name" : "findSkip(alias pred = \"a == b\",R1,R2) if (isForwardRange!(R1) && isForwardRange!(R2) && is(typeof(binaryFun!(pred)(haystack.front,needle.front))))",
"kind" : "template",
"line" : 3329,
"members" : [
{
"name" : "findSkip",
"kind" : "function",
"type" : "bool(ref R1 haystack, R2 needle)",
"line" : 3329}
]
}
,
{
"name" : "findSplit(alias pred = \"a == b\",R1,R2) if (isForwardRange!(R1) && isForwardRange!(R2))",
"kind" : "template",
"line" : 3399,
"members" : [
{
"name" : "findSplit",
"kind" : "function",
"type" : "(R1 haystack, R2 needle)",
"line" : 3399}
]
}
,
{
"name" : "findSplitBefore(alias pred = \"a == b\",R1,R2) if (isForwardRange!(R1) && isForwardRange!(R2))",
"kind" : "template",
"line" : 3441,
"members" : [
{
"name" : "findSplitBefore",
"kind" : "function",
"type" : "(R1 haystack, R2 needle)",
"line" : 3441}
]
}
,
{
"name" : "findSplitAfter(alias pred = \"a == b\",R1,R2) if (isForwardRange!(R1) && isForwardRange!(R2))",
"kind" : "template",
"line" : 3477,
"members" : [
{
"name" : "findSplitAfter",
"kind" : "function",
"type" : "(R1 haystack, R2 needle)",
"line" : 3477}
]
}
,
{
"name" : "countUntil(alias pred = \"a == b\",R1,R2) if (is(typeof(startsWith!(pred)(haystack,needle))))",
"kind" : "template",
"line" : 3580,
"members" : [
{
"name" : "countUntil",
"kind" : "function",
"type" : "sizediff_t(R1 haystack, R2 needle)",
"line" : 3580}
]
}
,
{
"name" : "indexOf(alias pred = \"a == b\",R1,R2) if (is(typeof(startsWith!(pred)(haystack,needle))))",
"kind" : "template",
"line" : 3611,
"members" : [
{
"name" : "indexOf",
"kind" : "function",
"type" : "sizediff_t(R1 haystack, R2 needle)",
"line" : 3611}
]
}
,
{
"name" : "OpenRight",
"kind" : "enum",
"line" : 3623,
"base" : "int",
"members" : [
{
"name" : "no",
"kind" : "enum member",
"line" : 3624}
,
{
"name" : "yes",
"kind" : "enum member",
"line" : 3625}
]
}
,
{
"name" : "Until(alias pred,Range,Sentinel) if (isInputRange!(Range))",
"kind" : "struct",
"line" : 3640,
"members" : [
{
"name" : "Until",
"kind" : "struct",
"line" : 3640,
"members" : [
{
"name" : "_input",
"kind" : "variable",
"type" : "Range",
"line" : 3641}
,
{
"name" : "_openRight",
"kind" : "variable",
"type" : "OpenRight",
"line" : 3650}
,
{
"name" : "_done",
"kind" : "variable",
"type" : "bool",
"line" : 3651}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 3670}
,
{
"name" : "front",
"kind" : "function",
"type" : "ElementType!(Range)()",
"line" : 3675}
,
{
"name" : "predSatisfied",
"kind" : "function",
"type" : "bool()",
"line" : 3681}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 3689}
]
}
]
}
,
{
"name" : "until(alias pred = \"a == b\",Range,Sentinel) if (!is(Sentinel == OpenRight))",
"kind" : "template",
"line" : 3739,
"members" : [
{
"name" : "until",
"kind" : "function",
"type" : "Until!(pred,Range,Sentinel)(Range range, Sentinel sentinel, OpenRight openRight = OpenRight.yes)",
"line" : 3739}
]
}
,
{
"name" : "until(alias pred,Range)",
"kind" : "template",
"line" : 3748,
"members" : [
{
"name" : "until",
"kind" : "function",
"type" : "Until!(pred,Range,void)(Range range, OpenRight openRight = OpenRight.yes)",
"line" : 3748}
]
}
,
{
"name" : "startsWith(alias pred = \"a == b\",Range,Ranges...) if (isInputRange!(Range) && Ranges.length > 1 && is(typeof(.startsWith!(pred)(doesThisStart,withOneOfThese[0])) : bool) && is(typeof(.startsWith!(pred)(doesThisStart,withOneOfThese[1..__dollar])) : uint))",
"kind" : "template",
"line" : 3793,
"members" : [
{
"name" : "startsWith",
"kind" : "function",
"type" : "uint(Range doesThisStart, Ranges withOneOfThese)",
"line" : 3793}
]
}
,
{
"name" : "startsWith(alias pred = \"a == b\",R1,R2) if (isInputRange!(R1) && isInputRange!(R2) && is(typeof(binaryFun!(pred)(doesThisStart.front,withThis.front)) : bool))",
"kind" : "template",
"line" : 3863,
"members" : [
{
"name" : "startsWith",
"kind" : "function",
"type" : "bool(R1 doesThisStart, R2 withThis)",
"line" : 3863}
]
}
,
{
"name" : "startsWith(alias pred = \"a == b\",R,E) if (isInputRange!(R) && is(typeof(binaryFun!(pred)(doesThisStart.front,withThis)) : bool))",
"kind" : "template",
"line" : 3915,
"members" : [
{
"name" : "startsWith",
"kind" : "function",
"type" : "bool(R doesThisStart, E withThis)",
"line" : 3915}
]
}
,
{
"name" : "skipOver(alias pred = \"a == b\",R1,R2) if (is(typeof(binaryFun!(pred)(r1.front,r2.front))))",
"kind" : "template",
"line" : 3992,
"members" : [
{
"name" : "skipOver",
"kind" : "function",
"type" : "bool(ref R1 r1, R2 r2)",
"line" : 3992}
]
}
,
{
"name" : "skipOver(alias pred = \"a == b\",R,E) if (is(typeof(binaryFun!(pred)(r.front,e))))",
"kind" : "template",
"line" : 4018,
"members" : [
{
"name" : "skipOver",
"kind" : "function",
"type" : "bool(ref R r, E e)",
"line" : 4018}
]
}
,
{
"name" : "skipAll(alias pred = \"a == b\",R,Es...)",
"kind" : "template",
"line" : 4037,
"members" : [
{
"name" : "skipAll",
"kind" : "function",
"type" : "void(ref R r, Es es)",
"line" : 4037}
]
}
,
{
"name" : "endsWith(alias pred = \"a == b\",Range,Ranges...) if (isInputRange!(Range) && Ranges.length > 1 && is(typeof(.endsWith!(pred)(doesThisEnd,withOneOfThese[0])) : bool) && is(typeof(.endsWith!(pred)(doesThisEnd,withOneOfThese[1..__dollar])) : uint))",
"kind" : "template",
"line" : 4079,
"members" : [
{
"name" : "endsWith",
"kind" : "function",
"type" : "uint(Range doesThisEnd, Ranges withOneOfThese)",
"line" : 4079}
]
}
,
{
"name" : "endsWith(alias pred = \"a == b\",R1,R2) if (isInputRange!(R1) && isInputRange!(R2) && is(typeof(binaryFun!(pred)(doesThisEnd.back,withThis.back)) : bool))",
"kind" : "template",
"line" : 4147,
"members" : [
{
"name" : "endsWith",
"kind" : "function",
"type" : "bool(R1 doesThisEnd, R2 withThis)",
"line" : 4147}
]
}
,
{
"name" : "endsWith(alias pred = \"a == b\",R,E) if (isInputRange!(R) && is(typeof(binaryFun!(pred)(doesThisEnd.back,withThis)) : bool))",
"kind" : "template",
"line" : 4198,
"members" : [
{
"name" : "endsWith",
"kind" : "function",
"type" : "bool(R doesThisEnd, E withThis)",
"line" : 4198}
]
}
,
{
"name" : "findAdjacent(alias pred = \"a == b\",Range) if (isForwardRange!(Range))",
"kind" : "template",
"line" : 4301,
"members" : [
{
"name" : "findAdjacent",
"kind" : "function",
"type" : "Range(Range r)",
"line" : 4301}
]
}
,
{
"name" : "findAmong(alias pred = \"a == b\",Range1,Range2) if (isInputRange!(Range1) && isForwardRange!(Range2))",
"kind" : "template",
"line" : 4350,
"members" : [
{
"name" : "findAmong",
"kind" : "function",
"type" : "Range1(Range1 seq, Range2 choices)",
"line" : 4350}
]
}
,
{
"name" : "count(alias pred = \"a == b\",Range,E) if (isInputRange!(Range) && is(typeof(binaryFun!(pred)(r.front,value)) == bool))",
"kind" : "template",
"line" : 4400,
"members" : [
{
"name" : "count",
"kind" : "function",
"type" : "size_t(Range r, E value)",
"line" : 4400}
]
}
,
{
"name" : "count(alias pred = \"a == b\",R1,R2) if (isInputRange!(R1) && isForwardRange!(R2) && is(typeof(binaryFun!(pred)(haystack,needle)) == bool))",
"kind" : "template",
"line" : 4434,
"members" : [
{
"name" : "count",
"kind" : "function",
"type" : "size_t(R1 haystack, R2 needle)",
"line" : 4434}
]
}
,
{
"name" : "count(alias pred = \"true\",Range) if (isInputRange!(Range))",
"kind" : "template",
"line" : 4453,
"members" : [
{
"name" : "count",
"kind" : "function",
"type" : "size_t(Range r)",
"line" : 4453}
]
}
,
{
"name" : "balancedParens(Range,E) if (isInputRange!(Range) && is(typeof(r.front == lPar)))",
"kind" : "template",
"line" : 4492,
"members" : [
{
"name" : "balancedParens",
"kind" : "function",
"type" : "bool(Range r, E lPar, E rPar, size_t maxNestingLevel = size_t.max)",
"line" : 4492}
]
}
,
{
"name" : "equal(alias pred = \"a == b\",Range1,Range2) if (isInputRange!(Range1) && isInputRange!(Range2) && is(typeof(binaryFun!(pred)(r1.front,r2.front))))",
"kind" : "template",
"line" : 4550,
"members" : [
{
"name" : "equal",
"kind" : "function",
"type" : "bool(Range1 r1, Range2 r2)",
"line" : 4550}
]
}
,
{
"name" : "cmp(alias pred = \"a < b\",R1,R2) if (isInputRange!(R1) && isInputRange!(R2) && !(isSomeString!(R1) && isSomeString!(R2)))",
"kind" : "template",
"line" : 4599,
"members" : [
{
"name" : "cmp",
"kind" : "function",
"type" : "int(R1 r1, R2 r2)",
"line" : 4599}
]
}
,
{
"name" : "cmp(alias pred = \"a < b\",R1,R2) if (isSomeString!(R1) && isSomeString!(R2))",
"kind" : "template",
"line" : 4613,
"members" : [
{
"name" : "cmp",
"kind" : "function",
"type" : "int(R1 r1, R2 r2)",
"line" : 4613}
]
}
,
{
"name" : "MinType(T...)",
"kind" : "template",
"line" : 4698,
"members" : [
]
}
,
{
"name" : "min(T1,T2,T...)",
"kind" : "template",
"line" : 4725,
"members" : [
{
"name" : "min",
"kind" : "function",
"type" : "MinType!(T1,T2,T)(T1 a, T2 b, T xs)",
"line" : 4725}
]
}
,
{
"name" : "MaxType(T...)",
"kind" : "template",
"line" : 4766,
"members" : [
]
}
,
{
"name" : "max(T1,T2,T...)",
"kind" : "template",
"line" : 4802,
"members" : [
{
"name" : "max",
"kind" : "function",
"type" : "MaxType!(T1,T2,T)(T1 a, T2 b, T xs)",
"line" : 4802}
]
}
,
{
"name" : "minCount(alias pred = \"a < b\",Range)",
"kind" : "template",
"line" : 4858,
"members" : [
{
"name" : "minCount",
"kind" : "function",
"type" : "Tuple!(ElementType!(Range),size_t)(Range range)",
"line" : 4858}
]
}
,
{
"name" : "minPos(alias pred = \"a < b\",Range)",
"kind" : "template",
"line" : 4909,
"members" : [
{
"name" : "minPos",
"kind" : "function",
"type" : "Range(Range range)",
"line" : 4909}
]
}
,
{
"name" : "mismatch(alias pred = \"a == b\",Range1,Range2) if (isInputRange!(Range1) && isInputRange!(Range2))",
"kind" : "template",
"line" : 4954,
"members" : [
{
"name" : "mismatch",
"kind" : "function",
"type" : "Tuple!(Range1,Range2)(Range1 r1, Range2 r2)",
"line" : 4954}
]
}
,
{
"name" : "EditOp",
"kind" : "enum",
"line" : 4998,
"base" : "char",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 5001}
,
{
"name" : "substitute",
"kind" : "enum member",
"line" : 5003}
,
{
"name" : "insert",
"kind" : "enum member",
"line" : 5005}
,
{
"name" : "remove",
"kind" : "enum member",
"line" : 5007}
]
}
,
{
"name" : "Levenshtein(Range,alias equals,CostType = size_t)",
"kind" : "struct",
"line" : 5011,
"members" : [
{
"name" : "Levenshtein",
"kind" : "struct",
"line" : 5011,
"members" : [
{
"name" : "deletionIncrement",
"kind" : "function",
"type" : "void(CostType n)",
"line" : 5012}
,
{
"name" : "insertionIncrement",
"kind" : "function",
"type" : "void(CostType n)",
"line" : 5018}
,
{
"name" : "distance",
"kind" : "function",
"type" : "CostType(Range s, Range t)",
"line" : 5024}
,
{
"name" : "path",
"kind" : "function",
"type" : "EditOp[](Range s, Range t)",
"line" : 5056}
,
{
"name" : "path",
"kind" : "function",
"type" : "EditOp[]()",
"line" : 5062}
,
{
"name" : "_deletionIncrement",
"kind" : "variable",
"type" : "CostType",
"line" : 5096}
,
{
"name" : "_insertionIncrement",
"kind" : "variable",
"type" : "CostType",
"line" : 5097}
,
{
"name" : "_substitutionIncrement",
"kind" : "variable",
"type" : "CostType",
"line" : 5098}
,
{
"name" : "_matrix",
"kind" : "variable",
"type" : "CostType[][]",
"line" : 5099}
,
{
"name" : "rows",
"kind" : "variable",
"type" : "size_t",
"line" : 5100}
,
{
"name" : "cols",
"kind" : "variable",
"type" : "size_t",
"line" : 5100}
,
{
"name" : "AllocMatrix",
"kind" : "function",
"type" : "void(size_t r, size_t c)",
"line" : 5102}
,
{
"name" : "InitMatrix",
"kind" : "function",
"type" : "void()",
"line" : 5112}
,
{
"name" : "min_index",
"kind" : "function",
"type" : "uint(CostType i0, CostType i1, CostType i2)",
"line" : 5122}
]
}
]
}
,
{
"name" : "levenshteinDistance(alias equals = \"a == b\",Range1,Range2) if (isForwardRange!(Range1) && isForwardRange!(Range2))",
"kind" : "template",
"line" : 5152,
"members" : [
{
"name" : "levenshteinDistance",
"kind" : "function",
"type" : "size_t(Range1 s, Range2 t)",
"line" : 5152}
]
}
,
{
"name" : "levenshteinDistanceAndPath(alias equals = \"a == b\",Range1,Range2) if (isForwardRange!(Range1) && isForwardRange!(Range2))",
"kind" : "template",
"line" : 5183,
"members" : [
{
"name" : "levenshteinDistanceAndPath",
"kind" : "function",
"type" : "Tuple!(size_t,EditOp[])(Range1 s, Range2 t)",
"line" : 5183}
]
}
,
{
"name" : "copy(Range1,Range2) if (isInputRange!(Range1) && isOutputRange!(Range2,ElementType!(Range1)))",
"kind" : "template",
"line" : 5252,
"members" : [
{
"name" : "copy",
"kind" : "function",
"type" : "Range2(Range1 source, Range2 target)",
"line" : 5252}
]
}
,
{
"name" : "swapRanges(Range1,Range2) if (isInputRange!(Range1) && isInputRange!(Range2) && hasSwappableElements!(Range1) && hasSwappableElements!(Range2) && is(ElementType!(Range1) == ElementType!(Range2)))",
"kind" : "template",
"line" : 5301,
"members" : [
{
"name" : "swapRanges",
"kind" : "function",
"type" : "Tuple!(Range1,Range2)(Range1 r1, Range2 r2)",
"line" : 5301}
]
}
,
{
"name" : "reverse(Range) if (isBidirectionalRange!(Range) && hasSwappableElements!(Range))",
"kind" : "template",
"line" : 5337,
"members" : [
{
"name" : "reverse",
"kind" : "function",
"type" : "void(Range r)",
"line" : 5337}
]
}
,
{
"name" : "bringToFront(Range1,Range2) if (isInputRange!(Range1) && isForwardRange!(Range2))",
"kind" : "template",
"line" : 5427,
"members" : [
{
"name" : "bringToFront",
"kind" : "function",
"type" : "size_t(Range1 front, Range2 back)",
"line" : 5427}
]
}
,
{
"name" : "SwapStrategy",
"kind" : "enum",
"line" : 5604,
"base" : "int",
"members" : [
{
"name" : "unstable",
"kind" : "enum member",
"line" : 5609}
,
{
"name" : "semistable",
"kind" : "enum member",
"line" : 5614}
,
{
"name" : "stable",
"kind" : "enum member",
"line" : 5619}
]
}
,
{
"name" : "remove(SwapStrategy s = SwapStrategy.stable,Range,Offset...) if (isBidirectionalRange!(Range) && hasLength!(Range) && s != SwapStrategy.stable && Offset.length >= 1)",
"kind" : "template",
"line" : 5696,
"members" : [
{
"name" : "remove",
"kind" : "function",
"type" : "Range(Range range, Offset offset)",
"line" : 5696}
]
}
,
{
"name" : "remove(SwapStrategy s = SwapStrategy.stable,Range,Offset...) if ((isForwardRange!(Range) && !isBidirectionalRange!(Range) || !hasLength!(Range) || s == SwapStrategy.stable) && Offset.length >= 1)",
"kind" : "template",
"line" : 5802,
"members" : [
{
"name" : "remove",
"kind" : "function",
"type" : "Range(Range range, Offset offset)",
"line" : 5802}
]
}
,
{
"name" : "remove(alias pred,SwapStrategy s = SwapStrategy.stable,Range) if (isBidirectionalRange!(Range))",
"kind" : "template",
"line" : 5889,
"members" : [
{
"name" : "remove",
"kind" : "function",
"type" : "Range(Range range)",
"line" : 5889}
]
}
,
{
"name" : "partition(alias predicate,SwapStrategy ss = SwapStrategy.unstable,Range) if (ss == SwapStrategy.stable && isRandomAccessRange!(Range) || ss != SwapStrategy.stable && isForwardRange!(Range))",
"kind" : "template",
"line" : 6069,
"members" : [
{
"name" : "partition",
"kind" : "function",
"type" : "Range(Range r)",
"line" : 6069}
]
}
,
{
"name" : "isPartitioned(alias pred,Range) if (isForwardRange!(Range))",
"kind" : "template",
"line" : 6199,
"members" : [
{
"name" : "isPartitioned",
"kind" : "function",
"type" : "bool(Range r)",
"line" : 6199}
]
}
,
{
"name" : "topN(alias less = \"a < b\",SwapStrategy ss = SwapStrategy.unstable,Range) if (isRandomAccessRange!(Range) && hasLength!(Range))",
"kind" : "template",
"line" : 6251,
"members" : [
{
"name" : "topN",
"kind" : "function",
"type" : "void(Range r, size_t nth)",
"line" : 6251}
]
}
,
{
"name" : "topN(alias less = \"a < b\",SwapStrategy ss = SwapStrategy.unstable,Range1,Range2) if (isRandomAccessRange!(Range1) && hasLength!(Range1) && isInputRange!(Range2) && is(ElementType!(Range1) == ElementType!(Range2)))",
"kind" : "template",
"line" : 6360,
"members" : [
{
"name" : "topN",
"kind" : "function",
"type" : "void(Range1 r1, Range2 r2)",
"line" : 6360}
]
}
,
{
"name" : "sort(alias less = \"a < b\",SwapStrategy ss = SwapStrategy.unstable,Range)",
"kind" : "template",
"line" : 6417,
"members" : [
{
"name" : "sort",
"kind" : "function",
"type" : "SortedRange!(Range,less)(Range r)",
"line" : 6417}
]
}
,
{
"name" : "getPivot(alias less,Range)",
"kind" : "template",
"line" : 6491,
"members" : [
{
"name" : "getPivot",
"kind" : "function",
"type" : "size_t(Range r)",
"line" : 6491}
]
}
,
{
"name" : "optimisticInsertionSort(alias less,Range)",
"kind" : "template",
"line" : 6533,
"members" : [
{
"name" : "optimisticInsertionSort",
"kind" : "function",
"type" : "void(Range r)",
"line" : 6533}
]
}
,
{
"name" : "swapAt(R)",
"kind" : "template",
"line" : 6568,
"members" : [
{
"name" : "swapAt",
"kind" : "function",
"type" : "void(R r, size_t i1, size_t i2)",
"line" : 6568}
]
}
,
{
"name" : "sortImpl(alias less,SwapStrategy ss,Range)",
"kind" : "template",
"line" : 6586,
"members" : [
{
"name" : "sortImpl",
"kind" : "function",
"type" : "void(Range r)",
"line" : 6586}
]
}
,
{
"name" : "schwartzSort(alias transform,alias less = \"a < b\",SwapStrategy ss = SwapStrategy.unstable,Range) if (isRandomAccessRange!(Range) && hasLength!(Range))",
"kind" : "template",
"line" : 6704,
"members" : [
{
"name" : "schwartzSort",
"kind" : "function",
"type" : "void(Range r)",
"line" : 6704}
]
}
,
{
"name" : "partialSort(alias less = \"a < b\",SwapStrategy ss = SwapStrategy.unstable,Range) if (isRandomAccessRange!(Range) && hasLength!(Range) && hasSlicing!(Range))",
"kind" : "template",
"line" : 6797,
"members" : [
{
"name" : "partialSort",
"kind" : "function",
"type" : "void(Range r, size_t n)",
"line" : 6797}
]
}
,
{
"name" : "completeSort(alias less = \"a < b\",SwapStrategy ss = SwapStrategy.unstable,Range1,Range2) if (hasLength!(Range2) && hasSlicing!(Range2))",
"kind" : "template",
"line" : 6833,
"members" : [
{
"name" : "completeSort",
"kind" : "function",
"type" : "void(SortedRange!(Range1,less) lhs, Range2 rhs)",
"line" : 6833}
]
}
,
{
"name" : "isSorted(alias less = \"a < b\",Range) if (isForwardRange!(Range))",
"kind" : "template",
"line" : 6879,
"members" : [
{
"name" : "isSorted",
"kind" : "function",
"type" : "bool(Range r)",
"line" : 6879}
]
}
,
{
"name" : "makeIndex(alias less = \"a < b\",SwapStrategy ss = SwapStrategy.unstable,Range,RangeIndex) if (isForwardRange!(Range) && isRandomAccessRange!(RangeIndex) && is(ElementType!(RangeIndex) : ElementType!(Range)*))",
"kind" : "template",
"line" : 6927,
"members" : [
{
"name" : "makeIndex",
"kind" : "function",
"type" : "void(Range r, RangeIndex index)",
"line" : 6927}
]
}
,
{
"name" : "makeIndex(alias less = \"a < b\",SwapStrategy ss = SwapStrategy.unstable,Range,RangeIndex) if (isRandomAccessRange!(Range) && isRandomAccessRange!(RangeIndex) && isIntegral!(ElementType!(RangeIndex)))",
"kind" : "template",
"line" : 6951,
"members" : [
{
"name" : "makeIndex",
"kind" : "function",
"type" : "void(Range r, RangeIndex index)",
"line" : 6951}
]
}
,
{
"name" : "SortOutput",
"kind" : "enum",
"line" : 7010,
"base" : "int",
"members" : [
{
"name" : "no",
"kind" : "enum member",
"line" : 7011}
,
{
"name" : "yes",
"kind" : "enum member",
"line" : 7012}
]
}
,
{
"name" : "topNIndex(alias less = \"a < b\",SwapStrategy ss = SwapStrategy.unstable,Range,RangeIndex) if (isIntegral!(ElementType!(RangeIndex)))",
"kind" : "template",
"line" : 7015,
"members" : [
{
"name" : "topNIndex",
"kind" : "function",
"type" : "void(Range r, RangeIndex index, SortOutput sorted = SortOutput.no)",
"line" : 7015}
]
}
,
{
"name" : "topNIndex(alias less = \"a < b\",SwapStrategy ss = SwapStrategy.unstable,Range,RangeIndex) if (is(ElementType!(RangeIndex) == ElementType!(Range)*))",
"kind" : "template",
"line" : 7039,
"members" : [
{
"name" : "topNIndex",
"kind" : "function",
"type" : "void(Range r, RangeIndex index, SortOutput sorted = SortOutput.no)",
"line" : 7039}
]
}
,
{
"name" : "canFind(alias pred = \"a == b\",Range,V) if (is(typeof(find!(pred)(range,value))))",
"kind" : "template",
"line" : 7359,
"members" : [
{
"name" : "canFind",
"kind" : "function",
"type" : "bool(Range range, V value)",
"line" : 7359}
]
}
,
{
"name" : "canFind(alias pred,Range) if (is(typeof(find!(pred)(range))))",
"kind" : "template",
"line" : 7384,
"members" : [
{
"name" : "canFind",
"kind" : "function",
"type" : "bool(Range range)",
"line" : 7384}
]
}
,
{
"name" : "canFindSorted(alias pred = \"a < b\",Range,V)",
"kind" : "template",
"line" : 7399,
"members" : [
{
"name" : "canFindSorted",
"kind" : "function",
"type" : "bool(Range range, V value)",
"line" : 7399}
]
}
,
{
"name" : "lowerBound(alias pred = \"a < b\",Range,V)",
"kind" : "template",
"line" : 7406,
"members" : [
{
"name" : "lowerBound",
"kind" : "function",
"type" : "Range(Range range, V value)",
"line" : 7406}
]
}
,
{
"name" : "upperBound(alias pred = \"a < b\",Range,V)",
"kind" : "template",
"line" : 7413,
"members" : [
{
"name" : "upperBound",
"kind" : "function",
"type" : "Range(Range range, V value)",
"line" : 7413}
]
}
,
{
"name" : "equalRange(alias pred = \"a < b\",Range,V)",
"kind" : "template",
"line" : 7420,
"members" : [
{
"name" : "equalRange",
"kind" : "function",
"type" : "Range(Range range, V value)",
"line" : 7420}
]
}
,
{
"name" : "topNCopy(alias less = \"a < b\",SRange,TRange) if (isInputRange!(SRange) && isRandomAccessRange!(TRange) && hasLength!(TRange) && hasSlicing!(TRange))",
"kind" : "template",
"line" : 7441,
"members" : [
{
"name" : "topNCopy",
"kind" : "function",
"type" : "TRange(SRange source, TRange target, SortOutput sorted = SortOutput.no)",
"line" : 7441}
]
}
,
{
"name" : "SetUnion(alias less = \"a < b\",Rs...) if (allSatisfy!(isInputRange,Rs))",
"kind" : "struct",
"line" : 7500,
"members" : [
{
"name" : "SetUnion",
"kind" : "struct",
"line" : 7500,
"members" : [
{
"name" : "_r",
"kind" : "variable",
"type" : "Rs",
"line" : 7502}
,
{
"name" : "comp",
"kind" : "alias",
"type" : "binaryFun!(less)",
"line" : 7503}
,
{
"name" : "_crt",
"kind" : "variable",
"type" : "uint",
"line" : 7504}
,
{
"name" : "adjustPosition(uint candidate = 0)",
"kind" : "template",
"line" : 7506,
"members" : [
{
"name" : "adjustPosition",
"kind" : "function",
"type" : "void()",
"line" : 7506}
]
}
,
{
"name" : "ElementType",
"kind" : "alias",
"type" : "CommonType!(staticMap!(.ElementType,Rs))",
"line" : 7536}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Rs rs)",
"line" : 7538}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 7544}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 7549}
,
{
"name" : "front",
"kind" : "function",
"type" : "ElementType()",
"line" : 7565}
]
}
]
}
,
{
"name" : "setUnion(alias less = \"a < b\",Rs...)",
"kind" : "template",
"line" : 7607,
"members" : [
{
"name" : "setUnion",
"kind" : "function",
"type" : "SetUnion!(less,Rs)(Rs rs)",
"line" : 7607}
]
}
,
{
"name" : "SetIntersection(alias less = \"a < b\",Rs...) if (allSatisfy!(isInputRange,Rs))",
"kind" : "struct",
"line" : 7646,
"members" : [
{
"name" : "SetIntersection",
"kind" : "struct",
"line" : 7646,
"members" : [
{
"name" : "_input",
"kind" : "variable",
"type" : "Rs",
"line" : 7649}
,
{
"name" : "comp",
"kind" : "alias",
"type" : "binaryFun!(less)",
"line" : 7650}
,
{
"name" : "ElementType",
"kind" : "alias",
"type" : "CommonType!(staticMap!(.ElementType,Rs))",
"line" : 7651}
,
{
"name" : "adjustPosition",
"kind" : "function",
"type" : "void()",
"line" : 7653}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Rs input)",
"line" : 7674}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 7681}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 7690}
,
{
"name" : "front",
"kind" : "function",
"type" : "ElementType()",
"line" : 7700}
]
}
]
}
,
{
"name" : "setIntersection(alias less = \"a < b\",Rs...) if (allSatisfy!(isInputRange,Rs))",
"kind" : "template",
"line" : 7722,
"members" : [
{
"name" : "setIntersection",
"kind" : "function",
"type" : "SetIntersection!(less,Rs)(Rs ranges)",
"line" : 7722}
]
}
,
{
"name" : "SetDifference(alias less = \"a < b\",R1,R2) if (isInputRange!(R1) && isInputRange!(R2))",
"kind" : "struct",
"line" : 7764,
"members" : [
{
"name" : "SetDifference",
"kind" : "struct",
"line" : 7764,
"members" : [
{
"name" : "r1",
"kind" : "variable",
"type" : "R1",
"line" : 7766}
,
{
"name" : "r2",
"kind" : "variable",
"type" : "R2",
"line" : 7767}
,
{
"name" : "comp",
"kind" : "alias",
"type" : "binaryFun!(less)",
"line" : 7768}
,
{
"name" : "adjustPosition",
"kind" : "function",
"type" : "void()",
"line" : 7770}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(R1 r1, R2 r2)",
"line" : 7789}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 7797}
,
{
"name" : "front",
"kind" : "function",
"type" : "ElementType!(R1)()",
"line" : 7803}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 7820}
]
}
]
}
,
{
"name" : "setDifference(alias less = \"a < b\",R1,R2)",
"kind" : "template",
"line" : 7824,
"members" : [
{
"name" : "setDifference",
"kind" : "function",
"type" : "SetDifference!(less,R1,R2)(R1 r1, R2 r2)",
"line" : 7824}
]
}
,
{
"name" : "SetSymmetricDifference(alias less = \"a < b\",R1,R2) if (isInputRange!(R1) && isInputRange!(R2))",
"kind" : "struct",
"line" : 7857,
"members" : [
{
"name" : "SetSymmetricDifference",
"kind" : "struct",
"line" : 7857,
"members" : [
{
"name" : "r1",
"kind" : "variable",
"type" : "R1",
"line" : 7859}
,
{
"name" : "r2",
"kind" : "variable",
"type" : "R2",
"line" : 7860}
,
{
"name" : "comp",
"kind" : "alias",
"type" : "binaryFun!(less)",
"line" : 7862}
,
{
"name" : "adjustPosition",
"kind" : "function",
"type" : "void()",
"line" : 7864}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(R1 r1, R2 r2)",
"line" : 7879}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 7887}
,
{
"name" : "front",
"kind" : "function",
"type" : "ElementType!(R1)()",
"line" : 7908}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "()",
"line" : 7930}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 7932}
]
}
]
}
,
{
"name" : "setSymmetricDifference(alias less = \"a < b\",R1,R2)",
"kind" : "template",
"line" : 7937,
"members" : [
{
"name" : "setSymmetricDifference",
"kind" : "function",
"type" : "SetSymmetricDifference!(less,R1,R2)(R1 r1, R2 r2)",
"line" : 7937}
]
}
,
{
"name" : "NWayUnion(alias less,RangeOfRanges)",
"kind" : "struct",
"line" : 8052,
"members" : [
{
"name" : "NWayUnion",
"kind" : "struct",
"line" : 8052,
"members" : [
{
"name" : "ElementType",
"kind" : "alias",
"type" : ".ElementType!(.ElementType!(RangeOfRanges))",
"line" : 8053}
,
{
"name" : "comp",
"kind" : "alias",
"type" : "binaryFun!(less)",
"line" : 8054}
,
{
"name" : "_ror",
"kind" : "variable",
"type" : "RangeOfRanges",
"line" : 8055}
,
{
"name" : "compFront",
"kind" : "function",
"type" : "bool(.ElementType!(RangeOfRanges) a, .ElementType!(RangeOfRanges) b)",
"line" : 8056}
,
{
"name" : "_heap",
"kind" : "variable",
"type" : "BinaryHeap!(RangeOfRanges,compFront)",
"line" : 8062}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(RangeOfRanges ror)",
"line" : 8064}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 8073}
,
{
"name" : "front",
"kind" : "function",
"type" : "ElementType()",
"line" : 8075}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 8080}
]
}
]
}
,
{
"name" : "nWayUnion(alias less = \"a < b\",RangeOfRanges)",
"kind" : "template",
"line" : 8098,
"members" : [
{
"name" : "nWayUnion",
"kind" : "function",
"type" : "NWayUnion!(less,RangeOfRanges)(RangeOfRanges ror)",
"line" : 8098}
]
}
,
{
"name" : "largestPartialIntersection(alias less = \"a < b\",RangeOfRanges,Range)",
"kind" : "template",
"line" : 8173,
"members" : [
{
"name" : "largestPartialIntersection",
"kind" : "function",
"type" : "void(RangeOfRanges ror, Range tgt, SortOutput sorted = SortOutput.no)",
"line" : 8173}
]
}
,
{
"name" : "largestPartialIntersectionWeighted(alias less = \"a < b\",RangeOfRanges,Range,WeightsAA)",
"kind" : "template",
"line" : 8214,
"members" : [
{
"name" : "largestPartialIntersectionWeighted",
"kind" : "function",
"type" : "void(RangeOfRanges ror, Range tgt, WeightsAA weights, SortOutput sorted = SortOutput.no)",
"line" : 8214}
]
}
]
}
,
{
"name" : "std.array",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/array.d",
"members" : [
{
"name" : "array(Range) if (isIterable!(Range) && !isNarrowString!(Range))",
"kind" : "template",
"line" : 34,
"members" : [
{
"name" : "array",
"kind" : "function",
"type" : "ForeachType!(Range)[](Range r)",
"line" : 34}
]
}
,
{
"name" : "array(String) if (isNarrowString!(String))",
"kind" : "template",
"line" : 84,
"members" : [
{
"name" : "array",
"kind" : "function",
"type" : "ElementType!(String)[](String str)",
"line" : 84}
]
}
,
{
"name" : "blockAttribute(T)",
"kind" : "template",
"line" : 147,
"members" : [
]
}
,
{
"name" : "nDimensions(T)",
"kind" : "template",
"line" : 160,
"members" : [
]
}
,
{
"name" : "uninitializedArray(T,I...) if (allSatisfy!(isIntegral,I))",
"kind" : "template",
"line" : 194,
"members" : [
{
"name" : "uninitializedArray",
"kind" : "function",
"type" : "(I sizes)",
"line" : 194}
]
}
,
{
"name" : "minimallyInitializedArray(T,I...) if (allSatisfy!(isIntegral,I))",
"kind" : "template",
"line" : 215,
"members" : [
{
"name" : "minimallyInitializedArray",
"kind" : "function",
"type" : "@trusted (I sizes)",
"line" : 215}
]
}
,
{
"name" : "arrayAllocImpl(bool minimallyInitialized,T,I...) if (allSatisfy!(isIntegral,I))",
"kind" : "template",
"line" : 234,
"members" : [
{
"name" : "arrayAllocImpl",
"kind" : "function",
"type" : "(I sizes)",
"line" : 234}
]
}
,
{
"name" : "empty(T)",
"kind" : "template",
"line" : 278,
"members" : [
{
"name" : "empty",
"kind" : "function",
"type" : "pure nothrow @safe bool(in T[] a)",
"line" : 278}
]
}
,
{
"name" : "save(T)",
"kind" : "template",
"line" : 305,
"members" : [
{
"name" : "save",
"kind" : "function",
"type" : "pure nothrow @safe T[](T[] a)",
"line" : 305}
]
}
,
{
"name" : "popFront(A) if (!isNarrowString!(A) && isDynamicArray!(A) && isMutable!(A) && !is(A == void[]))",
"kind" : "template",
"line" : 326,
"members" : [
{
"name" : "popFront",
"kind" : "function",
"type" : "void(ref A a)",
"line" : 326}
]
}
,
{
"name" : "popFront(A) if (isNarrowString!(A) && isMutable!(A) && !isStaticArray!(A))",
"kind" : "template",
"line" : 345,
"members" : [
{
"name" : "popFront",
"kind" : "function",
"type" : "void(ref A a)",
"line" : 345}
]
}
,
{
"name" : "popBack(A) if (isDynamicArray!(A) && !isNarrowString!(A) && isMutable!(A) && !is(A == void[]))",
"kind" : "template",
"line" : 393,
"members" : [
{
"name" : "popBack",
"kind" : "function",
"type" : "void(ref A a)",
"line" : 393}
]
}
,
{
"name" : "popBack(A) if (isNarrowString!(A) && isMutable!(A))",
"kind" : "template",
"line" : 410,
"members" : [
{
"name" : "popBack",
"kind" : "function",
"type" : "void(ref A a)",
"line" : 410}
]
}
,
{
"name" : "front(T) if (!isNarrowString!(T[]) && !is(T[] == void[]))",
"kind" : "template",
"line" : 458,
"members" : [
{
"name" : "front",
"kind" : "function",
"type" : "T(T[] a)",
"line" : 458}
]
}
,
{
"name" : "front(A) if (isNarrowString!(A))",
"kind" : "template",
"line" : 466,
"members" : [
{
"name" : "front",
"kind" : "function",
"type" : "dchar(A a)",
"line" : 466}
]
}
,
{
"name" : "back(T) if (!isNarrowString!(T[]))",
"kind" : "template",
"line" : 496,
"members" : [
{
"name" : "back",
"kind" : "function",
"type" : "T(T[] a)",
"line" : 496}
]
}
,
{
"name" : "back(A) if (isDynamicArray!(A) && isNarrowString!(A))",
"kind" : "template",
"line" : 512,
"members" : [
{
"name" : "back",
"kind" : "function",
"type" : "dchar(A a)",
"line" : 512}
]
}
,
{
"name" : "overlap(T)",
"kind" : "template",
"line" : 538,
"members" : [
{
"name" : "overlap",
"kind" : "function",
"type" : "pure nothrow @trusted T[](T[] r1, T[] r2)",
"line" : 538}
]
}
,
{
"name" : "insertInPlace(T,Range) if (isInputRange!(Range) && (is(ElementType!(Range) : T) || isSomeString!(T[]) && is(ElementType!(Range) : dchar)))",
"kind" : "template",
"line" : 684,
"members" : [
{
"name" : "insertInPlace",
"kind" : "function",
"type" : "void(ref T[] array, size_t pos, Range stuff)",
"line" : 684}
]
}
,
{
"name" : "insertInPlace(T,U...) if (isSomeString!(T[]) && allSatisfy!(isCharOrString,U))",
"kind" : "template",
"line" : 693,
"members" : [
{
"name" : "insertInPlace",
"kind" : "function",
"type" : "void(ref T[] array, size_t pos, U stuff)",
"line" : 693}
]
}
,
{
"name" : "insertInPlace(T,U...) if (!isSomeString!(T[]) && allSatisfy!(isInputRangeOrConvertible!(T),U))",
"kind" : "template",
"line" : 702,
"members" : [
{
"name" : "insertInPlace",
"kind" : "function",
"type" : "void(ref T[] array, size_t pos, U stuff)",
"line" : 702}
]
}
,
{
"name" : "staticFrontConvertible(E,U...)",
"kind" : "template",
"line" : 711,
"members" : [
]
}
,
{
"name" : "staticConvertible(E,U...)",
"kind" : "template",
"line" : 722,
"members" : [
]
}
,
{
"name" : "isCharOrString(T)",
"kind" : "template",
"line" : 732,
"members" : [
{
"name" : "isCharOrString",
"kind" : "variable",
"line" : 734}
]
}
,
{
"name" : "isInputRangeOrConvertible(E)",
"kind" : "template",
"line" : 737,
"members" : [
{
"name" : "isInputRangeOrConvertible(R)",
"kind" : "template",
"line" : 739,
"members" : [
{
"name" : "isInputRangeOrConvertible",
"kind" : "variable",
"line" : 742}
]
}
]
}
,
{
"name" : "makeRangeTuple(E,U...) if (U.length > 0 && is(U[0] : E))",
"kind" : "template",
"line" : 748,
"members" : [
{
"name" : "makeRangeTuple",
"kind" : "function",
"type" : "(E[] place, U stuff)",
"line" : 748}
]
}
,
{
"name" : "makeRangeTuple(E,U...) if (U.length > 0 && isInputRange!(U[0]) && is(ElementType!(U[0]) : E))",
"kind" : "template",
"line" : 762,
"members" : [
{
"name" : "makeRangeTuple",
"kind" : "function",
"type" : "(E[] place, U stuff)",
"line" : 762}
]
}
,
{
"name" : "insertInPlaceImpl(T,Range) if (isInputRange!(Range) && (is(ElementType!(Range) : T) || isSomeString!(T[]) && is(ElementType!(Range) : dchar)))",
"kind" : "template",
"line" : 772,
"members" : [
{
"name" : "insertInPlaceImpl",
"kind" : "function",
"type" : "void(ref T[] array, size_t pos, Range stuff)",
"line" : 772}
]
}
,
{
"name" : "insert(T,Range) if (isInputRange!(Range) && is(ElementEncodingType!(Range) : T))",
"kind" : "template",
"line" : 915,
"members" : [
{
"name" : "insert",
"kind" : "function",
"type" : "void(ref T[] array, size_t pos, Range stuff)",
"line" : 915}
]
}
,
{
"name" : "insert(T)",
"kind" : "template",
"line" : 924,
"members" : [
{
"name" : "insert",
"kind" : "function",
"type" : "void(ref T[] array, size_t pos, T stuff)",
"line" : 924}
]
}
,
{
"name" : "sameHead(T)",
"kind" : "template",
"line" : 936,
"members" : [
{
"name" : "sameHead",
"kind" : "function",
"type" : "bool(in T[] lhs, in T[] rhs)",
"line" : 936}
]
}
,
{
"name" : "replicate(S) if (isDynamicArray!(S))",
"kind" : "template",
"line" : 946,
"members" : [
{
"name" : "replicate",
"kind" : "function",
"type" : "S(S s, size_t n)",
"line" : 946}
]
}
,
{
"name" : "replicate(S) if (isInputRange!(S) && !isDynamicArray!(S))",
"kind" : "template",
"line" : 967,
"members" : [
{
"name" : "replicate",
"kind" : "function",
"type" : "ElementType!(S)[](S s, size_t n)",
"line" : 967}
]
}
,
{
"name" : "split(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 993,
"members" : [
{
"name" : "split",
"kind" : "function",
"type" : "S[](S s)",
"line" : 993}
]
}
,
{
"name" : "splitter(String) if (isSomeString!(String))",
"kind" : "template",
"line" : 1044,
"members" : [
{
"name" : "splitter",
"kind" : "function",
"type" : "(String s)",
"line" : 1044}
]
}
,
{
"name" : "split(S1,S2) if (isForwardRange!(Unqual!(S1)) && isForwardRange!(S2))",
"kind" : "template",
"line" : 1060,
"members" : [
{
"name" : "split",
"kind" : "function",
"type" : "Unqual!(S1)[](S1 s, S2 delim)",
"line" : 1060}
]
}
,
{
"name" : "join(RoR,R) if (isInputRange!(RoR) && isInputRange!(ElementType!(RoR)) && isForwardRange!(R))",
"kind" : "template",
"line" : 1143,
"members" : [
{
"name" : "join",
"kind" : "function",
"type" : "ElementEncodingType!(ElementType!(RoR))[](RoR ror, R sep)",
"line" : 1143}
]
}
,
{
"name" : "join(RoR) if (isInputRange!(RoR) && isInputRange!(ElementType!(RoR)))",
"kind" : "template",
"line" : 1165,
"members" : [
{
"name" : "join",
"kind" : "function",
"type" : "ElementEncodingType!(ElementType!(RoR))[](RoR ror)",
"line" : 1165}
]
}
,
{
"name" : "replace(R1,R2,R3) if (isDynamicArray!(R1) && isForwardRange!(R2) && isForwardRange!(R3) && (hasLength!(R3) || isSomeString!(R3)))",
"kind" : "template",
"line" : 1208,
"members" : [
{
"name" : "replace",
"kind" : "function",
"type" : "R1(R1 subject, R2 from, R3 to)",
"line" : 1208}
]
}
,
{
"name" : "replaceInPlace(T,Range) if (isDynamicArray!(Range) && is(ElementEncodingType!(Range) : T) && !is(T == const(T)) && !is(T == immutable(T)))",
"kind" : "template",
"line" : 1374,
"members" : [
{
"name" : "replaceInPlace",
"kind" : "function",
"type" : "void(ref T[] array, size_t from, size_t to, Range stuff)",
"line" : 1374}
]
}
,
{
"name" : "replaceInPlace(T,Range) if (isInputRange!(Range) && (!isDynamicArray!(Range) && is(ElementType!(Range) : T) || isDynamicArray!(Range) && is(ElementType!(Range) : T) && (is(T == const(T)) || is(T == immutable(T))) || isSomeString!(T[]) && is(ElementType!(Range) : dchar)))",
"kind" : "template",
"line" : 1404,
"members" : [
{
"name" : "replaceInPlace",
"kind" : "function",
"type" : "void(ref T[] array, size_t from, size_t to, Range stuff)",
"line" : 1404}
]
}
,
{
"name" : "replace(T,Range) if (isDynamicArray!(Range) && is(ElementType!(Range) : T))",
"kind" : "template",
"line" : 1503,
"members" : [
{
"name" : "replace",
"kind" : "function",
"type" : "void(ref T[] array, size_t from, size_t to, Range stuff)",
"line" : 1503}
]
}
,
{
"name" : "replaceFirst(R1,R2,R3) if (isDynamicArray!(R1) && isForwardRange!(R2) && isInputRange!(R3))",
"kind" : "template",
"line" : 1516,
"members" : [
{
"name" : "replaceFirst",
"kind" : "function",
"type" : "R1(R1 subject, R2 from, R3 to)",
"line" : 1516}
]
}
,
{
"name" : "replaceSlice(T)",
"kind" : "template",
"line" : 1561,
"members" : [
{
"name" : "replaceSlice",
"kind" : "function",
"type" : "T[](T[] s, in T[] slice, in T[] replacement)",
"line" : 1561}
]
}
,
{
"name" : "Appender(A : T[],T)",
"kind" : "struct",
"line" : 1613,
"members" : [
{
"name" : "Appender",
"kind" : "struct",
"line" : 1613,
"members" : [
{
"name" : "Data",
"kind" : "struct",
"line" : 1615,
"members" : [
{
"name" : "capacity",
"kind" : "variable",
"type" : "size_t",
"line" : 1616}
,
{
"name" : "arr",
"kind" : "variable",
"type" : "Unqual!(T)[]",
"line" : 1617}
]
}
,
{
"name" : "_data",
"kind" : "variable",
"type" : "Data*",
"line" : 1620}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(T[] arr)",
"line" : 1628}
,
{
"name" : "reserve",
"kind" : "function",
"type" : "void(size_t newCapacity)",
"line" : 1653}
,
{
"name" : "capacity",
"kind" : "function",
"type" : "size_t()",
"line" : 1694}
,
{
"name" : "data",
"kind" : "function",
"type" : "T[]()",
"line" : 1702}
,
{
"name" : "ensureAddable",
"kind" : "function",
"type" : "void(size_t nelems)",
"line" : 1708}
,
{
"name" : "newCapacity",
"kind" : "function",
"type" : "size_t(size_t newlength)",
"line" : 1748}
,
{
"name" : "put(U) if (isImplicitlyConvertible!(U,T) || isSomeChar!(T) && isSomeChar!(U))",
"kind" : "template",
"line" : 1761,
"members" : [
{
"name" : "put",
"kind" : "function",
"type" : "void(U item)",
"line" : 1761}
]
}
,
{
"name" : "put(Range) if (isInputRange!(Unqual!(Range)) && !isInputRange!(Range))",
"kind" : "template",
"line" : 1781,
"members" : [
{
"name" : "put",
"kind" : "function",
"type" : "void(Range items)",
"line" : 1781}
]
}
,
{
"name" : "put(Range) if (isInputRange!(Range) && is(typeof(Appender.init.put(items.front))))",
"kind" : "template",
"line" : 1790,
"members" : [
{
"name" : "put",
"kind" : "function",
"type" : "void(Range items)",
"line" : 1790}
]
}
]
}
]
}
,
{
"name" : "RefAppender(A : T[],T)",
"kind" : "struct",
"line" : 1880,
"members" : [
{
"name" : "RefAppender",
"kind" : "struct",
"line" : 1880,
"members" : [
{
"name" : "impl",
"kind" : "variable",
"type" : "Appender!(A,T)",
"line" : 1883}
,
{
"name" : "arr",
"kind" : "variable",
"type" : "T[]*",
"line" : 1884}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(T[]* arr)",
"line" : 1897}
,
{
"name" : "opDispatch(string fn,Args...) if (is(typeof(mixin(\"impl.\" ~ fn ~ \"(args)\"))))",
"kind" : "template",
"line" : 1903,
"members" : [
{
"name" : "opDispatch",
"kind" : "function",
"type" : "(Args args)",
"line" : 1903}
]
}
,
{
"name" : "capacity",
"kind" : "function",
"type" : "size_t()",
"line" : 1915}
,
{
"name" : "data",
"kind" : "function",
"type" : "T[]()",
"line" : 1923}
]
}
]
}
,
{
"name" : "appender(A : E[],E)",
"kind" : "template",
"line" : 1933,
"members" : [
{
"name" : "appender",
"kind" : "function",
"type" : "Appender!(E[])(A array = null)",
"line" : 1933}
]
}
,
{
"name" : "appender(A : E[]*,E)",
"kind" : "template",
"line" : 1973,
"members" : [
{
"name" : "appender",
"kind" : "function",
"type" : "RefAppender!(E[])(A array)",
"line" : 1973}
]
}
,
{
"name" : "SimpleSlice(T)",
"kind" : "struct",
"line" : 2003,
"members" : [
{
"name" : "SimpleSlice",
"kind" : "struct",
"line" : 2003,
"members" : [
{
"name" : "_b",
"kind" : "variable",
"type" : "T*",
"line" : 2004}
,
{
"name" : "_e",
"kind" : "variable",
"type" : "T*",
"line" : 2004}
,
{
"name" : "__ctor(U...)",
"kind" : "template",
"line" : 2006,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(U values)",
"line" : 2006}
]
}
,
{
"name" : "opAssign(R)",
"kind" : "template",
"line" : 2013,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(R anotherSlice)",
"line" : 2013}
]
}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 2039}
,
{
"name" : "front",
"kind" : "function",
"type" : "T()",
"line" : 2046}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 2053}
,
{
"name" : "back",
"kind" : "function",
"type" : "T()",
"line" : 2060}
,
{
"name" : "popBack",
"kind" : "function",
"type" : "void()",
"line" : 2067}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "T(size_t n)",
"line" : 2074}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "const const(T)(size_t n)",
"line" : 2081}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "void(T value, size_t n)",
"line" : 2088}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "SimpleSliceLvalue!(T)()",
"line" : 2095}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "SimpleSliceLvalue!(T)(size_t x, size_t y)",
"line" : 2104}
,
{
"name" : "length",
"kind" : "function",
"type" : "const size_t()",
"line" : 2114}
,
{
"name" : "length",
"kind" : "function",
"type" : "void(size_t newLength)",
"line" : 2123}
,
{
"name" : "opCat(R)",
"kind" : "template",
"line" : 2133,
"members" : [
{
"name" : "opCat",
"kind" : "function",
"type" : "SimpleSlice(R another)",
"line" : 2133}
]
}
,
{
"name" : "opCatAssign(R)",
"kind" : "template",
"line" : 2146,
"members" : [
{
"name" : "opCatAssign",
"kind" : "function",
"type" : "void(R another)",
"line" : 2146}
]
}
]
}
]
}
,
{
"name" : "SimpleSliceLvalue(T)",
"kind" : "struct",
"line" : 2155,
"members" : [
{
"name" : "SimpleSliceLvalue",
"kind" : "struct",
"line" : 2155,
"members" : [
{
"name" : "_s",
"kind" : "variable",
"type" : "SimpleSlice!(T)",
"line" : 2156}
,
{
"name" : "opAssign(R)",
"kind" : "template",
"line" : 2159,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(R anotherSlice)",
"line" : 2159}
]
}
]
}
]
}
]
}
,
{
"name" : "std.ascii",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/ascii.d",
"members" : [
{
"name" : "hexDigits",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 30}
,
{
"name" : "fullHexDigits",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 31}
,
{
"name" : "digits",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 32}
,
{
"name" : "octalDigits",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 33}
,
{
"name" : "lowercase",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 34}
,
{
"name" : "letters",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 36}
,
{
"name" : "uppercase",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 37}
,
{
"name" : "whitespace",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 38}
,
{
"name" : "newline",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 49}
,
{
"name" : "isAlphaNum",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 58}
,
{
"name" : "isAlpha",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 76}
,
{
"name" : "isLower",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 94}
,
{
"name" : "isUpper",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 112}
,
{
"name" : "isDigit",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 130}
,
{
"name" : "isOctalDigit",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 148}
,
{
"name" : "isHexDigit",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 166}
,
{
"name" : "isWhite",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 185}
,
{
"name" : "isControl",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 203}
,
{
"name" : "isPunctuation",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 223}
,
{
"name" : "isGraphical",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 244}
,
{
"name" : "isPrintable",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 264}
,
{
"name" : "isASCII",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 285}
,
{
"name" : "toLower",
"kind" : "function",
"type" : "pure nothrow @safe dchar(dchar c)",
"line" : 303}
,
{
"name" : "toUpper",
"kind" : "function",
"type" : "pure nothrow @safe dchar(dchar c)",
"line" : 330}
,
{
"name" : "_SPC",
"kind" : "enum member",
"line" : 360}
,
{
"name" : "_CTL",
"kind" : "enum member",
"line" : 361}
,
{
"name" : "_BLK",
"kind" : "enum member",
"line" : 362}
,
{
"name" : "_HEX",
"kind" : "enum member",
"line" : 363}
,
{
"name" : "_UC",
"kind" : "enum member",
"line" : 364}
,
{
"name" : "_LC",
"kind" : "enum member",
"line" : 365}
,
{
"name" : "_PNC",
"kind" : "enum member",
"line" : 366}
,
{
"name" : "_DIG",
"kind" : "enum member",
"line" : 367}
,
{
"name" : "_ALP",
"kind" : "enum member",
"line" : 368}
,
{
"name" : "_ctype",
"kind" : "variable",
"type" : "immutable(ubyte[128LU])",
"line" : 371}
]
}
,
{
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/atomics.d",
"members" : [
]
}
,
{
"name" : "std.base64",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/base64.d",
"members" : [
{
"name" : "Base64",
"kind" : "alias",
"line" : 44}
,
{
"name" : "Base64URL",
"kind" : "alias",
"line" : 50}
,
{
"name" : "Base64Impl(char Map62th,char Map63th,char Padding = '=')",
"kind" : "template",
"line" : 65,
"members" : [
{
"name" : "NoPadding",
"kind" : "variable",
"line" : 67}
,
{
"name" : "EncodeMap",
"kind" : "variable",
"line" : 90}
,
{
"name" : "encodeLength",
"kind" : "function",
"type" : "size_t(in size_t sourceLength)",
"line" : 103}
,
{
"name" : "encode(R1,R2) if (isArray!(R1) && is(ElementType!(R1) : ubyte) && is(R2 == char[]))",
"kind" : "template",
"line" : 126,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "char[](in R1 source, R2 buffer)",
"line" : 126}
]
}
,
{
"name" : "encode(R1,R2) if (!isArray!(R1) && isInputRange!(R1) && is(ElementType!(R1) : ubyte) && hasLength!(R1) && is(R2 == char[]))",
"kind" : "template",
"line" : 187,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "char[](R1 source, R2 buffer)",
"line" : 187}
]
}
,
{
"name" : "encode(R1,R2) if (isArray!(R1) && is(ElementType!(R1) : ubyte) && !is(R2 == char[]))",
"kind" : "template",
"line" : 266,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "size_t(in R1 source, R2 range)",
"line" : 266}
]
}
,
{
"name" : "encode(R1,R2) if (!isArray!(R1) && isInputRange!(R1) && is(ElementType!(R1) : ubyte) && hasLength!(R1) && !is(R2 == char[]) && isOutputRange!(R2,char))",
"kind" : "template",
"line" : 329,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "size_t(R1 source, R2 range)",
"line" : 329}
]
}
,
{
"name" : "encode(Range) if (isArray!(Range) && is(ElementType!(Range) : ubyte))",
"kind" : "template",
"line" : 403,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "char[](Range source)",
"line" : 403}
]
}
,
{
"name" : "encode(Range) if (!isArray!(Range) && isInputRange!(Range) && is(ElementType!(Range) : ubyte) && hasLength!(Range))",
"kind" : "template",
"line" : 412,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "char[](Range source)",
"line" : 412}
]
}
,
{
"name" : "Encoder(Range) if (isInputRange!(Range) && (is(ElementType!(Range) : const(ubyte)[]) || is(ElementType!(Range) : const(char)[])))",
"kind" : "struct",
"line" : 424,
"members" : [
{
"name" : "Encoder",
"kind" : "struct",
"line" : 424,
"members" : [
{
"name" : "range_",
"kind" : "variable",
"type" : "Range",
"line" : 426}
,
{
"name" : "buffer_",
"kind" : "variable",
"type" : "char[]",
"line" : 427}
,
{
"name" : "encoded_",
"kind" : "variable",
"type" : "char[]",
"line" : 427}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Range range)",
"line" : 431}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 445}
,
{
"name" : "front",
"kind" : "function",
"type" : "char[]()",
"line" : 458}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 470}
,
{
"name" : "doEncoding",
"kind" : "function",
"type" : "void()",
"line" : 509}
]
}
]
}
,
{
"name" : "Encoder(Range) if (isInputRange!(Range) && is(ElementType!(Range) : ubyte))",
"kind" : "struct",
"line" : 525,
"members" : [
{
"name" : "Encoder",
"kind" : "struct",
"line" : 525,
"members" : [
{
"name" : "range_",
"kind" : "variable",
"type" : "Range",
"line" : 527}
,
{
"name" : "first",
"kind" : "variable",
"type" : "ubyte",
"line" : 528}
,
{
"name" : "pos",
"kind" : "variable",
"type" : "int",
"line" : 529}
,
{
"name" : "padding",
"kind" : "variable",
"type" : "int",
"line" : 529}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Range range)",
"line" : 533}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 553}
,
{
"name" : "front",
"kind" : "function",
"type" : "ubyte()",
"line" : 569}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 581}
]
}
]
}
,
{
"name" : "encoder(Range) if (isInputRange!(Range))",
"kind" : "template",
"line" : 681,
"members" : [
{
"name" : "encoder",
"kind" : "function",
"type" : "Encoder!(Range)(Range range)",
"line" : 681}
]
}
,
{
"name" : "DecodeMap",
"kind" : "variable",
"type" : "int[(char).max + 1]",
"line" : 690}
,
{
"name" : "decodeLength",
"kind" : "function",
"type" : "size_t(in size_t sourceLength)",
"line" : 717}
,
{
"name" : "decode(R1,R2) if (isArray!(R1) && is(ElementType!(R1) : dchar) && is(R2 == ubyte[]) && isOutputRange!(R2,ubyte))",
"kind" : "template",
"line" : 751,
"members" : [
{
"name" : "decode",
"kind" : "function",
"type" : "ubyte[](in R1 source, R2 buffer)",
"line" : 751}
]
}
,
{
"name" : "decode(R1,R2) if (!isArray!(R1) && isInputRange!(R1) && is(ElementType!(R1) : dchar) && hasLength!(R1) && is(R2 == ubyte[]) && isOutputRange!(R2,ubyte))",
"kind" : "template",
"line" : 817,
"members" : [
{
"name" : "decode",
"kind" : "function",
"type" : "ubyte[](R1 source, R2 buffer)",
"line" : 817}
]
}
,
{
"name" : "decode(R1,R2) if (isArray!(R1) && is(ElementType!(R1) : dchar) && !is(R2 == ubyte[]) && isOutputRange!(R2,ubyte))",
"kind" : "template",
"line" : 899,
"members" : [
{
"name" : "decode",
"kind" : "function",
"type" : "size_t(in R1 source, R2 range)",
"line" : 899}
]
}
,
{
"name" : "decode(R1,R2) if (!isArray!(R1) && isInputRange!(R1) && is(ElementType!(R1) : dchar) && hasLength!(R1) && !is(R2 == ubyte[]) && isOutputRange!(R2,ubyte))",
"kind" : "template",
"line" : 967,
"members" : [
{
"name" : "decode",
"kind" : "function",
"type" : "size_t(R1 source, R2 range)",
"line" : 967}
]
}
,
{
"name" : "decode(Range) if (isArray!(Range) && is(ElementType!(Range) : dchar))",
"kind" : "template",
"line" : 1040,
"members" : [
{
"name" : "decode",
"kind" : "function",
"type" : "ubyte[](Range source)",
"line" : 1040}
]
}
,
{
"name" : "decode(Range) if (!isArray!(Range) && isInputRange!(Range) && is(ElementType!(Range) : dchar) && hasLength!(Range))",
"kind" : "template",
"line" : 1049,
"members" : [
{
"name" : "decode",
"kind" : "function",
"type" : "ubyte[](Range source)",
"line" : 1049}
]
}
,
{
"name" : "Decoder(Range) if (isInputRange!(Range) && (is(ElementType!(Range) : const(char)[]) || is(ElementType!(Range) : const(ubyte)[])))",
"kind" : "struct",
"line" : 1061,
"members" : [
{
"name" : "Decoder",
"kind" : "struct",
"line" : 1061,
"members" : [
{
"name" : "range_",
"kind" : "variable",
"type" : "Range",
"line" : 1063}
,
{
"name" : "buffer_",
"kind" : "variable",
"type" : "ubyte[]",
"line" : 1064}
,
{
"name" : "decoded_",
"kind" : "variable",
"type" : "ubyte[]",
"line" : 1064}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Range range)",
"line" : 1068}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 1082}
,
{
"name" : "front",
"kind" : "function",
"type" : "ubyte[]()",
"line" : 1095}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 1107}
,
{
"name" : "doDecoding",
"kind" : "function",
"type" : "void()",
"line" : 1143}
]
}
]
}
,
{
"name" : "Decoder(Range) if (isInputRange!(Range) && is(ElementType!(Range) : char))",
"kind" : "struct",
"line" : 1172,
"members" : [
{
"name" : "Decoder",
"kind" : "struct",
"line" : 1172,
"members" : [
{
"name" : "range_",
"kind" : "variable",
"type" : "Range",
"line" : 1174}
,
{
"name" : "first",
"kind" : "variable",
"type" : "ubyte",
"line" : 1175}
,
{
"name" : "pos",
"kind" : "variable",
"type" : "int",
"line" : 1176}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Range range)",
"line" : 1180}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 1203}
,
{
"name" : "front",
"kind" : "function",
"type" : "ubyte()",
"line" : 1216}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 1228}
]
}
]
}
,
{
"name" : "decoder(Range) if (isInputRange!(Range))",
"kind" : "template",
"line" : 1341,
"members" : [
{
"name" : "decoder",
"kind" : "function",
"type" : "Decoder!(Range)(Range range)",
"line" : 1341}
]
}
,
{
"name" : "decodeChar()",
"kind" : "template",
"line" : 1349,
"members" : [
{
"name" : "decodeChar",
"kind" : "function",
"type" : "int(char chr)",
"line" : 1349}
]
}
,
{
"name" : "decodeChar()",
"kind" : "template",
"line" : 1362,
"members" : [
{
"name" : "decodeChar",
"kind" : "function",
"type" : "int(dchar chr)",
"line" : 1362}
]
}
]
}
]
}
,
{
"name" : "std.bigint",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/bigint.d",
"members" : [
{
"name" : "BigInt",
"kind" : "struct",
"line" : 71,
"members" : [
{
"name" : "data",
"kind" : "variable",
"type" : "BigUint",
"line" : 73}
,
{
"name" : "sign",
"kind" : "variable",
"type" : "bool",
"line" : 74}
,
{
"name" : "__ctor(T : string)",
"kind" : "template",
"line" : 81,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(T s)",
"line" : 81}
]
}
,
{
"name" : "__ctor(T : long)",
"kind" : "template",
"line" : 107,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(T x)",
"line" : 107}
]
}
,
{
"name" : "opAssign(T : long)",
"kind" : "template",
"line" : 114,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(T x)",
"line" : 114}
]
}
,
{
"name" : "opAssign(T : BigInt)",
"kind" : "template",
"line" : 121,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(T x)",
"line" : 121}
]
}
,
{
"name" : "opOpAssign(string op,T) if ((op == \"+\" || op == \"-\" || op == \"*\" || op == \"\/\" || op == \"%\" || op == \">>\" || op == \"<<\" || op == \"^^\") && is(T : long))",
"kind" : "template",
"line" : 128,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "BigInt(T y)",
"line" : 128}
]
}
,
{
"name" : "opOpAssign(string op,T) if ((op == \"+\" || op == \"-\" || op == \"*\" || op == \"\/\" || op == \"%\") && is(T : BigInt))",
"kind" : "template",
"line" : 194,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "BigInt(T y)",
"line" : 194}
]
}
,
{
"name" : "opBinary(string op,T) if ((op == \"+\" || op == \"*\" || op == \"-\" || op == \"\/\" || op == \"%\") && is(T : BigInt))",
"kind" : "template",
"line" : 236,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "BigInt(T y)",
"line" : 236}
]
}
,
{
"name" : "opBinary(string op,T) if ((op == \"+\" || op == \"*\" || op == \"-\" || op == \"\/\" || op == \">>\" || op == \"<<\" || op == \"^^\") && is(T : long))",
"kind" : "template",
"line" : 244,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "BigInt(T y)",
"line" : 244}
]
}
,
{
"name" : "opBinary(string op,T : int) if (op == \"%\")",
"kind" : "template",
"line" : 253,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "int(T y)",
"line" : 253}
]
}
,
{
"name" : "opBinaryRight(string op,T) if ((op == \"+\" || op == \"*\") && !is(T : BigInt))",
"kind" : "template",
"line" : 265,
"members" : [
{
"name" : "opBinaryRight",
"kind" : "function",
"type" : "BigInt(T y)",
"line" : 265}
]
}
,
{
"name" : "opBinaryRight(string op,T) if (op == \"-\" && is(T : long))",
"kind" : "template",
"line" : 272,
"members" : [
{
"name" : "opBinaryRight",
"kind" : "function",
"type" : "BigInt(T y)",
"line" : 272}
]
}
,
{
"name" : "opBinaryRight(string op,T) if ((op == \"%\" || op == \"\/\") && is(T : long))",
"kind" : "template",
"line" : 287,
"members" : [
{
"name" : "opBinaryRight",
"kind" : "function",
"type" : "T(T x)",
"line" : 287}
]
}
,
{
"name" : "opUnary(string op) if (op == \"+\" || op == \"-\")",
"kind" : "template",
"line" : 310,
"members" : [
{
"name" : "opUnary",
"kind" : "function",
"type" : "BigInt()",
"line" : 310}
]
}
,
{
"name" : "opUnary(string op) if (op == \"++\" || op == \"--\")",
"kind" : "template",
"line" : 323,
"members" : [
{
"name" : "opUnary",
"kind" : "function",
"type" : "BigInt()",
"line" : 323}
]
}
,
{
"name" : "opEquals(Tdummy = void)",
"kind" : "template",
"line" : 338,
"members" : [
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(ref const BigInt y)",
"line" : 338}
]
}
,
{
"name" : "opEquals(T : int)",
"kind" : "template",
"line" : 344,
"members" : [
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(T y)",
"line" : 344}
]
}
,
{
"name" : "opCmp(T : long)",
"kind" : "template",
"line" : 352,
"members" : [
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(T y)",
"line" : 352}
]
}
,
{
"name" : "opCmp(T : BigInt)",
"kind" : "template",
"line" : 360,
"members" : [
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(T y)",
"line" : 360}
]
}
,
{
"name" : "toLong",
"kind" : "function",
"type" : "const pure long()",
"line" : 369}
,
{
"name" : "toInt",
"kind" : "function",
"type" : "const pure long()",
"line" : 378}
,
{
"name" : "uintLength",
"kind" : "function",
"type" : "const pure @property ulong()",
"line" : 387}
,
{
"name" : "ulongLength",
"kind" : "function",
"type" : "const pure @property ulong()",
"line" : 393}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const void(void delegate(const(char)[]) sink, string formatString)",
"line" : 408}
,
{
"name" : "negate",
"kind" : "function",
"type" : "void()",
"line" : 438}
,
{
"name" : "isZero",
"kind" : "function",
"type" : "const pure bool()",
"line" : 443}
,
{
"name" : "isNegative",
"kind" : "function",
"type" : "const pure bool()",
"line" : 447}
,
{
"name" : "checkDivByZero",
"kind" : "function",
"type" : "const pure void()",
"line" : 452}
]
}
,
{
"name" : "toDecimalString",
"kind" : "function",
"type" : "string(BigInt x)",
"line" : 460}
,
{
"name" : "toHex",
"kind" : "function",
"type" : "string(BigInt x)",
"line" : 468}
]
}
,
{
"name" : "std.bind",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/bind.d",
"members" : [
{
"name" : "DynArg(int i)",
"kind" : "struct",
"line" : 30,
"members" : [
{
"name" : "DynArg",
"kind" : "struct",
"line" : 30,
"members" : [
{
"name" : "argNr",
"kind" : "alias",
"type" : "i",
"line" : 33}
]
}
]
}
,
{
"name" : "_0",
"kind" : "variable",
"type" : "const(DynArg!(0))",
"line" : 41}
,
{
"name" : "_1",
"kind" : "variable",
"type" : "const(DynArg!(1))",
"line" : 42}
,
{
"name" : "_2",
"kind" : "variable",
"type" : "const(DynArg!(2))",
"line" : 43}
,
{
"name" : "_3",
"kind" : "variable",
"type" : "const(DynArg!(3))",
"line" : 44}
,
{
"name" : "_4",
"kind" : "variable",
"type" : "const(DynArg!(4))",
"line" : 45}
,
{
"name" : "_5",
"kind" : "variable",
"type" : "const(DynArg!(5))",
"line" : 46}
,
{
"name" : "_6",
"kind" : "variable",
"type" : "const(DynArg!(6))",
"line" : 47}
,
{
"name" : "_7",
"kind" : "variable",
"type" : "const(DynArg!(7))",
"line" : 48}
,
{
"name" : "_8",
"kind" : "variable",
"type" : "const(DynArg!(8))",
"line" : 49}
,
{
"name" : "_9",
"kind" : "variable",
"type" : "const(DynArg!(9))",
"line" : 50}
,
{
"name" : "isDynArg(T)",
"kind" : "template",
"line" : 57,
"members" : [
]
}
,
{
"name" : "isDynArg(T,int i)",
"kind" : "template",
"line" : 69,
"members" : [
{
"name" : "isDynArg",
"kind" : "variable",
"type" : "bool",
"line" : 70}
]
}
,
{
"name" : "DynamicArrayType(T)",
"kind" : "template",
"line" : 77,
"members" : [
{
"name" : "DynamicArrayType",
"kind" : "alias",
"type" : "typeof(T[0])[]",
"line" : 78}
]
}
,
{
"name" : "_assign(T)",
"kind" : "template",
"line" : 89,
"members" : [
]
}
,
{
"name" : "_assign(T,Y,bool copyStaticArrays = true)",
"kind" : "template",
"line" : 114,
"members" : [
]
}
,
{
"name" : "Tuple(T...)",
"kind" : "struct",
"line" : 151,
"members" : [
{
"name" : "Tuple",
"kind" : "struct",
"line" : 151,
"members" : [
{
"name" : "meta",
"kind" : "alias",
"type" : "Tuple",
"line" : 152}
,
{
"name" : "expressionTuple",
"kind" : "variable",
"type" : "bool",
"line" : 153}
,
{
"name" : "length",
"kind" : "variable",
"type" : "int",
"line" : 163}
,
{
"name" : "appendT(X)",
"kind" : "template",
"line" : 169,
"members" : [
{
"name" : "appendT",
"kind" : "alias",
"type" : ".Tuple!(T,X)",
"line" : 170}
]
}
,
{
"name" : "append(X)",
"kind" : "template",
"line" : 177,
"members" : [
{
"name" : "append",
"kind" : "function",
"type" : "appendT!(X)(X x)",
"line" : 177}
]
}
,
{
"name" : "prependT(X)",
"kind" : "template",
"line" : 190,
"members" : [
{
"name" : "prependT",
"kind" : "alias",
"type" : ".Tuple!(X,T)",
"line" : 191}
]
}
,
{
"name" : "prepend(X)",
"kind" : "template",
"line" : 198,
"members" : [
{
"name" : "prepend",
"kind" : "function",
"type" : "prependT!(X)(X x)",
"line" : 198}
]
}
,
{
"name" : "concatT(T...)",
"kind" : "template",
"line" : 211,
"members" : [
]
}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 220}
]
}
]
}
,
{
"name" : "Tuple()",
"kind" : "struct",
"line" : 233,
"members" : [
{
"name" : "Tuple",
"kind" : "struct",
"line" : 233,
"members" : [
{
"name" : "meta",
"kind" : "alias",
"type" : "Tuple",
"line" : 234}
,
{
"name" : "EmptyTuple_(T...)",
"kind" : "template",
"line" : 236,
"members" : [
{
"name" : "EmptyTuple_",
"kind" : "alias",
"type" : "T",
"line" : 237}
]
}
,
{
"name" : "type",
"kind" : "alias",
"type" : "EmptyTuple_!()",
"line" : 241}
,
{
"name" : "value",
"kind" : "alias",
"type" : "EmptyTuple_!()",
"line" : 242}
,
{
"name" : "expressionTuple",
"kind" : "variable",
"type" : "bool",
"line" : 244}
,
{
"name" : "length",
"kind" : "variable",
"type" : "int",
"line" : 245}
,
{
"name" : "appendT(X)",
"kind" : "template",
"line" : 248,
"members" : [
{
"name" : "appendT",
"kind" : "alias",
"type" : ".Tuple!(X)",
"line" : 249}
]
}
,
{
"name" : "prependT",
"kind" : "alias",
"type" : "appendT",
"line" : 251}
,
{
"name" : "append(X)",
"kind" : "template",
"line" : 254,
"members" : [
{
"name" : "append",
"kind" : "function",
"type" : "appendT!(X)(X x)",
"line" : 254}
]
}
,
{
"name" : "prepend",
"kind" : "alias",
"type" : "append",
"line" : 261}
,
{
"name" : "concatT(T...)",
"kind" : "template",
"line" : 265,
"members" : [
{
"name" : "concatT",
"kind" : "alias",
"type" : ".Tuple!(T)",
"line" : 266}
]
}
,
{
"name" : "toString",
"kind" : "function",
"type" : "char[]()",
"line" : 270}
]
}
]
}
,
{
"name" : "tuple(T...)",
"kind" : "template",
"line" : 279,
"members" : [
{
"name" : "tuple",
"kind" : "function",
"type" : "Tuple!(T)(T t)",
"line" : 279}
]
}
,
{
"name" : "isTypeTuple(T)",
"kind" : "template",
"line" : 291,
"members" : [
]
}
,
{
"name" : "minNumArgs_impl(alias fn,fnT)",
"kind" : "template",
"line" : 309,
"members" : [
{
"name" : "Params",
"kind" : "alias",
"type" : "ParameterTypeTuple!(fnT)",
"line" : 310}
,
{
"name" : "params",
"kind" : "variable",
"type" : "Params",
"line" : 311}
,
{
"name" : "loop(int i = 0)",
"kind" : "template",
"line" : 313,
"members" : [
]
}
,
{
"name" : "res",
"kind" : "alias",
"type" : "loop!().res",
"line" : 323}
]
}
,
{
"name" : "minNumArgs(alias fn,fnT = typeof(&fn))",
"kind" : "template",
"line" : 328,
"members" : [
{
"name" : "minNumArgs",
"kind" : "variable",
"type" : "int",
"line" : 329}
]
}
,
{
"name" : "MBoundFunc()",
"kind" : "template",
"line" : 334,
"members" : [
{
"name" : "FAlias",
"kind" : "alias",
"type" : "FAlias_",
"line" : 336}
,
{
"name" : "FuncType",
"kind" : "alias",
"type" : "FT",
"line" : 337}
,
{
"name" : "AllBoundArgs",
"kind" : "alias",
"type" : "AllBoundArgs_",
"line" : 338}
,
{
"name" : "RetType",
"kind" : "alias",
"type" : "ReturnType!(FT)",
"line" : 347}
,
{
"name" : "BoundArgs",
"kind" : "alias",
"type" : "ExtractedBoundArgs!(AllBoundArgs.type)",
"line" : 348}
,
{
"name" : "DynParams",
"kind" : "alias",
"type" : "getDynArgTypes!(FuncParams,AllBoundArgs,minFuncArgs).res.type",
"line" : 361}
,
{
"name" : "fp",
"kind" : "variable",
"type" : "FuncType",
"line" : 364}
,
{
"name" : "boundArgs",
"kind" : "variable",
"type" : "BoundArgs",
"line" : 365}
,
{
"name" : "numFuncArgsReallyBound(int argI = 0,int fargI = 0,int bargI = 0)",
"kind" : "template",
"line" : 368,
"members" : [
]
}
,
{
"name" : "numSpecifiedParams",
"kind" : "variable",
"type" : "int",
"line" : 405}
,
{
"name" : "SpecifiedParams",
"kind" : "alias",
"type" : "Tuple!(FuncParams.type[0 .. numSpecifiedParams])",
"line" : 408}
,
{
"name" : "copyArgs(int argI = 0,int fargI = 0,int bargI = 0)",
"kind" : "template",
"line" : 414,
"members" : [
{
"name" : "copyArgs",
"kind" : "function",
"type" : "void(ref SpecifiedParams funcArgs, DynParams dynArgs)",
"line" : 414}
]
}
,
{
"name" : "call",
"kind" : "alias",
"type" : "func",
"line" : 544}
,
{
"name" : "opCall",
"kind" : "alias",
"type" : "func",
"line" : 548}
,
{
"name" : "PtrType()",
"kind" : "template",
"line" : 554,
"members" : [
{
"name" : "PtrType",
"kind" : "alias",
"type" : "typeof(&(new BoundFunc).call)",
"line" : 555}
]
}
,
{
"name" : "ptr",
"kind" : "function",
"type" : "PtrType!()()",
"line" : 561}
]
}
,
{
"name" : "DerefFunc(T)",
"kind" : "template",
"line" : 579,
"members" : [
{
"name" : "DerefFunc",
"kind" : "alias",
"type" : "T",
"line" : 580}
]
}
,
{
"name" : "BoundFunc(FT,alias FAlias_,AllBoundArgs_)",
"kind" : "class",
"line" : 586,
"members" : [
{
"name" : "BoundFunc",
"kind" : "class",
"line" : 586,
"members" : [
]
}
]
}
,
{
"name" : "bind(FT,ArgList...)",
"kind" : "template",
"line" : 664,
"members" : [
{
"name" : "bind",
"kind" : "function",
"type" : "typeof(new BoundFunc!(FT,NullAlias,Tuple!(ArgList)))(FT fp, ArgList args)",
"line" : 664}
]
}
,
{
"name" : "bindAlias(alias FT)",
"kind" : "template",
"line" : 697,
"members" : [
{
"name" : "bindAlias(ArgList...)",
"kind" : "template",
"line" : 698,
"members" : [
{
"name" : "bindAlias",
"kind" : "function",
"type" : "typeof(new BoundFunc!(typeof(&FT),FT,Tuple!(ArgList)))(ArgList args)",
"line" : 698}
]
}
]
}
,
{
"name" : "isBoundFunc(T)",
"kind" : "template",
"line" : 713,
"members" : [
]
}
,
{
"name" : "NumericTypes",
"kind" : "alias",
"type" : "Tuple!(byte,ubyte,short,ushort,int,uint,long,ulong,float,double,real,ifloat,idouble,ireal,cfloat,cdouble,creal)",
"line" : 727}
,
{
"name" : "dynArgTypes(int i,FuncParams,BoundArgs,int minParamsLeft)",
"kind" : "template",
"line" : 735,
"members" : [
{
"name" : "sliceOffTuple(T,int i)",
"kind" : "template",
"line" : 738,
"members" : [
{
"name" : "res",
"kind" : "alias",
"type" : "Tuple!(T.type[i .. __dollar])",
"line" : 739}
]
}
,
{
"name" : "prependType(T,SkipType)",
"kind" : "template",
"line" : 744,
"members" : [
]
}
]
}
,
{
"name" : "maxInt(int a,int b)",
"kind" : "template",
"line" : 807,
"members" : [
]
}
,
{
"name" : "numDynArgs(BoundArgs)",
"kind" : "template",
"line" : 816,
"members" : [
]
}
,
{
"name" : "EmptySlot",
"kind" : "struct",
"line" : 843,
"members" : [
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 844}
]
}
,
{
"name" : "getDynArgTypes(FuncParams,BoundArgs,int minFuncArgs)",
"kind" : "template",
"line" : 854,
"members" : [
{
"name" : "loop(int i)",
"kind" : "template",
"line" : 855,
"members" : [
]
}
,
{
"name" : "res",
"kind" : "alias",
"type" : "loop!(0).res",
"line" : 878}
]
}
,
{
"name" : "ExtractedBoundArgs(BoundArgs...)",
"kind" : "template",
"line" : 885,
"members" : [
]
}
,
{
"name" : "extractBoundArgs(int dst,int src,BoundArgs...)",
"kind" : "template",
"line" : 905,
"members" : [
{
"name" : "extractBoundArgs",
"kind" : "function",
"type" : "void(ref ExtractedBoundArgs!(BoundArgs) result, BoundArgs boundArgs)",
"line" : 905}
]
}
,
{
"name" : "getArgLen(Dst,Src)",
"kind" : "template",
"line" : 924,
"members" : [
]
}
,
{
"name" : "ContainsEmptySlotType(ParamList...)",
"kind" : "template",
"line" : 940,
"members" : [
{
"name" : "ContainsEmptySlotType",
"kind" : "variable",
"type" : "bool",
"line" : 941}
]
}
,
{
"name" : "NullAlias",
"kind" : "variable",
"type" : "const(EmptySlot)",
"line" : 946}
,
{
"name" : "PassByCopy",
"kind" : "struct",
"line" : 951,
"members" : [
]
}
,
{
"name" : "PassByRef",
"kind" : "struct",
"line" : 952,
"members" : [
]
}
,
{
"name" : "ParamsPassMethodTuple_impl(alias Func,int i = 0)",
"kind" : "template",
"line" : 954,
"members" : [
{
"name" : "Params",
"kind" : "alias",
"type" : "Tuple!(ParameterTypeTuple!(typeof(&Func)))",
"line" : 955}
]
}
,
{
"name" : "ParamsPassMethodTuple(alias Func)",
"kind" : "template",
"line" : 975,
"members" : [
{
"name" : "ParamsPassMethodTuple",
"kind" : "alias",
"type" : "ParamsPassMethodTuple_impl!(Func).res",
"line" : 976}
]
}
,
{
"name" : "FuncReferenceParamsAsPointers_impl(alias Func)",
"kind" : "template",
"line" : 980,
"members" : [
{
"name" : "Params",
"kind" : "alias",
"type" : "Tuple!(ParameterTypeTuple!(typeof(&Func)))",
"line" : 981}
,
{
"name" : "PassMethods",
"kind" : "alias",
"type" : "ParamsPassMethodTuple!(Func)",
"line" : 982}
,
{
"name" : "loop(int i)",
"kind" : "template",
"line" : 984,
"members" : [
]
}
,
{
"name" : "res",
"kind" : "alias",
"type" : "loop!(0).res",
"line" : 998}
]
}
,
{
"name" : "FuncReferenceParamsAsPointers(alias Func)",
"kind" : "template",
"line" : 1006,
"members" : [
{
"name" : "FuncReferenceParamsAsPointers",
"kind" : "alias",
"type" : "FuncReferenceParamsAsPointers_impl!(Func).res",
"line" : 1007}
]
}
,
{
"name" : "PointerTuple(T)",
"kind" : "template",
"line" : 1015,
"members" : [
]
}
,
{
"name" : "ptrApply(RetType,FN,T...)",
"kind" : "template",
"line" : 1028,
"members" : [
{
"name" : "ptrApply",
"kind" : "function",
"type" : "RetType(FN fn, T t)",
"line" : 1028}
]
}
]
}
,
{
"name" : "std.bitarray",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/bitarray.d",
"members" : [
]
}
,
{
"name" : "std.bitmanip",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/bitmanip.d",
"members" : [
{
"name" : "myToStringx",
"kind" : "function",
"type" : "string(ulong n)",
"line" : 28}
,
{
"name" : "myToString",
"kind" : "function",
"type" : "string(ulong n)",
"line" : 36}
,
{
"name" : "createAccessors(string store,T,string name,ulong len,ulong offset)",
"kind" : "template",
"line" : 41,
"members" : [
]
}
,
{
"name" : "createStoreName(Ts...)",
"kind" : "template",
"line" : 116,
"members" : [
]
}
,
{
"name" : "createFields(string store,ulong offset,Ts...)",
"kind" : "template",
"line" : 124,
"members" : [
]
}
,
{
"name" : "bitfields(T...)",
"kind" : "template",
"line" : 198,
"members" : [
{
"name" : "bitfields",
"kind" : "enum member",
"line" : 200}
]
}
,
{
"name" : "FloatRep",
"kind" : "struct",
"line" : 224,
"members" : [
{
"name" : "value",
"kind" : "variable",
"type" : "float",
"line" : 227}
,
{
"name" : "fraction",
"kind" : "function",
"type" : "const uint()",
"line" : 228}
,
{
"name" : "fraction",
"kind" : "function",
"type" : "void(uint v)",
"line" : 229}
,
{
"name" : "fraction_min",
"kind" : "variable",
"type" : "uint",
"line" : 230}
,
{
"name" : "fraction_max",
"kind" : "variable",
"type" : "uint",
"line" : 230}
,
{
"name" : "exponent",
"kind" : "function",
"type" : "const ubyte()",
"line" : 230}
,
{
"name" : "exponent",
"kind" : "function",
"type" : "void(ubyte v)",
"line" : 231}
,
{
"name" : "exponent_min",
"kind" : "variable",
"type" : "ubyte",
"line" : 232}
,
{
"name" : "exponent_max",
"kind" : "variable",
"type" : "ubyte",
"line" : 232}
,
{
"name" : "sign",
"kind" : "function",
"type" : "const bool()",
"line" : 232}
,
{
"name" : "sign",
"kind" : "function",
"type" : "void(bool v)",
"line" : 233}
,
{
"name" : "fractionexponentsign",
"kind" : "variable",
"type" : "uint",
"line" : 234}
,
{
"name" : "bias",
"kind" : "variable",
"type" : "uint",
"line" : 233}
,
{
"name" : "fractionBits",
"kind" : "variable",
"type" : "uint",
"line" : 233}
,
{
"name" : "exponentBits",
"kind" : "variable",
"type" : "uint",
"line" : 233}
,
{
"name" : "signBits",
"kind" : "variable",
"type" : "uint",
"line" : 233}
]
}
,
{
"name" : "DoubleRep",
"kind" : "struct",
"line" : 257,
"members" : [
{
"name" : "value",
"kind" : "variable",
"type" : "double",
"line" : 260}
,
{
"name" : "fraction",
"kind" : "function",
"type" : "const ulong()",
"line" : 261}
,
{
"name" : "fraction",
"kind" : "function",
"type" : "void(ulong v)",
"line" : 262}
,
{
"name" : "fraction_min",
"kind" : "variable",
"type" : "ulong",
"line" : 263}
,
{
"name" : "fraction_max",
"kind" : "variable",
"type" : "ulong",
"line" : 263}
,
{
"name" : "exponent",
"kind" : "function",
"type" : "const ushort()",
"line" : 263}
,
{
"name" : "exponent",
"kind" : "function",
"type" : "void(ushort v)",
"line" : 264}
,
{
"name" : "exponent_min",
"kind" : "variable",
"type" : "ushort",
"line" : 265}
,
{
"name" : "exponent_max",
"kind" : "variable",
"type" : "ushort",
"line" : 265}
,
{
"name" : "sign",
"kind" : "function",
"type" : "const bool()",
"line" : 265}
,
{
"name" : "sign",
"kind" : "function",
"type" : "void(bool v)",
"line" : 266}
,
{
"name" : "fractionexponentsign",
"kind" : "variable",
"type" : "ulong",
"line" : 267}
,
{
"name" : "bias",
"kind" : "variable",
"type" : "uint",
"line" : 266}
,
{
"name" : "signBits",
"kind" : "variable",
"type" : "uint",
"line" : 266}
,
{
"name" : "fractionBits",
"kind" : "variable",
"type" : "uint",
"line" : 266}
,
{
"name" : "exponentBits",
"kind" : "variable",
"type" : "uint",
"line" : 266}
]
}
,
{
"name" : "BitArray",
"kind" : "struct",
"line" : 302,
"members" : [
{
"name" : "len",
"kind" : "variable",
"type" : "ulong",
"line" : 303}
,
{
"name" : "ptr",
"kind" : "variable",
"type" : "ulong*",
"line" : 304}
,
{
"name" : "bitsPerSizeT",
"kind" : "variable",
"type" : "int",
"line" : 308}
,
{
"name" : "dim",
"kind" : "function",
"type" : "const ulong()",
"line" : 312}
,
{
"name" : "length",
"kind" : "function",
"type" : "const @property ulong()",
"line" : 319}
,
{
"name" : "length",
"kind" : "function",
"type" : "@property void(ulong newlen)",
"line" : 324}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "const bool(ulong i)",
"line" : 351}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "bool(bool b, ulong i)",
"line" : 376}
,
{
"name" : "dup",
"kind" : "function",
"type" : "BitArray()",
"line" : 393}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref bool) dg)",
"line" : 424}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref ulong, ref bool) dg)",
"line" : 439}
,
{
"name" : "reverse",
"kind" : "function",
"type" : "BitArray()",
"line" : 489}
,
{
"name" : "sort",
"kind" : "function",
"type" : "BitArray()",
"line" : 534}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(ref const const(BitArray) a2)",
"line" : 597}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(BitArray a2)",
"line" : 645}
,
{
"name" : "init",
"kind" : "function",
"type" : "void(bool[] ba)",
"line" : 702}
,
{
"name" : "init",
"kind" : "function",
"type" : "void(void[] v, ulong numbits)",
"line" : 718}
,
{
"name" : "opCast",
"kind" : "function",
"type" : "void[]()",
"line" : 758}
,
{
"name" : "opCom",
"kind" : "function",
"type" : "BitArray()",
"line" : 778}
,
{
"name" : "opAnd",
"kind" : "function",
"type" : "BitArray(BitArray e2)",
"line" : 812}
,
{
"name" : "opOr",
"kind" : "function",
"type" : "BitArray(BitArray e2)",
"line" : 852}
,
{
"name" : "opXor",
"kind" : "function",
"type" : "BitArray(BitArray e2)",
"line" : 892}
,
{
"name" : "opSub",
"kind" : "function",
"type" : "BitArray(BitArray e2)",
"line" : 934}
,
{
"name" : "opAndAssign",
"kind" : "function",
"type" : "BitArray(BitArray e2)",
"line" : 974}
,
{
"name" : "opOrAssign",
"kind" : "function",
"type" : "BitArray(BitArray e2)",
"line" : 1010}
,
{
"name" : "opXorAssign",
"kind" : "function",
"type" : "BitArray(BitArray e2)",
"line" : 1045}
,
{
"name" : "opSubAssign",
"kind" : "function",
"type" : "BitArray(BitArray e2)",
"line" : 1082}
,
{
"name" : "opCatAssign",
"kind" : "function",
"type" : "BitArray(bool b)",
"line" : 1118}
,
{
"name" : "opCatAssign",
"kind" : "function",
"type" : "BitArray(BitArray b)",
"line" : 1149}
,
{
"name" : "opCat",
"kind" : "function",
"type" : "BitArray(bool b)",
"line" : 1183}
,
{
"name" : "opCat_r",
"kind" : "function",
"type" : "BitArray(bool b)",
"line" : 1194}
,
{
"name" : "opCat",
"kind" : "function",
"type" : "BitArray(BitArray b)",
"line" : 1206}
]
}
]
}
,
{
"name" : "std.compiler",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/compiler.d",
"members" : [
{
"name" : "name",
"kind" : "variable",
"type" : "const(immutable(char)[])",
"line" : 24}
,
{
"name" : "Vendor",
"kind" : "enum",
"line" : 28,
"base" : "int",
"members" : [
{
"name" : "DigitalMars",
"kind" : "enum member",
"line" : 29}
]
}
,
{
"name" : "vendor",
"kind" : "variable",
"type" : "const(Vendor)",
"line" : 33}
,
{
"name" : "version_major",
"kind" : "variable",
"type" : "const(uint)",
"line" : 40}
,
{
"name" : "version_minor",
"kind" : "variable",
"type" : "const(uint)",
"line" : 41}
,
{
"name" : "D_major",
"kind" : "variable",
"type" : "const(uint)",
"line" : 48}
,
{
"name" : "D_minor",
"kind" : "variable",
"type" : "const(uint)",
"line" : 49}
]
}
,
{
"name" : "std.complex",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/complex.d",
"members" : [
{
"name" : "complex(T) if (is(T : double))",
"kind" : "template",
"line" : 46,
"members" : [
{
"name" : "complex",
"kind" : "function",
"type" : "pure nothrow @safe (T re)",
"line" : 46}
]
}
,
{
"name" : "complex(R,I) if (is(R : double) && is(I : double))",
"kind" : "template",
"line" : 55,
"members" : [
{
"name" : "complex",
"kind" : "function",
"type" : "pure nothrow @safe (R re, I im)",
"line" : 55}
]
}
,
{
"name" : "Complex(T) if (isFloatingPoint!(T))",
"kind" : "struct",
"line" : 108,
"members" : [
{
"name" : "Complex",
"kind" : "struct",
"line" : 108,
"members" : [
{
"name" : "re",
"kind" : "variable",
"type" : "T",
"line" : 110}
,
{
"name" : "im",
"kind" : "variable",
"type" : "T",
"line" : 113}
,
{
"name" : "abs",
"kind" : "function",
"type" : "const T()",
"line" : 120}
,
{
"name" : "arg",
"kind" : "function",
"type" : "const T()",
"line" : 127}
,
{
"name" : "conj",
"kind" : "function",
"type" : "const Complex()",
"line" : 134}
,
{
"name" : "opAssign(R : T)",
"kind" : "template",
"line" : 148,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "Complex(Complex!(R) z)",
"line" : 148}
]
}
,
{
"name" : "opAssign(R : T)",
"kind" : "template",
"line" : 157,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "Complex(R r)",
"line" : 157}
]
}
,
{
"name" : "opEquals(R : T)",
"kind" : "template",
"line" : 171,
"members" : [
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(Complex!(R) z)",
"line" : 171}
]
}
,
{
"name" : "opEquals(R : T)",
"kind" : "template",
"line" : 178,
"members" : [
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(R r)",
"line" : 178}
]
}
,
{
"name" : "opUnary(string op) if (op == \"+\")",
"kind" : "template",
"line" : 189,
"members" : [
{
"name" : "opUnary",
"kind" : "function",
"type" : "const Complex()",
"line" : 189}
]
}
,
{
"name" : "opUnary(string op) if (op == \"-\")",
"kind" : "template",
"line" : 197,
"members" : [
{
"name" : "opUnary",
"kind" : "function",
"type" : "const Complex()",
"line" : 197}
]
}
,
{
"name" : "opBinary(string op,R)",
"kind" : "template",
"line" : 209,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "const Complex!(CommonType!(T,R))(Complex!(R) z)",
"line" : 209}
]
}
,
{
"name" : "opBinary(string op,R) if (isNumeric!(R))",
"kind" : "template",
"line" : 218,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "const Complex!(CommonType!(T,R))(R r)",
"line" : 218}
]
}
,
{
"name" : "opBinaryRight(string op,R) if ((op == \"+\" || op == \"*\") && isNumeric!(R))",
"kind" : "template",
"line" : 228,
"members" : [
{
"name" : "opBinaryRight",
"kind" : "function",
"type" : "const Complex!(CommonType!(T,R))(R r)",
"line" : 228}
]
}
,
{
"name" : "opBinaryRight(string op,R) if (op == \"-\" && isNumeric!(R))",
"kind" : "template",
"line" : 236,
"members" : [
{
"name" : "opBinaryRight",
"kind" : "function",
"type" : "const Complex!(CommonType!(T,R))(R r)",
"line" : 236}
]
}
,
{
"name" : "opBinaryRight(string op,R) if (op == \"\/\" && isNumeric!(R))",
"kind" : "template",
"line" : 244,
"members" : [
{
"name" : "opBinaryRight",
"kind" : "function",
"type" : "const Complex!(CommonType!(T,R))(R r)",
"line" : 244}
]
}
,
{
"name" : "opOpAssign(string op,C) if ((op == \"+\" || op == \"-\") && is(C R == Complex!(R)))",
"kind" : "template",
"line" : 276,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "Complex(C z)",
"line" : 276}
]
}
,
{
"name" : "opOpAssign(string op,C) if (op == \"*\" && is(C R == Complex!(R)))",
"kind" : "template",
"line" : 286,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "Complex(C z)",
"line" : 286}
]
}
,
{
"name" : "opOpAssign(string op,C) if (op == \"\/\" && is(C R == Complex!(R)))",
"kind" : "template",
"line" : 297,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "Complex(C z)",
"line" : 297}
]
}
,
{
"name" : "opOpAssign(string op,C) if (op == \"^^\" && is(C R == Complex!(R)))",
"kind" : "template",
"line" : 323,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "Complex(C z)",
"line" : 323}
]
}
,
{
"name" : "opOpAssign(string op,U : T) if (op == \"+\" || op == \"-\")",
"kind" : "template",
"line" : 338,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "Complex(U a)",
"line" : 338}
]
}
,
{
"name" : "opOpAssign(string op,U : T) if (op == \"*\" || op == \"\/\")",
"kind" : "template",
"line" : 347,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "Complex(U a)",
"line" : 347}
]
}
,
{
"name" : "opOpAssign(string op,R) if (op == \"^^\" && isFloatingPoint!(R))",
"kind" : "template",
"line" : 357,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "Complex(R r)",
"line" : 357}
]
}
,
{
"name" : "opOpAssign(string op,U) if (op == \"^^\" && isIntegral!(U))",
"kind" : "template",
"line" : 369,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "Complex(U i)",
"line" : 369}
]
}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string(void delegate(const(char)[]) sink = null, string formatSpec = \"%s\")",
"line" : 415}
]
}
]
}
,
{
"name" : "Complex(T) if (is(T R == Complex!(R)))",
"kind" : "template",
"line" : 605,
"members" : [
{
"name" : "Complex",
"kind" : "alias",
"type" : "T",
"line" : 607}
]
}
,
{
"name" : "fromPolar(T,U)",
"kind" : "template",
"line" : 631,
"members" : [
{
"name" : "fromPolar",
"kind" : "function",
"type" : "pure nothrow @safe Complex!(CommonType!(T,U))(T modulus, U argument)",
"line" : 631}
]
}
]
}
,
{
"name" : "std.concurrency",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/concurrency.d",
"members" : [
{
"name" : "hasLocalAliasing(T...)",
"kind" : "template",
"line" : 49,
"members" : [
]
}
,
{
"name" : "MsgType",
"kind" : "enum",
"line" : 59,
"base" : "int",
"members" : [
{
"name" : "standard",
"kind" : "enum member",
"line" : 60}
,
{
"name" : "priority",
"kind" : "enum member",
"line" : 61}
,
{
"name" : "linkDead",
"kind" : "enum member",
"line" : 62}
]
}
,
{
"name" : "Message",
"kind" : "struct",
"line" : 66,
"members" : [
{
"name" : "type",
"kind" : "variable",
"type" : "MsgType",
"line" : 67}
,
{
"name" : "data",
"kind" : "variable",
"type" : "VariantN!(maxSize)",
"line" : 68}
,
{
"name" : "__ctor(T...) if (T.length < 1)",
"kind" : "template",
"line" : 70,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(MsgType t, T vals)",
"line" : 70}
]
}
,
{
"name" : "__ctor(T...) if (T.length == 1)",
"kind" : "template",
"line" : 76,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(MsgType t, T vals)",
"line" : 76}
]
}
,
{
"name" : "__ctor(T...) if (T.length > 1)",
"kind" : "template",
"line" : 83,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(MsgType t, T vals)",
"line" : 83}
]
}
,
{
"name" : "convertsTo(T...)",
"kind" : "template",
"line" : 90,
"members" : [
{
"name" : "convertsTo",
"kind" : "function",
"type" : "()",
"line" : 90}
]
}
,
{
"name" : "get(T...)",
"kind" : "template",
"line" : 99,
"members" : [
{
"name" : "get",
"kind" : "function",
"type" : "()",
"line" : 99}
]
}
,
{
"name" : "map(Op)",
"kind" : "template",
"line" : 114,
"members" : [
{
"name" : "map",
"kind" : "function",
"type" : "(Op op)",
"line" : 114}
]
}
]
}
,
{
"name" : "checkops(T...)",
"kind" : "template",
"line" : 132,
"members" : [
{
"name" : "checkops",
"kind" : "function",
"type" : "void(T ops)",
"line" : 132}
]
}
,
{
"name" : "mbox",
"kind" : "variable",
"type" : "std.concurrency.MessageBox",
"line" : 159}
,
{
"name" : "links",
"kind" : "variable",
"type" : "bool[Tid]",
"line" : 160}
,
{
"name" : "owner",
"kind" : "variable",
"type" : "Tid",
"line" : 161}
,
{
"name" : "MessageMismatch",
"kind" : "class",
"line" : 198,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "MessageMismatch(string msg = \"Unexpected message type\")",
"line" : 200}
]
}
,
{
"name" : "OwnerTerminated",
"kind" : "class",
"line" : 210,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "OwnerTerminated(Tid t, string msg = \"Owner terminated\")",
"line" : 212}
,
{
"name" : "tid",
"kind" : "variable",
"type" : "Tid",
"line" : 218}
]
}
,
{
"name" : "LinkTerminated",
"kind" : "class",
"line" : 225,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "LinkTerminated(Tid t, string msg = \"Link terminated\")",
"line" : 227}
,
{
"name" : "tid",
"kind" : "variable",
"type" : "Tid",
"line" : 233}
]
}
,
{
"name" : "PriorityMessageException",
"kind" : "class",
"line" : 240,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "PriorityMessageException(VariantN!(maxSize) vals)",
"line" : 242}
,
{
"name" : "message",
"kind" : "variable",
"type" : "VariantN!(maxSize)",
"line" : 248}
]
}
,
{
"name" : "MailboxFull",
"kind" : "class",
"line" : 255,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "MailboxFull(Tid t, string msg = \"Mailbox full\")",
"line" : 257}
,
{
"name" : "tid",
"kind" : "variable",
"type" : "Tid",
"line" : 263}
]
}
,
{
"name" : "Tid",
"kind" : "struct",
"line" : 276,
"members" : [
{
"name" : "send(T...)",
"kind" : "template",
"line" : 277,
"members" : [
{
"name" : "send",
"kind" : "function",
"type" : "void(T vals)",
"line" : 277}
]
}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref Tid(MessageBox m)",
"line" : 286}
,
{
"name" : "mbox",
"kind" : "variable",
"type" : "std.concurrency.MessageBox",
"line" : 292}
]
}
,
{
"name" : "thisTid",
"kind" : "function",
"type" : "@property Tid()",
"line" : 299}
,
{
"name" : "spawn(T...)",
"kind" : "template",
"line" : 327,
"members" : [
{
"name" : "spawn",
"kind" : "function",
"type" : "Tid(void function(T) fn, T args)",
"line" : 327}
]
}
,
{
"name" : "spawnLinked(T...)",
"kind" : "template",
"line" : 351,
"members" : [
{
"name" : "spawnLinked",
"kind" : "function",
"type" : "Tid(void function(T) fn, T args)",
"line" : 351}
]
}
,
{
"name" : "_spawn(T...)",
"kind" : "template",
"line" : 362,
"members" : [
{
"name" : "_spawn",
"kind" : "function",
"type" : "Tid(bool linked, void function(T) fn, T args)",
"line" : 362}
]
}
,
{
"name" : "send(T...)",
"kind" : "template",
"line" : 390,
"members" : [
{
"name" : "send",
"kind" : "function",
"type" : "void(Tid tid, T vals)",
"line" : 390}
]
}
,
{
"name" : "prioritySend(T...)",
"kind" : "template",
"line" : 401,
"members" : [
{
"name" : "prioritySend",
"kind" : "function",
"type" : "void(Tid tid, T vals)",
"line" : 401}
]
}
,
{
"name" : "_send(T...)",
"kind" : "template",
"line" : 412,
"members" : [
{
"name" : "_send",
"kind" : "function",
"type" : "void(Tid tid, T vals)",
"line" : 412}
]
}
,
{
"name" : "_send(T...)",
"kind" : "template",
"line" : 422,
"members" : [
{
"name" : "_send",
"kind" : "function",
"type" : "void(MsgType type, Tid tid, T vals)",
"line" : 422}
]
}
,
{
"name" : "receive(T...)",
"kind" : "template",
"line" : 431,
"members" : [
{
"name" : "receive",
"kind" : "function",
"type" : "void(T ops)",
"line" : 431}
]
}
,
{
"name" : "receiveOnlyRet(T...)",
"kind" : "template",
"line" : 458,
"members" : [
]
}
,
{
"name" : "receiveOnly(T...)",
"kind" : "template",
"line" : 469,
"members" : [
{
"name" : "receiveOnly",
"kind" : "function",
"type" : "receiveOnlyRet!(T)()",
"line" : 469}
]
}
,
{
"name" : "receiveTimeout(T...)",
"kind" : "template",
"line" : 501,
"members" : [
{
"name" : "receiveTimeout",
"kind" : "function",
"type" : "bool(long ms, T ops)",
"line" : 501}
]
}
,
{
"name" : "receiveTimeout(T...)",
"kind" : "template",
"line" : 512,
"members" : [
{
"name" : "receiveTimeout",
"kind" : "function",
"type" : "bool(Duration duration, T ops)",
"line" : 512}
]
}
,
{
"name" : "OnCrowding",
"kind" : "enum",
"line" : 552,
"base" : "int",
"members" : [
{
"name" : "block",
"kind" : "enum member",
"line" : 553}
,
{
"name" : "throwException",
"kind" : "enum member",
"line" : 554}
,
{
"name" : "ignore",
"kind" : "enum member",
"line" : 555}
]
}
,
{
"name" : "onCrowdingBlock",
"kind" : "function",
"type" : "bool(Tid tid)",
"line" : 561}
,
{
"name" : "onCrowdingThrow",
"kind" : "function",
"type" : "bool(Tid tid)",
"line" : 567}
,
{
"name" : "onCrowdingIgnore",
"kind" : "function",
"type" : "bool(Tid tid)",
"line" : 573}
,
{
"name" : "setMaxMailboxSize",
"kind" : "function",
"type" : "void(Tid tid, ulong messages, OnCrowding doThis)",
"line" : 592}
,
{
"name" : "setMaxMailboxSize",
"kind" : "function",
"type" : "void(Tid tid, ulong messages, bool function(Tid) onCrowdingDoThis)",
"line" : 617}
,
{
"name" : "tidByName",
"kind" : "variable",
"type" : "Tid[string]",
"line" : 630}
,
{
"name" : "namesByTid",
"kind" : "variable",
"type" : "string[][Tid]",
"line" : 631}
,
{
"name" : "registryLock",
"kind" : "variable",
"type" : "core.sync.mutex.Mutex",
"line" : 632}
,
{
"name" : "register",
"kind" : "function",
"type" : "bool(string name, Tid tid)",
"line" : 671}
,
{
"name" : "unregister",
"kind" : "function",
"type" : "bool(string name)",
"line" : 695}
,
{
"name" : "locate",
"kind" : "function",
"type" : "Tid(string name)",
"line" : 721}
,
{
"name" : "MessageBox",
"kind" : "class",
"line" : 747,
"base" : "Object",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "MessageBox()",
"line" : 748}
,
{
"name" : "isClosed",
"kind" : "function",
"type" : "const @property bool()",
"line" : 760}
,
{
"name" : "setMaxMsgs",
"kind" : "function",
"type" : "void(ulong num, bool function(Tid) call)",
"line" : 780}
,
{
"name" : "put",
"kind" : "function",
"type" : "void(ref Message msg)",
"line" : 804}
,
{
"name" : "get(T...)",
"kind" : "template",
"line" : 855,
"members" : [
{
"name" : "get",
"kind" : "function",
"type" : "bool(T vals)",
"line" : 855}
]
}
,
{
"name" : "close",
"kind" : "function",
"type" : "void()",
"line" : 1054}
,
{
"name" : "mboxFull",
"kind" : "function",
"type" : "bool()",
"line" : 1094}
,
{
"name" : "updateMsgCount",
"kind" : "function",
"type" : "void()",
"line" : 1101}
,
{
"name" : "isControlMsg",
"kind" : "function",
"type" : "pure bool(ref Message msg)",
"line" : 1113}
,
{
"name" : "isPriorityMsg",
"kind" : "function",
"type" : "pure bool(ref Message msg)",
"line" : 1120}
,
{
"name" : "isLinkDeadMsg",
"kind" : "function",
"type" : "pure bool(ref Message msg)",
"line" : 1126}
,
{
"name" : "OnMaxFn",
"kind" : "alias",
"type" : "bool function(Tid)",
"line" : 1138}
,
{
"name" : "ListT",
"kind" : "alias",
"type" : "List!(Message)",
"line" : 1139}
,
{
"name" : "m_localBox",
"kind" : "variable",
"type" : "List!(Message)",
"line" : 1147}
,
{
"name" : "m_localPty",
"kind" : "variable",
"type" : "List!(Message)",
"line" : 1148}
,
{
"name" : "m_lock",
"kind" : "variable",
"type" : "core.sync.mutex.Mutex",
"line" : 1157}
,
{
"name" : "m_putMsg",
"kind" : "variable",
"type" : "core.sync.condition.Condition",
"line" : 1158}
,
{
"name" : "m_notFull",
"kind" : "variable",
"type" : "core.sync.condition.Condition",
"line" : 1159}
,
{
"name" : "m_putQueue",
"kind" : "variable",
"type" : "ulong",
"line" : 1160}
,
{
"name" : "m_sharedBox",
"kind" : "variable",
"type" : "List!(Message)",
"line" : 1161}
,
{
"name" : "m_sharedPty",
"kind" : "variable",
"type" : "List!(Message)",
"line" : 1162}
,
{
"name" : "m_onMaxMsgs",
"kind" : "variable",
"type" : "bool function(Tid)",
"line" : 1163}
,
{
"name" : "m_localMsgs",
"kind" : "variable",
"type" : "ulong",
"line" : 1164}
,
{
"name" : "m_maxMsgs",
"kind" : "variable",
"type" : "ulong",
"line" : 1165}
,
{
"name" : "m_closed",
"kind" : "variable",
"type" : "bool",
"line" : 1166}
]
}
,
{
"name" : "List(T)",
"kind" : "struct",
"line" : 1174,
"members" : [
{
"name" : "List",
"kind" : "struct",
"line" : 1174,
"members" : [
{
"name" : "Range",
"kind" : "struct",
"line" : 1176,
"members" : [
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 1177}
,
{
"name" : "front",
"kind" : "function",
"type" : "T()",
"line" : 1182}
,
{
"name" : "front",
"kind" : "function",
"type" : "void(T val)",
"line" : 1188}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 1194}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Node* p)",
"line" : 1206}
,
{
"name" : "m_prev",
"kind" : "variable",
"type" : "Node*",
"line" : 1211}
]
}
,
{
"name" : "put",
"kind" : "function",
"type" : "void(T val)",
"line" : 1218}
,
{
"name" : "put",
"kind" : "function",
"type" : "void(ref List!(T) rhs)",
"line" : 1228}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "Range()",
"line" : 1249}
,
{
"name" : "removeAt",
"kind" : "function",
"type" : "void(Range r)",
"line" : 1258}
,
{
"name" : "length",
"kind" : "function",
"type" : "size_t()",
"line" : 1279}
,
{
"name" : "clear",
"kind" : "function",
"type" : "void()",
"line" : 1288}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 1298}
,
{
"name" : "Node",
"kind" : "struct",
"line" : 1306,
"members" : [
{
"name" : "next",
"kind" : "variable",
"type" : "Node*",
"line" : 1307}
,
{
"name" : "val",
"kind" : "variable",
"type" : "T",
"line" : 1308}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(T v)",
"line" : 1310}
]
}
,
{
"name" : "appendNode",
"kind" : "function",
"type" : "void(Node* n)",
"line" : 1320}
,
{
"name" : "m_first",
"kind" : "variable",
"type" : "Node*",
"line" : 1333}
,
{
"name" : "m_last",
"kind" : "variable",
"type" : "Node*",
"line" : 1334}
,
{
"name" : "m_count",
"kind" : "variable",
"type" : "size_t",
"line" : 1335}
]
}
]
}
]
}
,
{
"name" : "std.container",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/container.d",
"members" : [
{
"name" : "TotalContainer(T)",
"kind" : "struct",
"line" : 255,
"members" : [
{
"name" : "TotalContainer",
"kind" : "struct",
"line" : 255,
"members" : [
{
"name" : "KeyType",
"kind" : "alias",
"type" : "T",
"line" : 260}
,
{
"name" : "KeyTypes",
"kind" : "alias",
"type" : "TypeTuple!(T)",
"line" : 270}
,
{
"name" : "ValueType",
"kind" : "alias",
"type" : "T",
"line" : 278}
,
{
"name" : "Range",
"kind" : "struct",
"line" : 287,
"members" : [
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 289}
,
{
"name" : "front",
"kind" : "function",
"type" : "T()",
"line" : 294}
,
{
"name" : "moveFront",
"kind" : "function",
"type" : "T()",
"line" : 299}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 304}
,
{
"name" : "back",
"kind" : "function",
"type" : "T()",
"line" : 309}
,
{
"name" : "moveBack",
"kind" : "function",
"type" : "T()",
"line" : 314}
,
{
"name" : "popBack",
"kind" : "function",
"type" : "void()",
"line" : 319}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "T(size_t i)",
"line" : 324}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "void(T value, size_t i)",
"line" : 329}
,
{
"name" : "opIndexOpAssign(string op)",
"kind" : "template",
"line" : 334,
"members" : [
{
"name" : "opIndexOpAssign",
"kind" : "function",
"type" : "void(T value, uint i)",
"line" : 334}
]
}
,
{
"name" : "moveAt",
"kind" : "function",
"type" : "T(size_t i)",
"line" : 339}
,
{
"name" : "length",
"kind" : "function",
"type" : "size_t()",
"line" : 344}
]
}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 356}
,
{
"name" : "dup",
"kind" : "function",
"type" : "TotalContainer()",
"line" : 367}
,
{
"name" : "length",
"kind" : "function",
"type" : "size_t()",
"line" : 377}
,
{
"name" : "capacity",
"kind" : "function",
"type" : "size_t()",
"line" : 388}
,
{
"name" : "reserve",
"kind" : "function",
"type" : "void(size_t e)",
"line" : 401}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "Range()",
"line" : 413}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "Range(size_t a, size_t b)",
"line" : 424}
,
{
"name" : "front",
"kind" : "function",
"type" : "T()",
"line" : 434}
,
{
"name" : "moveFront",
"kind" : "function",
"type" : "T()",
"line" : 439}
,
{
"name" : "back",
"kind" : "function",
"type" : "T()",
"line" : 444}
,
{
"name" : "moveBack",
"kind" : "function",
"type" : "T()",
"line" : 449}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "ValueType(KeyType)",
"line" : 460}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "void(KeyType)",
"line" : 465}
,
{
"name" : "opIndexOpAssign(string op)",
"kind" : "template",
"line" : 470,
"members" : [
{
"name" : "opIndexOpAssign",
"kind" : "function",
"type" : "void(KeyType)",
"line" : 470}
]
}
,
{
"name" : "moveAt",
"kind" : "function",
"type" : "T(size_t i)",
"line" : 474}
,
{
"name" : "opBinary(string op) if (op == \"in\")",
"kind" : "template",
"line" : 482,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "bool(KeyType k)",
"line" : 482}
]
}
,
{
"name" : "equalRange",
"kind" : "function",
"type" : "Range(KeyType k)",
"line" : 491}
,
{
"name" : "lowerBound",
"kind" : "function",
"type" : "Range(KeyType k)",
"line" : 501}
,
{
"name" : "upperBound",
"kind" : "function",
"type" : "Range(KeyType k)",
"line" : 511}
,
{
"name" : "opBinary(string op) if (op == \"~\")",
"kind" : "template",
"line" : 524,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "TotalContainer(Stuff rhs)",
"line" : 524}
]
}
,
{
"name" : "opBinaryRight(string op) if (op == \"~\")",
"kind" : "template",
"line" : 530,
"members" : [
{
"name" : "opBinaryRight",
"kind" : "function",
"type" : "TotalContainer(Stuff lhs)",
"line" : 530}
]
}
,
{
"name" : "opOpAssign(string op) if (op == \"~\")",
"kind" : "template",
"line" : 538,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "void(Stuff stuff)",
"line" : 538}
]
}
,
{
"name" : "clear",
"kind" : "function",
"type" : "void()",
"line" : 551}
,
{
"name" : "length",
"kind" : "function",
"type" : "void(size_t newLength)",
"line" : 566}
,
{
"name" : "insert(Stuff)",
"kind" : "template",
"line" : 588,
"members" : [
{
"name" : "insert",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 588}
]
}
,
{
"name" : "stableInsert(Stuff)",
"kind" : "template",
"line" : 593,
"members" : [
{
"name" : "stableInsert",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 593}
]
}
,
{
"name" : "linearInsert(Stuff)",
"kind" : "template",
"line" : 602,
"members" : [
{
"name" : "linearInsert",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 602}
]
}
,
{
"name" : "stableLinearInsert(Stuff)",
"kind" : "template",
"line" : 607,
"members" : [
{
"name" : "stableLinearInsert",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 607}
]
}
,
{
"name" : "removeAny",
"kind" : "function",
"type" : "T()",
"line" : 625}
,
{
"name" : "stableRemoveAny",
"kind" : "function",
"type" : "T()",
"line" : 630}
,
{
"name" : "insertFront(Stuff)",
"kind" : "template",
"line" : 646,
"members" : [
{
"name" : "insertFront",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 646}
]
}
,
{
"name" : "stableInsertFront(Stuff)",
"kind" : "template",
"line" : 651,
"members" : [
{
"name" : "stableInsertFront",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 651}
]
}
,
{
"name" : "insertBack(Stuff)",
"kind" : "template",
"line" : 656,
"members" : [
{
"name" : "insertBack",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 656}
]
}
,
{
"name" : "stableInsertBack",
"kind" : "function",
"type" : "size_t(T value)",
"line" : 661}
,
{
"name" : "removeFront",
"kind" : "function",
"type" : "void()",
"line" : 677}
,
{
"name" : "stableRemoveFront",
"kind" : "function",
"type" : "void()",
"line" : 682}
,
{
"name" : "removeBack",
"kind" : "function",
"type" : "void()",
"line" : 687}
,
{
"name" : "stableRemoveBack",
"kind" : "function",
"type" : "void()",
"line" : 692}
,
{
"name" : "removeFront",
"kind" : "function",
"type" : "size_t(size_t howMany)",
"line" : 710}
,
{
"name" : "stableRemoveFront",
"kind" : "function",
"type" : "size_t(size_t howMany)",
"line" : 715}
,
{
"name" : "removeBack",
"kind" : "function",
"type" : "size_t(size_t howMany)",
"line" : 720}
,
{
"name" : "stableRemoveBack",
"kind" : "function",
"type" : "size_t(size_t howMany)",
"line" : 725}
,
{
"name" : "removeKey",
"kind" : "function",
"type" : "size_t(KeyType k)",
"line" : 738}
,
{
"name" : "insertBefore(Stuff)",
"kind" : "template",
"line" : 755,
"members" : [
{
"name" : "insertBefore",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 755}
]
}
,
{
"name" : "stableInsertBefore(Stuff)",
"kind" : "template",
"line" : 760,
"members" : [
{
"name" : "stableInsertBefore",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 760}
]
}
,
{
"name" : "insertAfter(Stuff)",
"kind" : "template",
"line" : 765,
"members" : [
{
"name" : "insertAfter",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 765}
]
}
,
{
"name" : "stableInsertAfter(Stuff)",
"kind" : "template",
"line" : 770,
"members" : [
{
"name" : "stableInsertAfter",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 770}
]
}
,
{
"name" : "replace(Stuff)",
"kind" : "template",
"line" : 775,
"members" : [
{
"name" : "replace",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 775}
]
}
,
{
"name" : "stableReplace(Stuff)",
"kind" : "template",
"line" : 780,
"members" : [
{
"name" : "stableReplace",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 780}
]
}
,
{
"name" : "remove",
"kind" : "function",
"type" : "Range(Range r)",
"line" : 797}
,
{
"name" : "stableRemove",
"kind" : "function",
"type" : "Range(Range r)",
"line" : 802}
,
{
"name" : "linearRemove",
"kind" : "function",
"type" : "Range(Range r)",
"line" : 815}
,
{
"name" : "stableLinearRemove",
"kind" : "function",
"type" : "Range(Range r)",
"line" : 820}
]
}
]
}
,
{
"name" : "make(Container,T...) if (is(Container == struct))",
"kind" : "template",
"line" : 835,
"members" : [
{
"name" : "make",
"kind" : "function",
"type" : "Container(T arguments)",
"line" : 835}
]
}
,
{
"name" : "make(Container,T...) if (is(Container == class))",
"kind" : "template",
"line" : 844,
"members" : [
{
"name" : "make",
"kind" : "function",
"type" : "Container(T arguments)",
"line" : 844}
]
}
,
{
"name" : "SList(T)",
"kind" : "struct",
"line" : 853,
"members" : [
{
"name" : "SList",
"kind" : "struct",
"line" : 853,
"members" : [
{
"name" : "Node",
"kind" : "struct",
"line" : 855,
"members" : [
{
"name" : "_payload",
"kind" : "variable",
"type" : "T",
"line" : 856}
,
{
"name" : "_next",
"kind" : "variable",
"type" : "Node*",
"line" : 857}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(T a, Node* b)",
"line" : 858}
]
}
,
{
"name" : "_root",
"kind" : "variable",
"type" : "Node*",
"line" : 860}
,
{
"name" : "findLastNode",
"kind" : "function",
"type" : "Node*(Node* n)",
"line" : 862}
,
{
"name" : "findLastNode",
"kind" : "function",
"type" : "Node*(Node* n, size_t limit)",
"line" : 874}
,
{
"name" : "findNode",
"kind" : "function",
"type" : "Node*(Node* n, Node* findMe)",
"line" : 887}
,
{
"name" : "__ctor(U) if (isImplicitlyConvertible!(U,T))",
"kind" : "template",
"line" : 903,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(U[] values...)",
"line" : 903}
]
}
,
{
"name" : "__ctor(Stuff) if (isInputRange!(Stuff) && isImplicitlyConvertible!(ElementType!(Stuff),T) && !is(Stuff == T[]))",
"kind" : "template",
"line" : 911,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(Stuff stuff)",
"line" : 911}
]
}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(ref const SList rhs)",
"line" : 925}
,
{
"name" : "Range",
"kind" : "struct",
"line" : 940,
"members" : [
{
"name" : "_head",
"kind" : "variable",
"type" : "Node*",
"line" : 941}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Node* p)",
"line" : 942}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 944}
,
{
"name" : "save",
"kind" : "function",
"type" : "Range()",
"line" : 946}
,
{
"name" : "front",
"kind" : "function",
"type" : "T()",
"line" : 948}
,
{
"name" : "front",
"kind" : "function",
"type" : "void(T value)",
"line" : 950}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 956}
,
{
"name" : "moveFront",
"kind" : "function",
"type" : "T()",
"line" : 962}
,
{
"name" : "sameHead",
"kind" : "function",
"type" : "bool(Range rhs)",
"line" : 968}
]
}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 985}
,
{
"name" : "dup",
"kind" : "function",
"type" : "SList()",
"line" : 996}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "Range()",
"line" : 1007}
,
{
"name" : "front",
"kind" : "function",
"type" : "T()",
"line" : 1017}
,
{
"name" : "front",
"kind" : "function",
"type" : "void(T value)",
"line" : 1028}
,
{
"name" : "opBinary(string op,Stuff) if (op == \"~\" && is(typeof(SList(rhs))))",
"kind" : "template",
"line" : 1046,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "SList(Stuff rhs)",
"line" : 1046}
]
}
,
{
"name" : "clear",
"kind" : "function",
"type" : "void()",
"line" : 1069}
,
{
"name" : "insertFront(Stuff) if (isInputRange!(Stuff) && isImplicitlyConvertible!(ElementType!(Stuff),T))",
"kind" : "template",
"line" : 1084,
"members" : [
{
"name" : "insertFront",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 1084}
]
}
,
{
"name" : "insertFront(Stuff) if (isImplicitlyConvertible!(Stuff,T))",
"kind" : "template",
"line" : 1104,
"members" : [
{
"name" : "insertFront",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 1104}
]
}
,
{
"name" : "insert",
"kind" : "alias",
"type" : "insertFront",
"line" : 1113}
,
{
"name" : "stableInsert",
"kind" : "alias",
"type" : "insert",
"line" : 1116}
,
{
"name" : "stableInsertFront",
"kind" : "alias",
"type" : "insertFront",
"line" : 1119}
,
{
"name" : "removeAny",
"kind" : "function",
"type" : "T()",
"line" : 1131}
,
{
"name" : "stableRemoveAny",
"kind" : "alias",
"type" : "removeAny",
"line" : 1139}
,
{
"name" : "removeFront",
"kind" : "function",
"type" : "void()",
"line" : 1150}
,
{
"name" : "stableRemoveFront",
"kind" : "alias",
"type" : "removeFront",
"line" : 1157}
,
{
"name" : "removeFront",
"kind" : "function",
"type" : "size_t(size_t howMany)",
"line" : 1172}
,
{
"name" : "stableRemoveFront",
"kind" : "alias",
"type" : "removeFront",
"line" : 1184}
,
{
"name" : "insertAfter(Stuff)",
"kind" : "template",
"line" : 1205,
"members" : [
{
"name" : "insertAfter",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 1205}
]
}
,
{
"name" : "insertAfter(Stuff)",
"kind" : "template",
"line" : 1234,
"members" : [
{
"name" : "insertAfter",
"kind" : "function",
"type" : "size_t(Take!(Range) r, Stuff stuff)",
"line" : 1234}
]
}
,
{
"name" : "stableInsertAfter",
"kind" : "alias",
"type" : "insertAfter",
"line" : 1259}
,
{
"name" : "linearRemove",
"kind" : "function",
"type" : "Range(Range r)",
"line" : 1268}
,
{
"name" : "linearRemove",
"kind" : "function",
"type" : "Range(Take!(Range) r)",
"line" : 1287}
,
{
"name" : "stableLinearRemove",
"kind" : "alias",
"type" : "linearRemove",
"line" : 1314}
]
}
]
}
,
{
"name" : "Array(T) if (!is(T : const(bool)))",
"kind" : "struct",
"line" : 1451,
"members" : [
{
"name" : "Array",
"kind" : "struct",
"line" : 1451,
"members" : [
{
"name" : "Payload",
"kind" : "struct",
"line" : 1454,
"members" : [
{
"name" : "_capacity",
"kind" : "variable",
"type" : "size_t",
"line" : 1455}
,
{
"name" : "_payload",
"kind" : "variable",
"type" : "T[]",
"line" : 1456}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(T[] p)",
"line" : 1459}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(Array!(T).Payload rhs)",
"line" : 1475}
,
{
"name" : "length",
"kind" : "function",
"type" : "const size_t()",
"line" : 1491}
,
{
"name" : "length",
"kind" : "function",
"type" : "void(size_t newLength)",
"line" : 1497}
,
{
"name" : "capacity",
"kind" : "function",
"type" : "const size_t()",
"line" : 1520}
,
{
"name" : "reserve",
"kind" : "function",
"type" : "void(size_t elements)",
"line" : 1526}
,
{
"name" : "insertBack(Stuff) if (isImplicitlyConvertible!(Stuff,T))",
"kind" : "template",
"line" : 1565,
"members" : [
{
"name" : "insertBack",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 1565}
]
}
,
{
"name" : "insertBack(Stuff) if (isInputRange!(Stuff) && isImplicitlyConvertible!(ElementType!(Stuff),T))",
"kind" : "template",
"line" : 1579,
"members" : [
{
"name" : "insertBack",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 1579}
]
}
]
}
,
{
"name" : "Data",
"kind" : "alias",
"type" : "RefCounted!(Payload,RefCountedAutoInitialize.no)",
"line" : 1600}
,
{
"name" : "_data",
"kind" : "variable",
"type" : "Data",
"line" : 1601}
,
{
"name" : "__ctor(U) if (isImplicitlyConvertible!(U,T))",
"kind" : "template",
"line" : 1603,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(U[] values...)",
"line" : 1603}
]
}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(ref const Array rhs)",
"line" : 1621}
,
{
"name" : "Range",
"kind" : "struct",
"line" : 1632,
"members" : [
{
"name" : "_outer",
"kind" : "variable",
"type" : "Array",
"line" : 1633}
,
{
"name" : "_a",
"kind" : "variable",
"type" : "size_t",
"line" : 1634}
,
{
"name" : "_b",
"kind" : "variable",
"type" : "size_t",
"line" : 1634}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Array data, size_t a, size_t b)",
"line" : 1636}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 1643}
,
{
"name" : "save",
"kind" : "function",
"type" : "Range()",
"line" : 1649}
,
{
"name" : "front",
"kind" : "function",
"type" : "T()",
"line" : 1654}
,
{
"name" : "back",
"kind" : "function",
"type" : "T()",
"line" : 1660}
,
{
"name" : "front",
"kind" : "function",
"type" : "void(T value)",
"line" : 1666}
,
{
"name" : "back",
"kind" : "function",
"type" : "void(T value)",
"line" : 1672}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 1678}
,
{
"name" : "popBack",
"kind" : "function",
"type" : "void()",
"line" : 1684}
,
{
"name" : "moveFront",
"kind" : "function",
"type" : "T()",
"line" : 1690}
,
{
"name" : "moveBack",
"kind" : "function",
"type" : "T()",
"line" : 1696}
,
{
"name" : "moveAt",
"kind" : "function",
"type" : "T(size_t i)",
"line" : 1702}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "T(size_t i)",
"line" : 1709}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "void(T value, size_t i)",
"line" : 1716}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "typeof(this)(size_t a, size_t b)",
"line" : 1723}
,
{
"name" : "opIndexOpAssign(string op)",
"kind" : "template",
"line" : 1728,
"members" : [
{
"name" : "opIndexOpAssign",
"kind" : "function",
"type" : "void(T value, size_t i)",
"line" : 1728}
]
}
,
{
"name" : "length",
"kind" : "function",
"type" : "const size_t()",
"line" : 1734}
]
}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 1745}
,
{
"name" : "dup",
"kind" : "function",
"type" : "Array()",
"line" : 1756}
,
{
"name" : "length",
"kind" : "function",
"type" : "const size_t()",
"line" : 1767}
,
{
"name" : "capacity",
"kind" : "function",
"type" : "size_t()",
"line" : 1778}
,
{
"name" : "reserve",
"kind" : "function",
"type" : "void(size_t elements)",
"line" : 1790}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "Range()",
"line" : 1816}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "Range(size_t a, size_t b)",
"line" : 1832}
,
{
"name" : "opDollar",
"kind" : "function",
"type" : "const size_t()",
"line" : 1844}
,
{
"name" : "front",
"kind" : "function",
"type" : "T()",
"line" : 1856}
,
{
"name" : "front",
"kind" : "function",
"type" : "void(T value)",
"line" : 1863}
,
{
"name" : "back",
"kind" : "function",
"type" : "T()",
"line" : 1870}
,
{
"name" : "back",
"kind" : "function",
"type" : "void(T value)",
"line" : 1877}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "T(size_t i)",
"line" : 1890}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "void(T value, size_t i)",
"line" : 1897}
,
{
"name" : "opIndexOpAssign(string op)",
"kind" : "template",
"line" : 1904,
"members" : [
{
"name" : "opIndexOpAssign",
"kind" : "function",
"type" : "void(T value, size_t i)",
"line" : 1904}
]
}
,
{
"name" : "opBinary(string op,Stuff) if (op == \"~\")",
"kind" : "template",
"line" : 1917,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "Array(Stuff stuff)",
"line" : 1917}
]
}
,
{
"name" : "opOpAssign(string op,Stuff) if (op == \"~\")",
"kind" : "template",
"line" : 1932,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "void(Stuff stuff)",
"line" : 1932}
]
}
,
{
"name" : "clear",
"kind" : "function",
"type" : "void()",
"line" : 1952}
,
{
"name" : "length",
"kind" : "function",
"type" : "void(size_t newLength)",
"line" : 1967}
,
{
"name" : "removeAny",
"kind" : "function",
"type" : "T()",
"line" : 1986}
,
{
"name" : "stableRemoveAny",
"kind" : "alias",
"type" : "removeAny",
"line" : 1993}
,
{
"name" : "insertBack(Stuff) if (isImplicitlyConvertible!(Stuff,T) || isInputRange!(Stuff) && isImplicitlyConvertible!(ElementType!(Stuff),T))",
"kind" : "template",
"line" : 2006,
"members" : [
{
"name" : "insertBack",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 2006}
]
}
,
{
"name" : "insert",
"kind" : "alias",
"type" : "insertBack",
"line" : 2014}
,
{
"name" : "removeBack",
"kind" : "function",
"type" : "void()",
"line" : 2025}
,
{
"name" : "stableRemoveBack",
"kind" : "alias",
"type" : "removeBack",
"line" : 2036}
,
{
"name" : "removeBack",
"kind" : "function",
"type" : "size_t(size_t howMany)",
"line" : 2051}
,
{
"name" : "stableRemoveBack",
"kind" : "alias",
"type" : "removeBack",
"line" : 2066}
,
{
"name" : "insertBefore(Stuff) if (isImplicitlyConvertible!(Stuff,T))",
"kind" : "template",
"line" : 2079,
"members" : [
{
"name" : "insertBefore",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 2079}
]
}
,
{
"name" : "insertBefore(Stuff) if (isInputRange!(Stuff) && isImplicitlyConvertible!(ElementType!(Stuff),T))",
"kind" : "template",
"line" : 2095,
"members" : [
{
"name" : "insertBefore",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 2095}
]
}
,
{
"name" : "insertAfter(Stuff)",
"kind" : "template",
"line" : 2133,
"members" : [
{
"name" : "insertAfter",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 2133}
]
}
,
{
"name" : "replace(Stuff) if (isInputRange!(Stuff) && isImplicitlyConvertible!(ElementType!(Stuff),T))",
"kind" : "template",
"line" : 2146,
"members" : [
{
"name" : "replace",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 2146}
]
}
,
{
"name" : "replace(Stuff) if (isImplicitlyConvertible!(Stuff,T))",
"kind" : "template",
"line" : 2170,
"members" : [
{
"name" : "replace",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 2170}
]
}
,
{
"name" : "linearRemove",
"kind" : "function",
"type" : "Range(Range r)",
"line" : 2198}
,
{
"name" : "stableLinearRemove",
"kind" : "alias",
"type" : "remove",
"line" : 2212}
]
}
]
}
,
{
"name" : "BinaryHeap(Store,alias less = \"a < b\") if (isRandomAccessRange!(Store) || isRandomAccessRange!(typeof(Store.init[])))",
"kind" : "struct",
"line" : 2423,
"members" : [
{
"name" : "BinaryHeap",
"kind" : "struct",
"line" : 2423,
"members" : [
{
"name" : "_payload",
"kind" : "variable",
"type" : "RefCounted!(Tuple!(Store,\"_store\",size_t,\"_length\"),RefCountedAutoInitialize.no)",
"line" : 2430}
,
{
"name" : "comp",
"kind" : "alias",
"type" : "binaryFun!(less)",
"line" : 2432}
,
{
"name" : "_store",
"kind" : "function",
"type" : "Store()",
"line" : 2434}
,
{
"name" : "_length",
"kind" : "function",
"type" : "size_t()",
"line" : 2439}
,
{
"name" : "assertValid",
"kind" : "function",
"type" : "void()",
"line" : 2446}
,
{
"name" : "percolateDown",
"kind" : "function",
"type" : "void(Store r, size_t i, size_t length)",
"line" : 2463}
,
{
"name" : "pop",
"kind" : "function",
"type" : "void(Store store)",
"line" : 2485}
,
{
"name" : "swap",
"kind" : "function",
"type" : "void(Store _store, size_t i, size_t j)",
"line" : 2496}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Store s, size_t initialSize = size_t.max)",
"line" : 2528}
,
{
"name" : "acquire",
"kind" : "function",
"type" : "void(Store s, size_t initialSize = size_t.max)",
"line" : 2537}
,
{
"name" : "assume",
"kind" : "function",
"type" : "void(Store s, size_t initialSize = size_t.max)",
"line" : 2555}
,
{
"name" : "release",
"kind" : "function",
"type" : "()",
"line" : 2568}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 2582}
,
{
"name" : "dup",
"kind" : "function",
"type" : "BinaryHeap()",
"line" : 2591}
,
{
"name" : "length",
"kind" : "function",
"type" : "size_t()",
"line" : 2602}
,
{
"name" : "capacity",
"kind" : "function",
"type" : "size_t()",
"line" : 2612}
,
{
"name" : "front",
"kind" : "function",
"type" : "ElementType!(Store)()",
"line" : 2629}
,
{
"name" : "clear",
"kind" : "function",
"type" : "void()",
"line" : 2638}
,
{
"name" : "insert",
"kind" : "function",
"type" : "size_t(ElementType!(Store) value)",
"line" : 2647}
,
{
"name" : "removeFront",
"kind" : "function",
"type" : "void()",
"line" : 2688}
,
{
"name" : "removeAny",
"kind" : "function",
"type" : "ElementType!(Store)()",
"line" : 2708}
,
{
"name" : "replaceFront",
"kind" : "function",
"type" : "void(ElementType!(Store) value)",
"line" : 2717}
,
{
"name" : "conditionalInsert",
"kind" : "function",
"type" : "bool(ElementType!(Store) value)",
"line" : 2734}
]
}
]
}
,
{
"name" : "heapify(Store)",
"kind" : "template",
"line" : 2756,
"members" : [
{
"name" : "heapify",
"kind" : "function",
"type" : "BinaryHeap!(Store)(Store s, size_t initialSize = size_t.max)",
"line" : 2756}
]
}
,
{
"name" : "Array(T) if (is(T == bool))",
"kind" : "struct",
"line" : 2798,
"members" : [
{
"name" : "Array",
"kind" : "struct",
"line" : 2798,
"members" : [
{
"name" : "bitsPerWord",
"kind" : "variable",
"type" : "uint",
"line" : 2799}
,
{
"name" : "Data",
"kind" : "alias",
"type" : "Tuple!(Array!(size_t).Payload,\"_backend\",ulong,\"_length\")",
"line" : 2801}
,
{
"name" : "_store",
"kind" : "variable",
"type" : "RefCounted!(Data,RefCountedAutoInitialize.no)",
"line" : 2802}
,
{
"name" : "data",
"kind" : "function",
"type" : "size_t[]()",
"line" : 2804}
,
{
"name" : "dataCapacity",
"kind" : "function",
"type" : "size_t()",
"line" : 2810}
,
{
"name" : "Range",
"kind" : "struct",
"line" : 2819,
"members" : [
{
"name" : "_outer",
"kind" : "variable",
"type" : "Array!(bool)",
"line" : 2820}
,
{
"name" : "_a",
"kind" : "variable",
"type" : "ulong",
"line" : 2821}
,
{
"name" : "_b",
"kind" : "variable",
"type" : "ulong",
"line" : 2821}
,
{
"name" : "save",
"kind" : "function",
"type" : "Range()",
"line" : 2823}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 2836}
,
{
"name" : "front",
"kind" : "function",
"type" : "T()",
"line" : 2841}
,
{
"name" : "front",
"kind" : "function",
"type" : "void(bool value)",
"line" : 2847}
,
{
"name" : "moveFront",
"kind" : "function",
"type" : "T()",
"line" : 2853}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 2859}
,
{
"name" : "back",
"kind" : "function",
"type" : "T()",
"line" : 2865}
,
{
"name" : "moveBack",
"kind" : "function",
"type" : "T()",
"line" : 2871}
,
{
"name" : "popBack",
"kind" : "function",
"type" : "void()",
"line" : 2877}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "T(size_t i)",
"line" : 2883}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "void(T value, size_t i)",
"line" : 2888}
,
{
"name" : "moveAt",
"kind" : "function",
"type" : "T(size_t i)",
"line" : 2893}
,
{
"name" : "length",
"kind" : "function",
"type" : "const ulong()",
"line" : 2898}
]
}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 2911}
,
{
"name" : "dup",
"kind" : "function",
"type" : "Array!(bool)()",
"line" : 2931}
,
{
"name" : "length",
"kind" : "function",
"type" : "ulong()",
"line" : 2953}
,
{
"name" : "capacity",
"kind" : "function",
"type" : "ulong()",
"line" : 2973}
,
{
"name" : "reserve",
"kind" : "function",
"type" : "void(ulong e)",
"line" : 2999}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "Range()",
"line" : 3021}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "Range(ulong a, ulong b)",
"line" : 3039}
,
{
"name" : "front",
"kind" : "function",
"type" : "bool()",
"line" : 3058}
,
{
"name" : "front",
"kind" : "function",
"type" : "void(bool value)",
"line" : 3065}
,
{
"name" : "back",
"kind" : "function",
"type" : "bool()",
"line" : 3082}
,
{
"name" : "back",
"kind" : "function",
"type" : "void(bool value)",
"line" : 3089}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "bool(ulong i)",
"line" : 3115}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "void(bool value, ulong i)",
"line" : 3123}
,
{
"name" : "opIndexOpAssign(string op)",
"kind" : "template",
"line" : 3132,
"members" : [
{
"name" : "opIndexOpAssign",
"kind" : "function",
"type" : "void(bool value, ulong i)",
"line" : 3132}
]
}
,
{
"name" : "moveAt",
"kind" : "function",
"type" : "T(ulong i)",
"line" : 3148}
,
{
"name" : "opBinary(string op,Stuff) if (op == \"~\")",
"kind" : "template",
"line" : 3169,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "Array!(bool)(Stuff rhs)",
"line" : 3169}
]
}
,
{
"name" : "opOpAssign(string op,Stuff) if (op == \"~\")",
"kind" : "template",
"line" : 3196,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "Array!(bool)(Stuff stuff)",
"line" : 3196}
]
}
,
{
"name" : "clear",
"kind" : "function",
"type" : "void()",
"line" : 3223}
,
{
"name" : "length",
"kind" : "function",
"type" : "void(ulong newLength)",
"line" : 3246}
,
{
"name" : "insert",
"kind" : "alias",
"type" : "insertBack",
"line" : 3280}
,
{
"name" : "stableInsert",
"kind" : "alias",
"type" : "insertBack",
"line" : 3282}
,
{
"name" : "linearInsert",
"kind" : "alias",
"type" : "insertBack",
"line" : 3288}
,
{
"name" : "stableLinearInsert",
"kind" : "alias",
"type" : "insertBack",
"line" : 3290}
,
{
"name" : "removeAny",
"kind" : "function",
"type" : "T()",
"line" : 3304}
,
{
"name" : "stableRemoveAny",
"kind" : "alias",
"type" : "removeAny",
"line" : 3311}
,
{
"name" : "insertBack(Stuff) if (is(Stuff : bool))",
"kind" : "template",
"line" : 3336,
"members" : [
{
"name" : "insertBack",
"kind" : "function",
"type" : "ulong(Stuff stuff)",
"line" : 3336}
]
}
,
{
"name" : "insertBack(Stuff) if (isInputRange!(Stuff) && is(ElementType!(Stuff) : bool))",
"kind" : "template",
"line" : 3361,
"members" : [
{
"name" : "insertBack",
"kind" : "function",
"type" : "ulong(Stuff stuff)",
"line" : 3361}
]
}
,
{
"name" : "stableInsertBack",
"kind" : "alias",
"type" : "insertBack",
"line" : 3374}
,
{
"name" : "removeBack",
"kind" : "function",
"type" : "void()",
"line" : 3388}
,
{
"name" : "stableRemoveBack",
"kind" : "alias",
"type" : "removeBack",
"line" : 3404}
,
{
"name" : "removeBack",
"kind" : "function",
"type" : "ulong(ulong howMany)",
"line" : 3420}
,
{
"name" : "insertBefore(Stuff)",
"kind" : "template",
"line" : 3459,
"members" : [
{
"name" : "insertBefore",
"kind" : "function",
"type" : "ulong(Range r, Stuff stuff)",
"line" : 3459}
]
}
,
{
"name" : "stableInsertBefore",
"kind" : "alias",
"type" : "insertBefore",
"line" : 3470}
,
{
"name" : "insertAfter(Stuff)",
"kind" : "template",
"line" : 3486,
"members" : [
{
"name" : "insertAfter",
"kind" : "function",
"type" : "ulong(Range r, Stuff stuff)",
"line" : 3486}
]
}
,
{
"name" : "stableInsertAfter",
"kind" : "alias",
"type" : "insertAfter",
"line" : 3497}
,
{
"name" : "replace(Stuff) if (is(Stuff : bool))",
"kind" : "template",
"line" : 3508,
"members" : [
{
"name" : "replace",
"kind" : "function",
"type" : "size_t(Range r, Stuff stuff)",
"line" : 3508}
]
}
,
{
"name" : "stableReplace",
"kind" : "alias",
"type" : "replace",
"line" : 3525}
,
{
"name" : "linearRemove",
"kind" : "function",
"type" : "Range(Range r)",
"line" : 3547}
,
{
"name" : "stableLinearRemove",
"kind" : "alias",
"type" : "linearRemove",
"line" : 3554}
]
}
]
}
,
{
"name" : "RBNode(V)",
"kind" : "struct",
"line" : 3576,
"members" : [
{
"name" : "RBNode",
"kind" : "struct",
"line" : 3576,
"members" : [
{
"name" : "Node",
"kind" : "alias",
"type" : "RBNode*",
"line" : 3580}
,
{
"name" : "_left",
"kind" : "variable",
"type" : "Node",
"line" : 3582}
,
{
"name" : "_right",
"kind" : "variable",
"type" : "Node",
"line" : 3583}
,
{
"name" : "_parent",
"kind" : "variable",
"type" : "Node",
"line" : 3584}
,
{
"name" : "value",
"kind" : "variable",
"type" : "V",
"line" : 3589}
,
{
"name" : "Color",
"kind" : "enum",
"line" : 3595,
"base" : "byte",
"members" : [
{
"name" : "Red",
"kind" : "enum member",
"line" : 3597}
,
{
"name" : "Black",
"kind" : "enum member",
"line" : 3598}
]
}
,
{
"name" : "color",
"kind" : "variable",
"type" : "Color",
"line" : 3604}
,
{
"name" : "left",
"kind" : "function",
"type" : "Node()",
"line" : 3609}
,
{
"name" : "right",
"kind" : "function",
"type" : "Node()",
"line" : 3617}
,
{
"name" : "parent",
"kind" : "function",
"type" : "Node()",
"line" : 3625}
,
{
"name" : "left",
"kind" : "function",
"type" : "Node(Node newNode)",
"line" : 3636}
,
{
"name" : "right",
"kind" : "function",
"type" : "Node(Node newNode)",
"line" : 3650}
,
{
"name" : "rotateR",
"kind" : "function",
"type" : "Node()",
"line" : 3678}
,
{
"name" : "rotateL",
"kind" : "function",
"type" : "Node()",
"line" : 3721}
,
{
"name" : "isLeftNode",
"kind" : "function",
"type" : "const bool()",
"line" : 3750}
,
{
"name" : "setColor",
"kind" : "function",
"type" : "void(Node end)",
"line" : 3768}
,
{
"name" : "remove",
"kind" : "function",
"type" : "Node(Node end)",
"line" : 3869}
,
{
"name" : "leftmost",
"kind" : "function",
"type" : "Node()",
"line" : 4054}
,
{
"name" : "rightmost",
"kind" : "function",
"type" : "Node()",
"line" : 4065}
,
{
"name" : "next",
"kind" : "function",
"type" : "Node()",
"line" : 4079}
,
{
"name" : "prev",
"kind" : "function",
"type" : "Node()",
"line" : 4098}
,
{
"name" : "dup",
"kind" : "function",
"type" : "Node(scope Node delegate(V v) alloc)",
"line" : 4111}
,
{
"name" : "dup",
"kind" : "function",
"type" : "Node()",
"line" : 4128}
]
}
]
}
,
{
"name" : "RedBlackTree(T,alias less = \"a < b\",bool allowDuplicates = false) if (is(typeof(binaryFun!(less)(T.init,T.init))))",
"kind" : "class",
"line" : 4163,
"members" : [
{
"name" : "RedBlackTree",
"kind" : "class",
"line" : 4163,
"members" : [
{
"name" : "_less",
"kind" : "alias",
"type" : "binaryFun!(less)",
"line" : 4164}
,
{
"name" : "_add",
"kind" : "function",
"type" : "(Elem n)",
"line" : 4172}
,
{
"name" : "Elem",
"kind" : "alias",
"type" : "T",
"line" : 4279}
,
{
"name" : "Node",
"kind" : "alias",
"type" : "RBNode!(Elem).Node",
"line" : 4282}
,
{
"name" : "_end",
"kind" : "variable",
"type" : "Node",
"line" : 4284}
,
{
"name" : "_length",
"kind" : "variable",
"type" : "size_t",
"line" : 4285}
,
{
"name" : "_setup",
"kind" : "function",
"type" : "void()",
"line" : 4287}
,
{
"name" : "allocate",
"kind" : "function",
"type" : "Node()",
"line" : 4293}
,
{
"name" : "allocate",
"kind" : "function",
"type" : "Node(Elem v)",
"line" : 4298}
,
{
"name" : "Range",
"kind" : "struct",
"line" : 4309,
"members" : [
{
"name" : "_begin",
"kind" : "variable",
"type" : "Node",
"line" : 4310}
,
{
"name" : "_end",
"kind" : "variable",
"type" : "Node",
"line" : 4311}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Node b, Node e)",
"line" : 4313}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 4322}
,
{
"name" : "front",
"kind" : "function",
"type" : "Elem()",
"line" : 4330}
,
{
"name" : "back",
"kind" : "function",
"type" : "Elem()",
"line" : 4338}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 4348}
,
{
"name" : "popBack",
"kind" : "function",
"type" : "void()",
"line" : 4358}
,
{
"name" : "save",
"kind" : "function",
"type" : "Range()",
"line" : 4366}
]
}
,
{
"name" : "_find",
"kind" : "function",
"type" : "Node(Elem e)",
"line" : 4397}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 4438}
,
{
"name" : "length",
"kind" : "function",
"type" : "size_t()",
"line" : 4448}
,
{
"name" : "dup",
"kind" : "function",
"type" : "RedBlackTree()",
"line" : 4459}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "Range()",
"line" : 4481}
,
{
"name" : "front",
"kind" : "function",
"type" : "Elem()",
"line" : 4491}
,
{
"name" : "back",
"kind" : "function",
"type" : "Elem()",
"line" : 4501}
,
{
"name" : "opBinaryRight(string op) if (op == \"in\")",
"kind" : "template",
"line" : 4512,
"members" : [
{
"name" : "opBinaryRight",
"kind" : "function",
"type" : "bool(Elem e)",
"line" : 4512}
]
}
,
{
"name" : "clear",
"kind" : "function",
"type" : "void()",
"line" : 4529}
,
{
"name" : "stableInsert(Stuff) if (isImplicitlyConvertible!(Stuff,Elem))",
"kind" : "template",
"line" : 4549,
"members" : [
{
"name" : "stableInsert",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 4549}
]
}
,
{
"name" : "stableInsert(Stuff) if (isInputRange!(Stuff) && isImplicitlyConvertible!(ElementType!(Stuff),Elem))",
"kind" : "template",
"line" : 4568,
"members" : [
{
"name" : "stableInsert",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 4568}
]
}
,
{
"name" : "insert",
"kind" : "alias",
"type" : "stableInsert",
"line" : 4591}
,
{
"name" : "removeAny",
"kind" : "function",
"type" : "Elem()",
"line" : 4629}
,
{
"name" : "removeFront",
"kind" : "function",
"type" : "void()",
"line" : 4658}
,
{
"name" : "removeBack",
"kind" : "function",
"type" : "void()",
"line" : 4672}
,
{
"name" : "remove",
"kind" : "function",
"type" : "Range(Range r)",
"line" : 4706}
,
{
"name" : "remove",
"kind" : "function",
"type" : "Range(Take!(Range) r)",
"line" : 4747}
,
{
"name" : "removeKey(U) if (isImplicitlyConvertible!(U,Elem))",
"kind" : "template",
"line" : 4808,
"members" : [
{
"name" : "removeKey",
"kind" : "function",
"type" : "size_t(U[] elems...)",
"line" : 4808}
]
}
,
{
"name" : "removeKey(Stuff) if (isInputRange!(Stuff) && isImplicitlyConvertible!(ElementType!(Stuff),Elem) && !is(Stuff == Elem[]))",
"kind" : "template",
"line" : 4827,
"members" : [
{
"name" : "removeKey",
"kind" : "function",
"type" : "size_t(Stuff stuff)",
"line" : 4827}
]
}
,
{
"name" : "_firstGreater",
"kind" : "function",
"type" : "Node(Elem e)",
"line" : 4878}
,
{
"name" : "_firstGreaterEqual",
"kind" : "function",
"type" : "Node(Elem e)",
"line" : 4897}
,
{
"name" : "upperBound",
"kind" : "function",
"type" : "Range(Elem e)",
"line" : 4922}
,
{
"name" : "lowerBound",
"kind" : "function",
"type" : "Range(Elem e)",
"line" : 4933}
,
{
"name" : "equalRange",
"kind" : "function",
"type" : "Range(Elem e)",
"line" : 4944}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "()",
"line" : 5092}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Elem[] elems...)",
"line" : 5101}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Node end, size_t length)",
"line" : 5107}
]
}
]
}
,
{
"name" : "redBlackTree(E)",
"kind" : "template",
"line" : 5157,
"members" : [
{
"name" : "redBlackTree",
"kind" : "function",
"type" : "(E[] elems...)",
"line" : 5157}
]
}
,
{
"name" : "redBlackTree(bool allowDuplicates,E)",
"kind" : "template",
"line" : 5163,
"members" : [
{
"name" : "redBlackTree",
"kind" : "function",
"type" : "(E[] elems...)",
"line" : 5163}
]
}
,
{
"name" : "redBlackTree(alias less,E)",
"kind" : "template",
"line" : 5169,
"members" : [
{
"name" : "redBlackTree",
"kind" : "function",
"type" : "(E[] elems...)",
"line" : 5169}
]
}
,
{
"name" : "redBlackTree(alias less,bool allowDuplicates,E) if (is(typeof(binaryFun!(less)(E.init,E.init))))",
"kind" : "template",
"line" : 5175,
"members" : [
{
"name" : "redBlackTree",
"kind" : "function",
"type" : "(E[] elems...)",
"line" : 5175}
]
}
]
}
,
{
"name" : "std.contracts",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/contracts.d",
"members" : [
]
}
,
{
"name" : "std.conv",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/conv.d",
"members" : [
{
"name" : "ConvException",
"kind" : "class",
"line" : 34,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ConvException(string s)",
"line" : 36}
]
}
,
{
"name" : "ConvError",
"kind" : "alias",
"type" : "std.conv.ConvException",
"line" : 42}
,
{
"name" : "convError(S,T,string f = __FILE__,uint ln = __LINE__)",
"kind" : "template",
"line" : 44,
"members" : [
{
"name" : "convError",
"kind" : "function",
"type" : "void(S source)",
"line" : 44}
]
}
,
{
"name" : "convError(S,T,string f = __FILE__,uint ln = __LINE__)",
"kind" : "template",
"line" : 52,
"members" : [
{
"name" : "convError",
"kind" : "function",
"type" : "void(S source, int radix)",
"line" : 52}
]
}
,
{
"name" : "ConvOverflowException",
"kind" : "class",
"line" : 63,
"base" : "ConvException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ConvOverflowException(string s)",
"line" : 65}
,
{
"name" : "raise",
"kind" : "function",
"type" : "void(string s)",
"line" : 71}
]
}
,
{
"name" : "ConvOverflowError",
"kind" : "alias",
"type" : "std.conv.ConvOverflowException",
"line" : 77}
,
{
"name" : "implicitlyConverts(S,T)",
"kind" : "template",
"line" : 79,
"members" : [
{
"name" : "implicitlyConverts",
"kind" : "variable",
"type" : "bool",
"line" : 81}
]
}
,
{
"name" : "to(T)",
"kind" : "template",
"line" : 98,
"members" : [
{
"name" : "to(A...)",
"kind" : "template",
"line" : 100,
"members" : [
{
"name" : "to",
"kind" : "function",
"type" : "T(A args)",
"line" : 100}
]
}
]
}
,
{
"name" : "toImpl(T,S) if (!implicitlyConverts!(S,T) && isSomeString!(T) && isInputRange!(Unqual!(S)) && isSomeChar!(ElementType!(S)))",
"kind" : "template",
"line" : 115,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S s)",
"line" : 115}
]
}
,
{
"name" : "toImpl(T,S) if (isSomeString!(T) && !isSomeChar!(ElementType!(S)) && (isInputRange!(S) || isInputRange!(Unqual!(S))))",
"kind" : "template",
"line" : 195,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S s, in T leftBracket = \"[\", in T separator = \", \", in T rightBracket = \"]\")",
"line" : 195}
]
}
,
{
"name" : "toImpl(T,S) if (isStaticArray!(S))",
"kind" : "template",
"line" : 232,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(ref S s)",
"line" : 232}
]
}
,
{
"name" : "toImpl(T,S) if (isSomeString!(T) && (is(S == void[]) || is(S == const(void)[]) || is(S == immutable(void)[])))",
"kind" : "template",
"line" : 241,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(ref S s, in T leftBracket = \"[\", in T separator = \" \", in T rightBracket = \"]\")",
"line" : 241}
]
}
,
{
"name" : "toImpl(T,S) if (isAssociativeArray!(S) && isSomeString!(T))",
"kind" : "template",
"line" : 275,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S s, in T leftBracket = \"[\", in T keyval = \":\", in T separator = \", \", in T rightBracket = \"]\")",
"line" : 275}
]
}
,
{
"name" : "toImpl(T,S) if (is(S : Object) && isSomeString!(T))",
"kind" : "template",
"line" : 299,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S s, in T nullstr = \"null\")",
"line" : 299}
]
}
,
{
"name" : "toImpl(T,S) if (is(S == struct) && isSomeString!(T) && is(typeof(&S.init.toString)))",
"kind" : "template",
"line" : 320,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S s)",
"line" : 320}
]
}
,
{
"name" : "toImpl(T,S) if (is(S == struct) && isSomeString!(T) && !is(typeof(&S.init.toString)) && !isInputRange!(S))",
"kind" : "template",
"line" : 337,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S s, in T left = S.stringof ~ \"(\", in T separator = \", \", in T right = \")\")",
"line" : 337}
]
}
,
{
"name" : "toImpl(T,S) if (is(S == enum) && isSomeString!(T) && !implicitlyConverts!(S,T))",
"kind" : "template",
"line" : 376,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S s)",
"line" : 376}
]
}
,
{
"name" : "toImpl(T,S) if (is(S == typedef) && isSomeString!(T))",
"kind" : "template",
"line" : 413,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S s, in T left = S.stringof ~ \"(\", in T right = \")\")",
"line" : 413}
]
}
,
{
"name" : "toImpl(Target,Source) if (implicitlyConverts!(Source,Target))",
"kind" : "template",
"line" : 562,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "Target(Source value)",
"line" : 562}
]
}
,
{
"name" : "toImpl(T,S) if (is(Unqual!(S) == bool) && isSomeString!(T))",
"kind" : "template",
"line" : 579,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S b)",
"line" : 579}
]
}
,
{
"name" : "toImpl(T,S) if ((is(S : const(wchar)[]) || is(S : const(dchar)[])) && !isSomeString!(T))",
"kind" : "template",
"line" : 598,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S value)",
"line" : 598}
]
}
,
{
"name" : "toImpl(T,S) if (isDynamicArray!(S) && is(S : const(char)[]) && !isSomeString!(T))",
"kind" : "template",
"line" : 608,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S value)",
"line" : 608}
]
}
,
{
"name" : "toImpl(T,S) if (is(S : Object) && is(T : Object))",
"kind" : "template",
"line" : 629,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S value)",
"line" : 629}
]
}
,
{
"name" : "toImpl(T,S) if (is(S : Object) && !is(T : Object) && !isSomeString!(T) && is(typeof(S.init.to!(T)()) : T))",
"kind" : "template",
"line" : 683,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S value)",
"line" : 683}
]
}
,
{
"name" : "toImpl(T,S) if (!implicitlyConverts!(S,T) && (isNumeric!(S) || isSomeChar!(S)) && (isNumeric!(T) || isSomeChar!(T)))",
"kind" : "template",
"line" : 701,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S value)",
"line" : 701}
]
}
,
{
"name" : "parseString(T)",
"kind" : "template",
"line" : 748,
"members" : [
{
"name" : "parseString",
"kind" : "function",
"type" : "T(const(char)[] v)",
"line" : 748}
]
}
,
{
"name" : "toImpl(T,S) if (isDynamicArray!(S) && isArray!(T) && !isSomeString!(S) && !isSomeString!(T) && !implicitlyConverts!(S,T))",
"kind" : "template",
"line" : 764,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S src)",
"line" : 764}
]
}
,
{
"name" : "toImpl(T,S) if (isAssociativeArray!(S) && isAssociativeArray!(T))",
"kind" : "template",
"line" : 800,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S src)",
"line" : 800}
]
}
,
{
"name" : "convFails(Source,Target,E)",
"kind" : "template",
"line" : 843,
"members" : [
{
"name" : "convFails",
"kind" : "function",
"type" : "bool(Source src)",
"line" : 843}
]
}
,
{
"name" : "testIntegralToFloating(Integral,Floating)",
"kind" : "template",
"line" : 852,
"members" : [
{
"name" : "testIntegralToFloating",
"kind" : "function",
"type" : "void()",
"line" : 852}
]
}
,
{
"name" : "testFloatingToIntegral(Floating,Integral)",
"kind" : "template",
"line" : 859,
"members" : [
{
"name" : "testFloatingToIntegral",
"kind" : "function",
"type" : "void()",
"line" : 859}
]
}
,
{
"name" : "roundTo(Target)",
"kind" : "template",
"line" : 1020,
"members" : [
{
"name" : "roundTo(Source)",
"kind" : "template",
"line" : 1021,
"members" : [
{
"name" : "roundTo",
"kind" : "function",
"type" : "Target(Source value)",
"line" : 1021}
]
}
]
}
,
{
"name" : "parse(Target,Source) if (isSomeChar!(ElementType!(Source)) && isIntegral!(Target) && !isSomeChar!(Target))",
"kind" : "template",
"line" : 1081,
"members" : [
{
"name" : "parse",
"kind" : "function",
"type" : "Target(ref Source s)",
"line" : 1081}
]
}
,
{
"name" : "parse(Target,Source) if (isSomeString!(Source) && isIntegral!(Target))",
"kind" : "template",
"line" : 1163,
"members" : [
{
"name" : "parse",
"kind" : "function",
"type" : "Target(ref Source s, uint radix)",
"line" : 1163}
]
}
,
{
"name" : "parse(Target,Source) if (isSomeString!(Source) && is(Target == enum))",
"kind" : "template",
"line" : 1242,
"members" : [
{
"name" : "parse",
"kind" : "function",
"type" : "Target(ref Source s)",
"line" : 1242}
]
}
,
{
"name" : "parse(Target,Source) if (isInputRange!(Source) && isFloatingPoint!(Target))",
"kind" : "template",
"line" : 1297,
"members" : [
{
"name" : "parse",
"kind" : "function",
"type" : "Target(ref Source p)",
"line" : 1297}
]
}
,
{
"name" : "parse(Target,Source) if (isInputRange!(Source) && isSomeChar!(ElementType!(Source)) && isSomeChar!(Target) && Target.sizeof >= ElementType!(Source).sizeof)",
"kind" : "template",
"line" : 1662,
"members" : [
{
"name" : "parse",
"kind" : "function",
"type" : "Target(ref Source s)",
"line" : 1662}
]
}
,
{
"name" : "parse(Target,Source) if (isSomeString!(Source) && is(Source : const(Target)[]))",
"kind" : "template",
"line" : 1673,
"members" : [
{
"name" : "parse",
"kind" : "function",
"type" : "Target(ref Source s)",
"line" : 1673}
]
}
,
{
"name" : "parse(Target,Source) if (isSomeString!(Source) && is(Target == bool))",
"kind" : "template",
"line" : 1692,
"members" : [
{
"name" : "parse",
"kind" : "function",
"type" : "Target(ref Source s)",
"line" : 1692}
]
}
,
{
"name" : "parse(Target,Source) if (isSomeString!(Source) && is(Target == typedef))",
"kind" : "template",
"line" : 1711,
"members" : [
{
"name" : "parse",
"kind" : "function",
"type" : "Target(ref Source s)",
"line" : 1711}
]
}
,
{
"name" : "skipWS(R)",
"kind" : "template",
"line" : 1720,
"members" : [
{
"name" : "skipWS",
"kind" : "function",
"type" : "void(ref R r)",
"line" : 1720}
]
}
,
{
"name" : "parse(Target,Source) if (isSomeString!(Source) && isDynamicArray!(Target) && !isSomeString!(Target))",
"kind" : "template",
"line" : 1730,
"members" : [
{
"name" : "parse",
"kind" : "function",
"type" : "Target(ref Source s, dchar lbracket = '[', dchar rbracket = ']', dchar comma = ',')",
"line" : 1730}
]
}
,
{
"name" : "getComplexStrings",
"kind" : "function",
"type" : "bool(in const(immutable(char)[]) s, out string s1, out string s2)",
"line" : 3059}
,
{
"name" : "feq",
"kind" : "function",
"type" : "bool(in const(real) rx, in const(real) ry, in const(real) precision)",
"line" : 3112}
,
{
"name" : "feq",
"kind" : "function",
"type" : "bool(in const(real) r1, in const(real) r2)",
"line" : 3134}
,
{
"name" : "feq",
"kind" : "function",
"type" : "bool(in const(ireal) r1, in const(ireal) r2)",
"line" : 3151}
,
{
"name" : "feq",
"kind" : "function",
"type" : "bool(in const(creal) r1, in const(creal) r2)",
"line" : 3171}
,
{
"name" : "toImpl(T,S) if (isIntegral!(S) && S.min == 0 && S.sizeof < (uint).sizeof && isSomeString!(T))",
"kind" : "template",
"line" : 3190,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S value)",
"line" : 3190}
]
}
,
{
"name" : "toImpl(T,S) if (isIntegral!(S) && S.min < 0 && S.sizeof < (int).sizeof && isSomeString!(T))",
"kind" : "template",
"line" : 3197,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S value)",
"line" : 3197}
]
}
,
{
"name" : "toImpl(T,S) if (staticIndexOf!(Unqual!(S),uint,ulong) >= 0 && isSomeString!(T))",
"kind" : "template",
"line" : 3204,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S input)",
"line" : 3204}
]
}
,
{
"name" : "toImpl(T,S) if (staticIndexOf!(Unqual!(S),char,wchar,dchar) >= 0 && isSomeString!(T))",
"kind" : "template",
"line" : 3260,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S c)",
"line" : 3260}
]
}
,
{
"name" : "toImpl(T,S) if (staticIndexOf!(Unqual!(S),int,long) >= 0 && isSomeString!(T))",
"kind" : "template",
"line" : 3298,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S value)",
"line" : 3298}
]
}
,
{
"name" : "toImpl(T,S) if (isPointer!(S) && is(S : const(char)*) && isSomeString!(T))",
"kind" : "template",
"line" : 3370,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S s)",
"line" : 3370}
]
}
,
{
"name" : "toImpl(T,S) if (is(Unqual!(S) == float) && isSomeString!(T))",
"kind" : "template",
"line" : 3376,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S f)",
"line" : 3376}
]
}
,
{
"name" : "toImpl(T,S) if (is(Unqual!(S) == double) && isSomeString!(T))",
"kind" : "template",
"line" : 3382,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S d)",
"line" : 3382}
]
}
,
{
"name" : "toImpl(T,S) if (is(Unqual!(S) == real) && isSomeString!(T))",
"kind" : "template",
"line" : 3391,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S r)",
"line" : 3391}
]
}
,
{
"name" : "toImpl(T,S) if (is(Unqual!(S) == ifloat) && isSomeString!(T))",
"kind" : "template",
"line" : 3399,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S f)",
"line" : 3399}
]
}
,
{
"name" : "toImpl(T,S) if (is(Unqual!(S) == idouble) && isSomeString!(T))",
"kind" : "template",
"line" : 3405,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S d)",
"line" : 3405}
]
}
,
{
"name" : "toImpl(T,S) if (is(Unqual!(S) == ireal) && isSomeString!(T))",
"kind" : "template",
"line" : 3413,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S r)",
"line" : 3413}
]
}
,
{
"name" : "toImpl(T,S) if (is(Unqual!(S) == cfloat) && isSomeString!(T))",
"kind" : "template",
"line" : 3422,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S f)",
"line" : 3422}
]
}
,
{
"name" : "toImpl(T,S) if (is(Unqual!(S) == cdouble) && isSomeString!(T))",
"kind" : "template",
"line" : 3428,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S d)",
"line" : 3428}
]
}
,
{
"name" : "toImpl(T,S) if (is(Unqual!(S) == creal) && isSomeString!(T))",
"kind" : "template",
"line" : 3437,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S r)",
"line" : 3437}
]
}
,
{
"name" : "toImpl(T,S) if (isIntegral!(Unqual!(S)) && !is(Unqual!(S) == ulong) && isSomeString!(T))",
"kind" : "template",
"line" : 3451,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S value, uint radix)",
"line" : 3451}
]
}
,
{
"name" : "toImpl(T,S) if (is(Unqual!(S) == ulong) && isSomeString!(T))",
"kind" : "template",
"line" : 3461,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S value, uint radix)",
"line" : 3461}
]
}
,
{
"name" : "toImpl(T,S) if (isPointer!(S) && (!is(typeof(*S.init)) || !isSomeChar!(typeof(*S.init))) && isSomeString!(T))",
"kind" : "template",
"line" : 3735,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S value)",
"line" : 3735}
]
}
,
{
"name" : "textImpl(S,U...)",
"kind" : "template",
"line" : 3742,
"members" : [
{
"name" : "textImpl",
"kind" : "function",
"type" : "S(U args)",
"line" : 3742}
]
}
,
{
"name" : "text(T...)",
"kind" : "template",
"line" : 3763,
"members" : [
{
"name" : "text",
"kind" : "function",
"type" : "string(T args)",
"line" : 3763}
]
}
,
{
"name" : "wtext(T...)",
"kind" : "template",
"line" : 3765,
"members" : [
{
"name" : "wtext",
"kind" : "function",
"type" : "wstring(T args)",
"line" : 3765}
]
}
,
{
"name" : "dtext(T...)",
"kind" : "template",
"line" : 3767,
"members" : [
{
"name" : "dtext",
"kind" : "function",
"type" : "dstring(T args)",
"line" : 3767}
]
}
,
{
"name" : "octalFitsInInt(string octalNum)",
"kind" : "template",
"line" : 3793,
"members" : [
{
"name" : "octalFitsInInt",
"kind" : "variable",
"type" : "bool",
"line" : 3797}
]
}
,
{
"name" : "strippedOctalLiteral",
"kind" : "function",
"type" : "string(string original)",
"line" : 3802}
,
{
"name" : "literalIsLong(string num)",
"kind" : "template",
"line" : 3810,
"members" : [
]
}
,
{
"name" : "literalIsUnsigned(string num)",
"kind" : "template",
"line" : 3818,
"members" : [
]
}
,
{
"name" : "octal(string num) if (octalFitsInInt!(num) && !literalIsLong!(num) && !literalIsUnsigned!(num))",
"kind" : "template",
"line" : 3853,
"members" : [
{
"name" : "octal",
"kind" : "function",
"type" : "int()",
"line" : 3853}
]
}
,
{
"name" : "octal(string num) if ((!octalFitsInInt!(num) || literalIsLong!(num)) && !literalIsUnsigned!(num))",
"kind" : "template",
"line" : 3859,
"members" : [
{
"name" : "octal",
"kind" : "function",
"type" : "long()",
"line" : 3859}
]
}
,
{
"name" : "octal(string num) if (octalFitsInInt!(num) && !literalIsLong!(num) && literalIsUnsigned!(num))",
"kind" : "template",
"line" : 3865,
"members" : [
{
"name" : "octal",
"kind" : "function",
"type" : "uint()",
"line" : 3865}
]
}
,
{
"name" : "octal(string num) if ((!octalFitsInInt!(num) || literalIsLong!(num)) && literalIsUnsigned!(num))",
"kind" : "template",
"line" : 3871,
"members" : [
{
"name" : "octal",
"kind" : "function",
"type" : "ulong()",
"line" : 3871}
]
}
,
{
"name" : "isOctalLiteralString",
"kind" : "function",
"type" : "bool(string num)",
"line" : 3882}
,
{
"name" : "isOctalLiteral(string num)",
"kind" : "template",
"line" : 3918,
"members" : [
{
"name" : "isOctalLiteral",
"kind" : "variable",
"type" : "bool",
"line" : 3919}
]
}
,
{
"name" : "octal(T,string num)",
"kind" : "template",
"line" : 3932,
"members" : [
{
"name" : "octal",
"kind" : "function",
"type" : "T()",
"line" : 3932}
]
}
,
{
"name" : "octal(alias s) if (isIntegral!(typeof(s)))",
"kind" : "template",
"line" : 3953,
"members" : [
{
"name" : "octal",
"kind" : "variable",
"line" : 3954}
]
}
,
{
"name" : "toImpl(T,S) if (is(T == struct) && is(typeof(T(src))))",
"kind" : "template",
"line" : 4018,
"members" : [
{
"name" : "toImpl",
"kind" : "function",
"type" : "T(S src)",
"line" : 4018}
]
}
,
{
"name" : "emplace(T) if (!is(T == class))",
"kind" : "template",
"line" : 4044,
"members" : [
{
"name" : "emplace",
"kind" : "function",
"type" : "T*(T* chunk)",
"line" : 4044}
]
}
,
{
"name" : "emplace(T,Args...) if (!is(T == class) && !is(T == struct) && Args.length == 1)",
"kind" : "template",
"line" : 4064,
"members" : [
{
"name" : "emplace",
"kind" : "function",
"type" : "T*(T* chunk, Args args)",
"line" : 4064}
]
}
,
{
"name" : "emplace(T,Args...) if (is(T == struct))",
"kind" : "template",
"line" : 4072,
"members" : [
{
"name" : "emplace",
"kind" : "function",
"type" : "T*(T* chunk, Args args)",
"line" : 4072}
]
}
,
{
"name" : "emplace(T,Args...) if (is(T == class))",
"kind" : "template",
"line" : 4119,
"members" : [
{
"name" : "emplace",
"kind" : "function",
"type" : "T(void[] chunk, Args args)",
"line" : 4119}
]
}
,
{
"name" : "emplace(T,Args...) if (!is(T == class))",
"kind" : "template",
"line" : 4158,
"members" : [
{
"name" : "emplace",
"kind" : "function",
"type" : "T*(void[] chunk, Args args)",
"line" : 4158}
]
}
,
{
"name" : "toTextRange(T,W) if (isIntegral!(T) && isOutputRange!(W,char))",
"kind" : "template",
"line" : 4235,
"members" : [
{
"name" : "toTextRange",
"kind" : "function",
"type" : "void(T value, W writer)",
"line" : 4235}
]
}
]
}
,
{
"name" : "std.cpuid",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/cpuid.d",
"members" : [
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 381}
,
{
"name" : "vendor",
"kind" : "function",
"type" : "string()",
"line" : 383}
,
{
"name" : "processor",
"kind" : "function",
"type" : "string()",
"line" : 384}
,
{
"name" : "mmx",
"kind" : "function",
"type" : "bool()",
"line" : 386}
,
{
"name" : "fxsr",
"kind" : "function",
"type" : "bool()",
"line" : 387}
,
{
"name" : "sse",
"kind" : "function",
"type" : "bool()",
"line" : 388}
,
{
"name" : "sse2",
"kind" : "function",
"type" : "bool()",
"line" : 389}
,
{
"name" : "sse3",
"kind" : "function",
"type" : "bool()",
"line" : 390}
,
{
"name" : "ssse3",
"kind" : "function",
"type" : "bool()",
"line" : 391}
,
{
"name" : "amd3dnow",
"kind" : "function",
"type" : "bool()",
"line" : 393}
,
{
"name" : "amd3dnowExt",
"kind" : "function",
"type" : "bool()",
"line" : 394}
,
{
"name" : "amdMmx",
"kind" : "function",
"type" : "bool()",
"line" : 395}
,
{
"name" : "ia64",
"kind" : "function",
"type" : "bool()",
"line" : 397}
,
{
"name" : "amd64",
"kind" : "function",
"type" : "bool()",
"line" : 398}
,
{
"name" : "hyperThreading",
"kind" : "function",
"type" : "bool()",
"line" : 400}
,
{
"name" : "threadsPerCPU",
"kind" : "function",
"type" : "uint()",
"line" : 401}
,
{
"name" : "coresPerCPU",
"kind" : "function",
"type" : "uint()",
"line" : 402}
,
{
"name" : "intel",
"kind" : "function",
"type" : "bool()",
"line" : 404}
,
{
"name" : "amd",
"kind" : "function",
"type" : "bool()",
"line" : 405}
,
{
"name" : "stepping",
"kind" : "function",
"type" : "uint()",
"line" : 407}
,
{
"name" : "model",
"kind" : "function",
"type" : "uint()",
"line" : 408}
,
{
"name" : "family",
"kind" : "function",
"type" : "uint()",
"line" : 409}
]
}
,
{
"name" : "std.cstream",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/cstream.d",
"members" : [
{
"name" : "CFile",
"kind" : "class",
"line" : 29,
"base" : "Stream",
"members" : [
{
"name" : "cfile",
"kind" : "variable",
"type" : "shared(_iobuf)*",
"line" : 30}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "CFile(shared(_iobuf)* cfile, FileMode mode, bool seekable = false)",
"line" : 39}
,
{
"name" : "file",
"kind" : "function",
"type" : "shared(_iobuf)*()",
"line" : 56}
,
{
"name" : "file",
"kind" : "function",
"type" : "void(shared(_iobuf)* cfile)",
"line" : 61}
,
{
"name" : "flush",
"kind" : "function",
"type" : "void()",
"line" : 70}
,
{
"name" : "close",
"kind" : "function",
"type" : "void()",
"line" : 75}
,
{
"name" : "eof",
"kind" : "function",
"type" : "bool()",
"line" : 84}
,
{
"name" : "getc",
"kind" : "function",
"type" : "char()",
"line" : 91}
,
{
"name" : "ungetc",
"kind" : "function",
"type" : "char(char c)",
"line" : 98}
,
{
"name" : "readBlock",
"kind" : "function",
"type" : "ulong(void* buffer, ulong size)",
"line" : 105}
,
{
"name" : "writeBlock",
"kind" : "function",
"type" : "ulong(const const(void*) buffer, ulong size)",
"line" : 114}
,
{
"name" : "seek",
"kind" : "function",
"type" : "ulong(long offset, SeekPos rel)",
"line" : 121}
,
{
"name" : "writeLine",
"kind" : "function",
"type" : "void(const(char)[] s)",
"line" : 131}
,
{
"name" : "writeLineW",
"kind" : "function",
"type" : "void(const(wchar)[] s)",
"line" : 139}
]
}
,
{
"name" : "din",
"kind" : "variable",
"type" : "std.cstream.CFile",
"line" : 221}
,
{
"name" : "dout",
"kind" : "variable",
"type" : "std.cstream.CFile",
"line" : 226}
,
{
"name" : "derr",
"kind" : "variable",
"type" : "std.cstream.CFile",
"line" : 231}
]
}
,
{
"name" : "std.ctype",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/ctype.d",
"members" : [
{
"name" : "isalnum",
"kind" : "function",
"type" : "pure int(dchar c)",
"line" : 35}
,
{
"name" : "isalpha",
"kind" : "function",
"type" : "pure int(dchar c)",
"line" : 43}
,
{
"name" : "iscntrl",
"kind" : "function",
"type" : "pure int(dchar c)",
"line" : 51}
,
{
"name" : "isdigit",
"kind" : "function",
"type" : "pure int(dchar c)",
"line" : 59}
,
{
"name" : "islower",
"kind" : "function",
"type" : "pure int(dchar c)",
"line" : 67}
,
{
"name" : "ispunct",
"kind" : "function",
"type" : "pure int(dchar c)",
"line" : 75}
,
{
"name" : "isspace",
"kind" : "function",
"type" : "pure int(dchar c)",
"line" : 84}
,
{
"name" : "isupper",
"kind" : "function",
"type" : "pure int(dchar c)",
"line" : 92}
,
{
"name" : "isxdigit",
"kind" : "function",
"type" : "pure int(dchar c)",
"line" : 100}
,
{
"name" : "isgraph",
"kind" : "function",
"type" : "pure int(dchar c)",
"line" : 108}
,
{
"name" : "isprint",
"kind" : "function",
"type" : "pure int(dchar c)",
"line" : 116}
,
{
"name" : "isascii",
"kind" : "function",
"type" : "pure int(dchar c)",
"line" : 124}
,
{
"name" : "tolower",
"kind" : "function",
"type" : "pure dchar(dchar c)",
"line" : 134}
,
{
"name" : "toupper",
"kind" : "function",
"type" : "pure dchar(dchar c)",
"line" : 147}
,
{
"name" : "_SPC",
"kind" : "enum member",
"line" : 160}
,
{
"name" : "_CTL",
"kind" : "enum member",
"line" : 161}
,
{
"name" : "_BLK",
"kind" : "enum member",
"line" : 162}
,
{
"name" : "_HEX",
"kind" : "enum member",
"line" : 163}
,
{
"name" : "_UC",
"kind" : "enum member",
"line" : 164}
,
{
"name" : "_LC",
"kind" : "enum member",
"line" : 165}
,
{
"name" : "_PNC",
"kind" : "enum member",
"line" : 166}
,
{
"name" : "_DIG",
"kind" : "enum member",
"line" : 167}
,
{
"name" : "_ALP",
"kind" : "enum member",
"line" : 168}
,
{
"name" : "_ctype",
"kind" : "variable",
"type" : "immutable(ubyte[128LU])",
"line" : 171}
]
}
,
{
"name" : "std.datebase",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/datebase.d",
"members" : [
{
"name" : "std_date_static_this",
"kind" : "function",
"type" : "voidC ()",
"line" : 20}
]
}
,
{
"name" : "std.date",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/date.d",
"members" : [
{
"name" : "d_time",
"kind" : "alias",
"type" : "long",
"line" : 44}
,
{
"name" : "d_time_nan",
"kind" : "variable",
"type" : "long",
"line" : 49}
,
{
"name" : "Date",
"kind" : "struct",
"line" : 55,
"members" : [
{
"name" : "year",
"kind" : "variable",
"type" : "int",
"line" : 56}
,
{
"name" : "month",
"kind" : "variable",
"type" : "int",
"line" : 57}
,
{
"name" : "day",
"kind" : "variable",
"type" : "int",
"line" : 58}
,
{
"name" : "hour",
"kind" : "variable",
"type" : "int",
"line" : 59}
,
{
"name" : "minute",
"kind" : "variable",
"type" : "int",
"line" : 60}
,
{
"name" : "second",
"kind" : "variable",
"type" : "int",
"line" : 61}
,
{
"name" : "ms",
"kind" : "variable",
"type" : "int",
"line" : 62}
,
{
"name" : "weekday",
"kind" : "variable",
"type" : "int",
"line" : 63}
,
{
"name" : "tzcorrection",
"kind" : "variable",
"type" : "int",
"line" : 64}
,
{
"name" : "parse",
"kind" : "function",
"type" : "void(string s)",
"line" : 67}
]
}
,
{
"name" : "hoursPerDay",
"kind" : "enum member",
"line" : 76}
,
{
"name" : "minutesPerHour",
"kind" : "enum member",
"line" : 77}
,
{
"name" : "msPerMinute",
"kind" : "enum member",
"line" : 78}
,
{
"name" : "msPerHour",
"kind" : "enum member",
"line" : 79}
,
{
"name" : "msPerDay",
"kind" : "enum member",
"line" : 80}
,
{
"name" : "ticksPerMs",
"kind" : "enum member",
"line" : 81}
,
{
"name" : "ticksPerSecond",
"kind" : "enum member",
"line" : 82}
,
{
"name" : "ticksPerMinute",
"kind" : "enum member",
"line" : 83}
,
{
"name" : "ticksPerHour",
"kind" : "enum member",
"line" : 84}
,
{
"name" : "ticksPerDay",
"kind" : "enum member",
"line" : 85}
,
{
"name" : "TicksPerSecond",
"kind" : "alias",
"line" : 88}
,
{
"name" : "TicksPerMs",
"kind" : "alias",
"line" : 89}
,
{
"name" : "TicksPerMinute",
"kind" : "alias",
"line" : 90}
,
{
"name" : "TicksPerHour",
"kind" : "alias",
"line" : 91}
,
{
"name" : "TicksPerDay",
"kind" : "alias",
"line" : 92}
,
{
"name" : "localTZA",
"kind" : "variable",
"type" : "long",
"line" : 100}
,
{
"name" : "daystr",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 102}
,
{
"name" : "monstr",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 103}
,
{
"name" : "mdays",
"kind" : "variable",
"type" : "immutable(int[12LU])",
"line" : 105}
,
{
"name" : "toISO8601YearWeek",
"kind" : "function",
"type" : "void(long t, out int year, out int week)",
"line" : 115}
,
{
"name" : "floor",
"kind" : "function",
"type" : "pure long(long d, int divisor)",
"line" : 170}
,
{
"name" : "dmod",
"kind" : "function",
"type" : "int(long n, long d)",
"line" : 175}
,
{
"name" : "hourFromTime",
"kind" : "function",
"type" : "int(long time)",
"line" : 193}
,
{
"name" : "minFromTime",
"kind" : "function",
"type" : "int(long time)",
"line" : 206}
,
{
"name" : "secFromTime",
"kind" : "function",
"type" : "int(long time)",
"line" : 219}
,
{
"name" : "msFromTime",
"kind" : "function",
"type" : "int(long time)",
"line" : 232}
,
{
"name" : "timeWithinDay",
"kind" : "function",
"type" : "int(long t)",
"line" : 237}
,
{
"name" : "toInteger",
"kind" : "function",
"type" : "long(long n)",
"line" : 242}
,
{
"name" : "day",
"kind" : "function",
"type" : "int(long t)",
"line" : 247}
,
{
"name" : "leapYear",
"kind" : "function",
"type" : "pure bool(uint y)",
"line" : 252}
,
{
"name" : "daysInYear",
"kind" : "function",
"type" : "pure uint(uint year)",
"line" : 274}
,
{
"name" : "dayFromYear",
"kind" : "function",
"type" : "pure int(int year)",
"line" : 296}
,
{
"name" : "timeFromYear",
"kind" : "function",
"type" : "pure long(int y)",
"line" : 304}
,
{
"name" : "yearFromTime",
"kind" : "function",
"type" : "pure int(long t)",
"line" : 313}
,
{
"name" : "inLeapYear",
"kind" : "function",
"type" : "pure bool(long t)",
"line" : 352}
,
{
"name" : "monthFromTime",
"kind" : "function",
"type" : "int(long t)",
"line" : 364}
,
{
"name" : "dateFromTime",
"kind" : "function",
"type" : "int(long t)",
"line" : 421}
,
{
"name" : "weekDay",
"kind" : "function",
"type" : "int(long t)",
"line" : 454}
,
{
"name" : "UTCtoLocalTime",
"kind" : "function",
"type" : "long(long t)",
"line" : 466}
,
{
"name" : "localTimetoUTC",
"kind" : "function",
"type" : "long(long t)",
"line" : 477}
,
{
"name" : "makeTime",
"kind" : "function",
"type" : "long(long hour, long min, long sec, long ms)",
"line" : 488}
,
{
"name" : "makeDay",
"kind" : "function",
"type" : "long(long year, long month, long date)",
"line" : 504}
,
{
"name" : "makeDate",
"kind" : "function",
"type" : "long(long day, long time)",
"line" : 524}
,
{
"name" : "timeClip",
"kind" : "function",
"type" : "long(long time)",
"line" : 532}
,
{
"name" : "dateFromNthWeekdayOfMonth",
"kind" : "function",
"type" : "int(int year, int month, int weekday, int n)",
"line" : 552}
,
{
"name" : "daysInMonth",
"kind" : "function",
"type" : "int(int year, int month)",
"line" : 599}
,
{
"name" : "UTCtoString",
"kind" : "function",
"type" : "string(long time)",
"line" : 649}
,
{
"name" : "toString",
"kind" : "alias",
"line" : 691}
,
{
"name" : "toUTCString",
"kind" : "function",
"type" : "string(long t)",
"line" : 698}
,
{
"name" : "toDateString",
"kind" : "function",
"type" : "string(long time)",
"line" : 725}
,
{
"name" : "toTimeString",
"kind" : "function",
"type" : "string(long time)",
"line" : 757}
,
{
"name" : "parse",
"kind" : "function",
"type" : "long(string s)",
"line" : 798}
,
{
"name" : "std_date_static_this",
"kind" : "function",
"type" : "voidC ()",
"line" : 821}
,
{
"name" : "getUTCtime",
"kind" : "function",
"type" : "long()",
"line" : 981}
,
{
"name" : "getLocalTZA",
"kind" : "function",
"type" : "long()",
"line" : 994}
,
{
"name" : "daylightSavingTA",
"kind" : "function",
"type" : "int(long dt)",
"line" : 1022}
,
{
"name" : "DosFileTime",
"kind" : "typedef",
"type" : "DosFileTime",
"line" : 1090,
"base" : "uint"}
,
{
"name" : "toDtime",
"kind" : "function",
"type" : "long(DosFileTime time)",
"line" : 1096}
,
{
"name" : "toDosFileTime",
"kind" : "function",
"type" : "DosFileTime(long t)",
"line" : 1131}
,
{
"name" : "benchmark(fun...)",
"kind" : "template",
"line" : 1184,
"members" : [
{
"name" : "benchmark",
"kind" : "function",
"type" : "ulong[](uint times, ulong[] result = null)",
"line" : 1184}
]
}
]
}
,
{
"name" : "std.dateparse",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/dateparse.d",
"members" : [
{
"name" : "DateParseError",
"kind" : "class",
"line" : 30,
"base" : "Error",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "DateParseError(string s)",
"line" : 32}
]
}
,
{
"name" : "DateParse",
"kind" : "struct",
"line" : 39,
"members" : [
{
"name" : "parse",
"kind" : "function",
"type" : "void(string s, out Date date)",
"line" : 40}
,
{
"name" : "year",
"kind" : "variable",
"type" : "int",
"line" : 114}
,
{
"name" : "month",
"kind" : "variable",
"type" : "int",
"line" : 115}
,
{
"name" : "day",
"kind" : "variable",
"type" : "int",
"line" : 116}
,
{
"name" : "hours",
"kind" : "variable",
"type" : "int",
"line" : 117}
,
{
"name" : "minutes",
"kind" : "variable",
"type" : "int",
"line" : 118}
,
{
"name" : "seconds",
"kind" : "variable",
"type" : "int",
"line" : 119}
,
{
"name" : "ms",
"kind" : "variable",
"type" : "int",
"line" : 120}
,
{
"name" : "weekday",
"kind" : "variable",
"type" : "int",
"line" : 121}
,
{
"name" : "ampm",
"kind" : "variable",
"type" : "int",
"line" : 122}
,
{
"name" : "tzcorrection",
"kind" : "variable",
"type" : "int",
"line" : 125}
,
{
"name" : "s",
"kind" : "variable",
"type" : "string",
"line" : 127}
,
{
"name" : "si",
"kind" : "variable",
"type" : "int",
"line" : 128}
,
{
"name" : "number",
"kind" : "variable",
"type" : "int",
"line" : 129}
,
{
"name" : "buffer",
"kind" : "variable",
"type" : "char[]",
"line" : 130}
,
{
"name" : "DP",
"kind" : "enum",
"line" : 132,
"base" : "byte",
"members" : [
{
"name" : "err",
"kind" : "enum member",
"line" : 134}
,
{
"name" : "weekday",
"kind" : "enum member",
"line" : 135}
,
{
"name" : "month",
"kind" : "enum member",
"line" : 136}
,
{
"name" : "number",
"kind" : "enum member",
"line" : 137}
,
{
"name" : "end",
"kind" : "enum member",
"line" : 138}
,
{
"name" : "colon",
"kind" : "enum member",
"line" : 139}
,
{
"name" : "minus",
"kind" : "enum member",
"line" : 140}
,
{
"name" : "slash",
"kind" : "enum member",
"line" : 141}
,
{
"name" : "ampm",
"kind" : "enum member",
"line" : 142}
,
{
"name" : "plus",
"kind" : "enum member",
"line" : 143}
,
{
"name" : "tz",
"kind" : "enum member",
"line" : 144}
,
{
"name" : "dst",
"kind" : "enum member",
"line" : 145}
,
{
"name" : "dsttz",
"kind" : "enum member",
"line" : 146}
]
}
,
{
"name" : "nextToken",
"kind" : "function",
"type" : "DP()",
"line" : 149}
,
{
"name" : "classify",
"kind" : "function",
"type" : "DP(string buf)",
"line" : 262}
,
{
"name" : "parseString",
"kind" : "function",
"type" : "int(string s)",
"line" : 417}
,
{
"name" : "parseCalendarDate",
"kind" : "function",
"type" : "int(int n1)",
"line" : 529}
,
{
"name" : "parseTimeOfDay",
"kind" : "function",
"type" : "int(int n1)",
"line" : 607}
]
}
]
}
,
{
"name" : "std.datetime",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/datetime.d",
"members" : [
{
"name" : "stds_indexOf",
"kind" : "alias",
"line" : 160}
,
{
"name" : "Month",
"kind" : "enum",
"line" : 184,
"base" : "ubyte",
"members" : [
{
"name" : "jan",
"kind" : "enum member",
"line" : 184}
,
{
"name" : "feb",
"kind" : "enum member",
"line" : 185}
,
{
"name" : "mar",
"kind" : "enum member",
"line" : 186}
,
{
"name" : "apr",
"kind" : "enum member",
"line" : 187}
,
{
"name" : "may",
"kind" : "enum member",
"line" : 188}
,
{
"name" : "jun",
"kind" : "enum member",
"line" : 189}
,
{
"name" : "jul",
"kind" : "enum member",
"line" : 190}
,
{
"name" : "aug",
"kind" : "enum member",
"line" : 191}
,
{
"name" : "sep",
"kind" : "enum member",
"line" : 192}
,
{
"name" : "oct",
"kind" : "enum member",
"line" : 193}
,
{
"name" : "nov",
"kind" : "enum member",
"line" : 194}
,
{
"name" : "dec",
"kind" : "enum member",
"line" : 195}
]
}
,
{
"name" : "DayOfWeek",
"kind" : "enum",
"line" : 201,
"base" : "ubyte",
"members" : [
{
"name" : "sun",
"kind" : "enum member",
"line" : 201}
,
{
"name" : "mon",
"kind" : "enum member",
"line" : 202}
,
{
"name" : "tue",
"kind" : "enum member",
"line" : 203}
,
{
"name" : "wed",
"kind" : "enum member",
"line" : 204}
,
{
"name" : "thu",
"kind" : "enum member",
"line" : 205}
,
{
"name" : "fri",
"kind" : "enum member",
"line" : 206}
,
{
"name" : "sat",
"kind" : "enum member",
"line" : 207}
]
}
,
{
"name" : "AllowDayOverflow",
"kind" : "enum",
"line" : 223,
"base" : "int",
"members" : [
{
"name" : "no",
"kind" : "enum member",
"line" : 225}
,
{
"name" : "yes",
"kind" : "enum member",
"line" : 228}
]
}
,
{
"name" : "Direction",
"kind" : "enum",
"line" : 237,
"base" : "int",
"members" : [
{
"name" : "bwd",
"kind" : "enum member",
"line" : 239}
,
{
"name" : "fwd",
"kind" : "enum member",
"line" : 242}
,
{
"name" : "both",
"kind" : "enum member",
"line" : 245}
]
}
,
{
"name" : "PopFirst",
"kind" : "enum",
"line" : 274,
"base" : "int",
"members" : [
{
"name" : "no",
"kind" : "enum member",
"line" : 276}
,
{
"name" : "yes",
"kind" : "enum member",
"line" : 279}
]
}
,
{
"name" : "AutoStart",
"kind" : "enum",
"line" : 287,
"base" : "int",
"members" : [
{
"name" : "no",
"kind" : "enum member",
"line" : 289}
,
{
"name" : "yes",
"kind" : "enum member",
"line" : 292}
]
}
,
{
"name" : "timeStrings",
"kind" : "variable",
"type" : "immutable(char[][])",
"line" : 304}
,
{
"name" : "DateTimeException",
"kind" : "alias",
"line" : 316}
,
{
"name" : "Clock",
"kind" : "class",
"line" : 323,
"base" : "Object",
"members" : [
{
"name" : "currTime",
"kind" : "function",
"type" : "SysTime(immutable immutable(TimeZone) tz = cast(immutable(TimeZone))opCall())",
"line" : 333}
,
{
"name" : "currStdTime",
"kind" : "function",
"type" : "@property @trusted long()",
"line" : 370}
,
{
"name" : "currSystemTick",
"kind" : "function",
"type" : "@property @safe TickDuration()",
"line" : 433}
,
{
"name" : "currAppTick",
"kind" : "function",
"type" : "@property @safe TickDuration()",
"line" : 459}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Clock()",
"line" : 475}
]
}
,
{
"name" : "SysTime",
"kind" : "struct",
"line" : 526,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "nothrow ref SysTime(in const(DateTime) dateTime, immutable immutable(TimeZone) tz = cast(immutable(TimeZone))null)",
"line" : 538}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "nothrow ref SysTime(in const(DateTime) dateTime, in const(FracSec) fsec, immutable immutable(TimeZone) tz = cast(immutable(TimeZone))null)",
"line" : 580}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "nothrow ref SysTime(in const(Date) date, immutable immutable(TimeZone) tz = cast(immutable(TimeZone))null)",
"line" : 634}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "pure nothrow ref SysTime(long stdTime, immutable immutable(TimeZone) tz = cast(immutable(TimeZone))null)",
"line" : 681}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "pure nothrow ref SysTime(ref const const(SysTime) rhs)",
"line" : 708}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "pure nothrow ref SysTime(SysTime rhs)",
"line" : 720}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "const pure nothrow bool(ref const const(SysTime) rhs)",
"line" : 735}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "const pure nothrow int(in const(SysTime) rhs)",
"line" : 795}
,
{
"name" : "year",
"kind" : "function",
"type" : "const nothrow @property short()",
"line" : 881}
,
{
"name" : "year",
"kind" : "function",
"type" : "@property void(int year)",
"line" : 939}
,
{
"name" : "yearBC",
"kind" : "function",
"type" : "const @property ushort()",
"line" : 1026}
,
{
"name" : "yearBC",
"kind" : "function",
"type" : "@property void(int year)",
"line" : 1079}
,
{
"name" : "month",
"kind" : "function",
"type" : "const nothrow @property Month()",
"line" : 1176}
,
{
"name" : "month",
"kind" : "function",
"type" : "@property void(Month month)",
"line" : 1234}
,
{
"name" : "day",
"kind" : "function",
"type" : "const nothrow @property ubyte()",
"line" : 1342}
,
{
"name" : "day",
"kind" : "function",
"type" : "@property void(int day)",
"line" : 1401}
,
{
"name" : "hour",
"kind" : "function",
"type" : "const nothrow @property ubyte()",
"line" : 1497}
,
{
"name" : "hour",
"kind" : "function",
"type" : "@property void(int hour)",
"line" : 1564}
,
{
"name" : "minute",
"kind" : "function",
"type" : "const nothrow @property ubyte()",
"line" : 1621}
,
{
"name" : "minute",
"kind" : "function",
"type" : "@property void(int minute)",
"line" : 1690}
,
{
"name" : "second",
"kind" : "function",
"type" : "const nothrow @property ubyte()",
"line" : 1749}
,
{
"name" : "second",
"kind" : "function",
"type" : "@property void(int second)",
"line" : 1819}
,
{
"name" : "fracSec",
"kind" : "function",
"type" : "const nothrow @property FracSec()",
"line" : 1881}
,
{
"name" : "fracSec",
"kind" : "function",
"type" : "nothrow @property void(FracSec fracSec)",
"line" : 1948}
,
{
"name" : "stdTime",
"kind" : "function",
"type" : "const pure nothrow @property long()",
"line" : 2005}
,
{
"name" : "stdTime",
"kind" : "function",
"type" : "pure nothrow @property void(long stdTime)",
"line" : 2034}
,
{
"name" : "timezone",
"kind" : "function",
"type" : "const pure nothrow @property immutable(TimeZone)()",
"line" : 2067}
,
{
"name" : "timezone",
"kind" : "function",
"type" : "pure nothrow @property void(immutable immutable(TimeZone) timezone)",
"line" : 2082}
,
{
"name" : "dstInEffect",
"kind" : "function",
"type" : "const nothrow @property bool()",
"line" : 2094}
,
{
"name" : "toLocalTime",
"kind" : "function",
"type" : "const nothrow SysTime()",
"line" : 2105}
,
{
"name" : "toUTC",
"kind" : "function",
"type" : "const pure nothrow SysTime()",
"line" : 2140}
,
{
"name" : "toOtherTZ",
"kind" : "function",
"type" : "const pure nothrow SysTime(immutable immutable(TimeZone) tz)",
"line" : 2163}
,
{
"name" : "toUnixTime",
"kind" : "function",
"type" : "const pure nothrow long()",
"line" : 2198}
,
{
"name" : "toTimeVal",
"kind" : "function",
"type" : "const pure nothrow timeval()",
"line" : 2231}
,
{
"name" : "toTM",
"kind" : "function",
"type" : "const nothrow tm()",
"line" : 2276}
,
{
"name" : "add(string units) if (units == \"years\" || units == \"months\")",
"kind" : "template",
"line" : 2407,
"members" : [
{
"name" : "add",
"kind" : "function",
"type" : "nothrow SysTime(long value, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)",
"line" : 2407}
]
}
,
{
"name" : "roll(string units) if (units == \"years\")",
"kind" : "template",
"line" : 3589,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "nothrow void(long value, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)",
"line" : 3589}
]
}
,
{
"name" : "roll(string units) if (units == \"months\")",
"kind" : "template",
"line" : 3641,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "nothrow void(long value, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)",
"line" : 3641}
]
}
,
{
"name" : "roll(string units) if (units == \"days\")",
"kind" : "template",
"line" : 4476,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "nothrow void(long value)",
"line" : 4476}
]
}
,
{
"name" : "roll(string units) if (units == \"hours\" || units == \"minutes\" || units == \"seconds\")",
"kind" : "template",
"line" : 4814,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "nothrow void(long value)",
"line" : 4814}
]
}
,
{
"name" : "roll(string units) if (units == \"msecs\" || units == \"usecs\" || units == \"hnsecs\")",
"kind" : "template",
"line" : 5477,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "nothrow void(long value)",
"line" : 5477}
]
}
,
{
"name" : "opBinary(string op,D) if ((op == \"+\" || op == \"-\") && (is(Unqual!(D) == Duration) || is(Unqual!(D) == TickDuration)))",
"kind" : "template",
"line" : 5865,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "const pure nothrow SysTime(in D duration)",
"line" : 5865}
]
}
,
{
"name" : "opOpAssign(string op,D) if ((op == \"+\" || op == \"-\") && (is(Unqual!(D) == Duration) || is(Unqual!(D) == TickDuration)))",
"kind" : "template",
"line" : 6091,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "pure nothrow SysTime(in D duration)",
"line" : 6091}
]
}
,
{
"name" : "opBinary(string op) if (op == \"-\")",
"kind" : "template",
"line" : 6294,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "const pure nothrow Duration(in SysTime rhs)",
"line" : 6294}
]
}
,
{
"name" : "diffMonths",
"kind" : "function",
"type" : "const nothrow int(in const(SysTime) rhs)",
"line" : 6420}
,
{
"name" : "isLeapYear",
"kind" : "function",
"type" : "const nothrow @property bool()",
"line" : 6456}
,
{
"name" : "dayOfWeek",
"kind" : "function",
"type" : "const nothrow @property DayOfWeek()",
"line" : 6478}
,
{
"name" : "dayOfYear",
"kind" : "function",
"type" : "const nothrow @property ushort()",
"line" : 6507}
,
{
"name" : "dayOfYear",
"kind" : "function",
"type" : "@property void(int day)",
"line" : 6538}
,
{
"name" : "dayOfGregorianCal",
"kind" : "function",
"type" : "const nothrow @property int()",
"line" : 6583}
,
{
"name" : "dayOfGregorianCal",
"kind" : "function",
"type" : "nothrow @property void(int days)",
"line" : 6973}
,
{
"name" : "isoWeek",
"kind" : "function",
"type" : "const nothrow @property ubyte()",
"line" : 7219}
,
{
"name" : "endOfMonth",
"kind" : "function",
"type" : "const nothrow @property SysTime()",
"line" : 7264}
,
{
"name" : "daysInMonth",
"kind" : "function",
"type" : "const nothrow @property ubyte()",
"line" : 7348}
,
{
"name" : "endofMonthDay",
"kind" : "alias",
"line" : 7357}
,
{
"name" : "isAD",
"kind" : "function",
"type" : "const nothrow @property bool()",
"line" : 7418}
,
{
"name" : "julianDay",
"kind" : "function",
"type" : "const nothrow @property long()",
"line" : 7454}
,
{
"name" : "modJulianDay",
"kind" : "function",
"type" : "const nothrow @property long()",
"line" : 7501}
,
{
"name" : "opCast(T) if (is(Unqual!(T) == Date))",
"kind" : "template",
"line" : 7527,
"members" : [
{
"name" : "opCast",
"kind" : "function",
"type" : "const nothrow Date()",
"line" : 7527}
]
}
,
{
"name" : "opCast(T) if (is(Unqual!(T) == DateTime))",
"kind" : "template",
"line" : 7564,
"members" : [
{
"name" : "opCast",
"kind" : "function",
"type" : "const nothrow DateTime()",
"line" : 7564}
]
}
,
{
"name" : "opCast(T) if (is(Unqual!(T) == TimeOfDay))",
"kind" : "template",
"line" : 7626,
"members" : [
{
"name" : "opCast",
"kind" : "function",
"type" : "const nothrow TimeOfDay()",
"line" : 7626}
]
}
,
{
"name" : "opCast(T) if (is(Unqual!(T) == SysTime))",
"kind" : "template",
"line" : 7680,
"members" : [
{
"name" : "opCast",
"kind" : "function",
"type" : "const pure nothrow SysTime()",
"line" : 7680}
]
}
,
{
"name" : "toISOString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 7722}
,
{
"name" : "toISOExtString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 7864}
,
{
"name" : "toISOExtendedString",
"kind" : "alias",
"line" : 7904}
,
{
"name" : "toSimpleString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 8010}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 8122}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 8133}
,
{
"name" : "fromISOString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 8203,
"members" : [
{
"name" : "fromISOString",
"kind" : "function",
"type" : "SysTime(in S isoString, immutable TimeZone tz = null)",
"line" : 8203}
]
}
,
{
"name" : "fromISOExtString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 8399,
"members" : [
{
"name" : "fromISOExtString",
"kind" : "function",
"type" : "SysTime(in S isoExtString, immutable TimeZone tz = null)",
"line" : 8399}
]
}
,
{
"name" : "fromISOExtendedString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 8459,
"members" : [
{
"name" : "fromISOExtendedString",
"kind" : "function",
"type" : "SysTime(in S isoExtString, immutable TimeZone tz = null)",
"line" : 8459}
]
}
,
{
"name" : "fromSimpleString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 8611,
"members" : [
{
"name" : "fromSimpleString",
"kind" : "function",
"type" : "SysTime(in S simpleString, immutable TimeZone tz = null)",
"line" : 8611}
]
}
,
{
"name" : "min",
"kind" : "function",
"type" : "pure nothrow @property SysTime()",
"line" : 8771}
,
{
"name" : "max",
"kind" : "function",
"type" : "pure nothrow @property SysTime()",
"line" : 8792}
,
{
"name" : "adjTime",
"kind" : "function",
"type" : "const nothrow @property long()",
"line" : 8812}
,
{
"name" : "adjTime",
"kind" : "function",
"type" : "nothrow @property void(long adjTime)",
"line" : 8821}
,
{
"name" : "_stdTime",
"kind" : "variable",
"type" : "long",
"line" : 8836}
,
{
"name" : "_timezone",
"kind" : "variable",
"type" : "DTRebindable!(immutable(TimeZone))",
"line" : 8837}
]
}
,
{
"name" : "Date",
"kind" : "struct",
"line" : 8858,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "pure ref Date(int year, int month, int day)",
"line" : 8872}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "pure nothrow ref Date(int day)",
"line" : 8950}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "const pure nothrow int(in const(Date) rhs)",
"line" : 9091}
,
{
"name" : "year",
"kind" : "function",
"type" : "const pure nothrow @property short()",
"line" : 9209}
,
{
"name" : "year",
"kind" : "function",
"type" : "pure @property void(int year)",
"line" : 9245}
,
{
"name" : "yearBC",
"kind" : "function",
"type" : "const pure @property ushort()",
"line" : 9298}
,
{
"name" : "yearBC",
"kind" : "function",
"type" : "pure @property void(int year)",
"line" : 9348}
,
{
"name" : "month",
"kind" : "function",
"type" : "const pure nothrow @property Month()",
"line" : 9394}
,
{
"name" : "month",
"kind" : "function",
"type" : "pure @property void(Month month)",
"line" : 9429}
,
{
"name" : "day",
"kind" : "function",
"type" : "const pure nothrow @property ubyte()",
"line" : 9473}
,
{
"name" : "day",
"kind" : "function",
"type" : "pure @property void(int day)",
"line" : 9516}
,
{
"name" : "add(string units) if (units == \"years\")",
"kind" : "template",
"line" : 9649,
"members" : [
{
"name" : "add",
"kind" : "function",
"type" : "pure nothrow void(long value, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)",
"line" : 9649}
]
}
,
{
"name" : "add(string units) if (units == \"months\")",
"kind" : "template",
"line" : 9886,
"members" : [
{
"name" : "add",
"kind" : "function",
"type" : "pure nothrow void(long months, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)",
"line" : 9886}
]
}
,
{
"name" : "roll(string units) if (units == \"years\")",
"kind" : "template",
"line" : 10443,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "pure nothrow void(long value, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)",
"line" : 10443}
]
}
,
{
"name" : "roll(string units) if (units == \"months\")",
"kind" : "template",
"line" : 10493,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "pure nothrow void(long months, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)",
"line" : 10493}
]
}
,
{
"name" : "roll(string units) if (units == \"days\")",
"kind" : "template",
"line" : 11107,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "pure nothrow void(long days)",
"line" : 11107}
]
}
,
{
"name" : "opBinary(string op,D) if ((op == \"+\" || op == \"-\") && (is(Unqual!(D) == Duration) || is(Unqual!(D) == TickDuration)))",
"kind" : "template",
"line" : 11352,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "const pure nothrow Date(in D duration)",
"line" : 11352}
]
}
,
{
"name" : "opOpAssign(string op,D) if ((op == \"+\" || op == \"-\") && (is(Unqual!(D) == Duration) || is(Unqual!(D) == TickDuration)))",
"kind" : "template",
"line" : 11464,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "pure nothrow Date(in D duration)",
"line" : 11464}
]
}
,
{
"name" : "opBinary(string op) if (op == \"-\")",
"kind" : "template",
"line" : 11552,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "const pure nothrow Duration(in Date rhs)",
"line" : 11552}
]
}
,
{
"name" : "diffMonths",
"kind" : "function",
"type" : "const pure nothrow int(in const(Date) rhs)",
"line" : 11617}
,
{
"name" : "isLeapYear",
"kind" : "function",
"type" : "const pure nothrow @property bool()",
"line" : 11855}
,
{
"name" : "dayOfWeek",
"kind" : "function",
"type" : "const pure nothrow @property DayOfWeek()",
"line" : 11877}
,
{
"name" : "dayOfYear",
"kind" : "function",
"type" : "const pure nothrow @property ushort()",
"line" : 11906}
,
{
"name" : "dayOfYear",
"kind" : "function",
"type" : "pure @property void(int day)",
"line" : 11986}
,
{
"name" : "dayOfGregorianCal",
"kind" : "function",
"type" : "const pure nothrow @property int()",
"line" : 12201}
,
{
"name" : "dayOfGregorianCal",
"kind" : "function",
"type" : "pure nothrow @property void(int day)",
"line" : 12316}
,
{
"name" : "isoWeek",
"kind" : "function",
"type" : "const pure nothrow @property ubyte()",
"line" : 12371}
,
{
"name" : "endOfMonth",
"kind" : "function",
"type" : "const pure nothrow @property Date()",
"line" : 12481}
,
{
"name" : "daysInMonth",
"kind" : "function",
"type" : "const pure nothrow @property ubyte()",
"line" : 12548}
,
{
"name" : "endofMonthDay",
"kind" : "alias",
"line" : 12557}
,
{
"name" : "isAD",
"kind" : "function",
"type" : "const pure nothrow @property bool()",
"line" : 12618}
,
{
"name" : "julianDay",
"kind" : "function",
"type" : "const pure nothrow @property long()",
"line" : 12651}
,
{
"name" : "modJulianDay",
"kind" : "function",
"type" : "const pure nothrow @property long()",
"line" : 12681}
,
{
"name" : "toISOString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 12712}
,
{
"name" : "toISOExtString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 12775}
,
{
"name" : "toISOExtendedString",
"kind" : "alias",
"line" : 12799}
,
{
"name" : "toSimpleString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 12844}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 12905}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 12916}
,
{
"name" : "fromISOString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 12955,
"members" : [
{
"name" : "fromISOString",
"kind" : "function",
"type" : "Date(in S isoString)",
"line" : 12955}
]
}
,
{
"name" : "fromISOExtString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 13080,
"members" : [
{
"name" : "fromISOExtString",
"kind" : "function",
"type" : "Date(in S isoExtString)",
"line" : 13080}
]
}
,
{
"name" : "fromISOExtendedString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 13116,
"members" : [
{
"name" : "fromISOExtendedString",
"kind" : "function",
"type" : "Date(in S isoExtString)",
"line" : 13116}
]
}
,
{
"name" : "fromSimpleString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 13222,
"members" : [
{
"name" : "fromSimpleString",
"kind" : "function",
"type" : "Date(in S simpleString)",
"line" : 13222}
]
}
,
{
"name" : "min",
"kind" : "function",
"type" : "pure nothrow @property Date()",
"line" : 13339}
,
{
"name" : "max",
"kind" : "function",
"type" : "pure nothrow @property Date()",
"line" : 13363}
,
{
"name" : "_valid",
"kind" : "function",
"type" : "pure nothrow bool(int year, int month, int day)",
"line" : 13393}
,
{
"name" : "addDays",
"kind" : "function",
"type" : "pure nothrow ref Date(long days)",
"line" : 13417}
,
{
"name" : "_year",
"kind" : "variable",
"type" : "short",
"line" : 13605}
,
{
"name" : "_month",
"kind" : "variable",
"type" : "Month",
"line" : 13606}
,
{
"name" : "_day",
"kind" : "variable",
"type" : "ubyte",
"line" : 13607}
]
}
,
{
"name" : "TimeOfDay",
"kind" : "struct",
"line" : 13617,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "pure ref TimeOfDay(int hour, int minute, int second = 0)",
"line" : 13630}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "const pure nothrow int(in const(TimeOfDay) rhs)",
"line" : 13685}
,
{
"name" : "hour",
"kind" : "function",
"type" : "const pure nothrow @property ubyte()",
"line" : 13748}
,
{
"name" : "hour",
"kind" : "function",
"type" : "pure @property void(int hour)",
"line" : 13778}
,
{
"name" : "minute",
"kind" : "function",
"type" : "const pure nothrow @property ubyte()",
"line" : 13805}
,
{
"name" : "minute",
"kind" : "function",
"type" : "pure @property void(int minute)",
"line" : 13835}
,
{
"name" : "second",
"kind" : "function",
"type" : "const pure nothrow @property ubyte()",
"line" : 13862}
,
{
"name" : "second",
"kind" : "function",
"type" : "pure @property void(int second)",
"line" : 13892}
,
{
"name" : "roll(string units) if (units == \"hours\")",
"kind" : "template",
"line" : 13959,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "pure nothrow void(long value)",
"line" : 13959}
]
}
,
{
"name" : "roll(string units) if (units == \"minutes\" || units == \"seconds\")",
"kind" : "template",
"line" : 14009,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "pure nothrow void(long value)",
"line" : 14009}
]
}
,
{
"name" : "opBinary(string op,D) if ((op == \"+\" || op == \"-\") && (is(Unqual!(D) == Duration) || is(Unqual!(D) == TickDuration)))",
"kind" : "template",
"line" : 14238,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "const pure nothrow TimeOfDay(in D duration)",
"line" : 14238}
]
}
,
{
"name" : "opOpAssign(string op,D) if ((op == \"+\" || op == \"-\") && (is(Unqual!(D) == Duration) || is(Unqual!(D) == TickDuration)))",
"kind" : "template",
"line" : 14344,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "pure nothrow TimeOfDay(in D duration)",
"line" : 14344}
]
}
,
{
"name" : "opBinary(string op) if (op == \"-\")",
"kind" : "template",
"line" : 14424,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "const pure nothrow Duration(in TimeOfDay rhs)",
"line" : 14424}
]
}
,
{
"name" : "toISOString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 14474}
,
{
"name" : "toISOExtString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 14509}
,
{
"name" : "toISOExtendedString",
"kind" : "alias",
"line" : 14521}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 14547}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 14559}
,
{
"name" : "fromISOString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 14599,
"members" : [
{
"name" : "fromISOString",
"kind" : "function",
"type" : "TimeOfDay(in S isoString)",
"line" : 14599}
]
}
,
{
"name" : "fromISOExtString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 14708,
"members" : [
{
"name" : "fromISOExtString",
"kind" : "function",
"type" : "TimeOfDay(in S isoExtString)",
"line" : 14708}
]
}
,
{
"name" : "fromISOExtendedString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 14735,
"members" : [
{
"name" : "fromISOExtendedString",
"kind" : "function",
"type" : "TimeOfDay(in S isoExtString)",
"line" : 14735}
]
}
,
{
"name" : "min",
"kind" : "function",
"type" : "pure nothrow @property TimeOfDay()",
"line" : 14825}
,
{
"name" : "max",
"kind" : "function",
"type" : "pure nothrow @property TimeOfDay()",
"line" : 14845}
,
{
"name" : "addSeconds",
"kind" : "function",
"type" : "pure nothrow ref TimeOfDay(long seconds)",
"line" : 14880}
,
{
"name" : "_valid",
"kind" : "function",
"type" : "pure nothrow bool(int hour, int minute, int second)",
"line" : 14985}
,
{
"name" : "_hour",
"kind" : "variable",
"type" : "ubyte",
"line" : 15003}
,
{
"name" : "_minute",
"kind" : "variable",
"type" : "ubyte",
"line" : 15004}
,
{
"name" : "_second",
"kind" : "variable",
"type" : "ubyte",
"line" : 15005}
,
{
"name" : "maxHour",
"kind" : "variable",
"type" : "ubyte",
"line" : 15007}
,
{
"name" : "maxMinute",
"kind" : "variable",
"type" : "ubyte",
"line" : 15008}
,
{
"name" : "maxSecond",
"kind" : "variable",
"type" : "ubyte",
"line" : 15009}
]
}
,
{
"name" : "DateTime",
"kind" : "struct",
"line" : 15023,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "pure nothrow ref DateTime(in const(Date) date, in const(TimeOfDay) tod = TimeOfDay(cast(ubyte)0u,cast(ubyte)0u,cast(ubyte)0u))",
"line" : 15031}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "pure ref DateTime(int year, int month, int day, int hour = 0, int minute = 0, int second = 0)",
"line" : 15071}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "const pure nothrow int(in const(DateTime) rhs)",
"line" : 15107}
,
{
"name" : "date",
"kind" : "function",
"type" : "const pure nothrow @property Date()",
"line" : 15320}
,
{
"name" : "date",
"kind" : "function",
"type" : "pure nothrow @property void(in const(Date) date)",
"line" : 15353}
,
{
"name" : "timeOfDay",
"kind" : "function",
"type" : "const pure nothrow @property TimeOfDay()",
"line" : 15378}
,
{
"name" : "timeOfDay",
"kind" : "function",
"type" : "pure nothrow @property void(in const(TimeOfDay) tod)",
"line" : 15412}
,
{
"name" : "year",
"kind" : "function",
"type" : "const pure nothrow @property short()",
"line" : 15438}
,
{
"name" : "year",
"kind" : "function",
"type" : "pure @property void(int year)",
"line" : 15477}
,
{
"name" : "yearBC",
"kind" : "function",
"type" : "const pure @property short()",
"line" : 15522}
,
{
"name" : "yearBC",
"kind" : "function",
"type" : "pure @property void(int year)",
"line" : 15567}
,
{
"name" : "month",
"kind" : "function",
"type" : "const pure nothrow @property Month()",
"line" : 15610}
,
{
"name" : "month",
"kind" : "function",
"type" : "pure @property void(Month month)",
"line" : 15645}
,
{
"name" : "day",
"kind" : "function",
"type" : "const pure nothrow @property ubyte()",
"line" : 15685}
,
{
"name" : "day",
"kind" : "function",
"type" : "pure @property void(int day)",
"line" : 15732}
,
{
"name" : "hour",
"kind" : "function",
"type" : "const pure nothrow @property ubyte()",
"line" : 15827}
,
{
"name" : "hour",
"kind" : "function",
"type" : "pure @property void(int hour)",
"line" : 15857}
,
{
"name" : "minute",
"kind" : "function",
"type" : "const pure nothrow @property ubyte()",
"line" : 15883}
,
{
"name" : "minute",
"kind" : "function",
"type" : "pure @property void(int minute)",
"line" : 15913}
,
{
"name" : "second",
"kind" : "function",
"type" : "const pure nothrow @property ubyte()",
"line" : 15939}
,
{
"name" : "second",
"kind" : "function",
"type" : "pure @property void(int second)",
"line" : 15969}
,
{
"name" : "add(string units) if (units == \"years\" || units == \"months\")",
"kind" : "template",
"line" : 16030,
"members" : [
{
"name" : "add",
"kind" : "function",
"type" : "pure nothrow void(long value, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)",
"line" : 16030}
]
}
,
{
"name" : "roll(string units) if (units == \"years\" || units == \"months\")",
"kind" : "template",
"line" : 16120,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "pure nothrow void(long value, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)",
"line" : 16120}
]
}
,
{
"name" : "roll(string units) if (units == \"days\")",
"kind" : "template",
"line" : 16208,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "pure nothrow void(long days)",
"line" : 16208}
]
}
,
{
"name" : "roll(string units) if (units == \"hours\" || units == \"minutes\" || units == \"seconds\")",
"kind" : "template",
"line" : 16250,
"members" : [
{
"name" : "roll",
"kind" : "function",
"type" : "pure nothrow void(long value)",
"line" : 16250}
]
}
,
{
"name" : "opBinary(string op,D) if ((op == \"+\" || op == \"-\") && (is(Unqual!(D) == Duration) || is(Unqual!(D) == TickDuration)))",
"kind" : "template",
"line" : 16781,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "const pure nothrow DateTime(in D duration)",
"line" : 16781}
]
}
,
{
"name" : "opOpAssign(string op,D) if ((op == \"+\" || op == \"-\") && (is(Unqual!(D) == Duration) || is(Unqual!(D) == TickDuration)))",
"kind" : "template",
"line" : 16891,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "pure nothrow DateTime(in D duration)",
"line" : 16891}
]
}
,
{
"name" : "opBinary(string op) if (op == \"-\")",
"kind" : "template",
"line" : 16977,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "const pure nothrow Duration(in DateTime rhs)",
"line" : 16977}
]
}
,
{
"name" : "diffMonths",
"kind" : "function",
"type" : "const pure nothrow int(in const(DateTime) rhs)",
"line" : 17092}
,
{
"name" : "isLeapYear",
"kind" : "function",
"type" : "const pure nothrow @property bool()",
"line" : 17128}
,
{
"name" : "dayOfWeek",
"kind" : "function",
"type" : "const pure nothrow @property DayOfWeek()",
"line" : 17150}
,
{
"name" : "dayOfYear",
"kind" : "function",
"type" : "const pure nothrow @property ushort()",
"line" : 17179}
,
{
"name" : "dayOfYear",
"kind" : "function",
"type" : "pure @property void(int day)",
"line" : 17210}
,
{
"name" : "dayOfGregorianCal",
"kind" : "function",
"type" : "const pure nothrow @property int()",
"line" : 17254}
,
{
"name" : "dayOfGregorianCal",
"kind" : "function",
"type" : "pure nothrow @property void(int days)",
"line" : 17320}
,
{
"name" : "isoWeek",
"kind" : "function",
"type" : "const pure nothrow @property ubyte()",
"line" : 17369}
,
{
"name" : "endOfMonth",
"kind" : "function",
"type" : "const pure nothrow @property DateTime()",
"line" : 17407}
,
{
"name" : "daysInMonth",
"kind" : "function",
"type" : "const pure nothrow @property ubyte()",
"line" : 17474}
,
{
"name" : "endofMonthDay",
"kind" : "alias",
"line" : 17483}
,
{
"name" : "isAD",
"kind" : "function",
"type" : "const pure nothrow @property bool()",
"line" : 17514}
,
{
"name" : "julianDay",
"kind" : "function",
"type" : "const pure nothrow @property long()",
"line" : 17543}
,
{
"name" : "modJulianDay",
"kind" : "function",
"type" : "const pure nothrow @property long()",
"line" : 17591}
,
{
"name" : "toISOString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 17632}
,
{
"name" : "toISOExtString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 17692}
,
{
"name" : "toISOExtendedString",
"kind" : "alias",
"line" : 17704}
,
{
"name" : "toSimpleString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 17757}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 17804}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 17815}
,
{
"name" : "fromISOString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 17864,
"members" : [
{
"name" : "fromISOString",
"kind" : "function",
"type" : "DateTime(in S isoString)",
"line" : 17864}
]
}
,
{
"name" : "fromISOExtString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 17956,
"members" : [
{
"name" : "fromISOExtString",
"kind" : "function",
"type" : "DateTime(in S isoExtString)",
"line" : 17956}
]
}
,
{
"name" : "fromISOExtendedString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 17976,
"members" : [
{
"name" : "fromISOExtendedString",
"kind" : "function",
"type" : "DateTime(in S isoExtString)",
"line" : 17976}
]
}
,
{
"name" : "fromSimpleString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 18054,
"members" : [
{
"name" : "fromSimpleString",
"kind" : "function",
"type" : "DateTime(in S simpleString)",
"line" : 18054}
]
}
,
{
"name" : "min",
"kind" : "function",
"type" : "pure nothrow @property DateTime()",
"line" : 18126}
,
{
"name" : "max",
"kind" : "function",
"type" : "pure nothrow @property DateTime()",
"line" : 18156}
,
{
"name" : "addSeconds",
"kind" : "function",
"type" : "pure nothrow ref DateTime(long seconds)",
"line" : 18196}
,
{
"name" : "_date",
"kind" : "variable",
"type" : "Date",
"line" : 18398}
,
{
"name" : "_tod",
"kind" : "variable",
"type" : "TimeOfDay",
"line" : 18399}
]
}
,
{
"name" : "Interval(TP)",
"kind" : "struct",
"line" : 18425,
"members" : [
{
"name" : "Interval",
"kind" : "struct",
"line" : 18425,
"members" : [
{
"name" : "__ctor(U) if (is(Unqual!(TP) == Unqual!(U)))",
"kind" : "template",
"line" : 18442,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "pure (in TP begin, in U end)",
"line" : 18442}
]
}
,
{
"name" : "__ctor(D) if (__traits(compiles,begin + duration))",
"kind" : "template",
"line" : 18468,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "pure (in TP begin, in D duration)",
"line" : 18468}
]
}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "pure nothrow Interval(ref const Interval rhs)",
"line" : 18483}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "pure nothrow Interval(Interval rhs)",
"line" : 18496}
,
{
"name" : "begin",
"kind" : "function",
"type" : "const pure nothrow TP()",
"line" : 18514}
,
{
"name" : "begin",
"kind" : "function",
"type" : "pure void(TP timePoint)",
"line" : 18529}
,
{
"name" : "end",
"kind" : "function",
"type" : "const pure nothrow TP()",
"line" : 18547}
,
{
"name" : "end",
"kind" : "function",
"type" : "pure void(TP timePoint)",
"line" : 18562}
,
{
"name" : "length",
"kind" : "function",
"type" : "const pure nothrow typeof(end - begin)()",
"line" : 18580}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const pure nothrow bool()",
"line" : 18595}
,
{
"name" : "contains",
"kind" : "function",
"type" : "const pure bool(in TP timePoint)",
"line" : 18621}
,
{
"name" : "contains",
"kind" : "function",
"type" : "const pure bool(in Interval interval)",
"line" : 18650}
,
{
"name" : "contains",
"kind" : "function",
"type" : "const pure bool(in PosInfInterval!(TP) interval)",
"line" : 18680}
,
{
"name" : "contains",
"kind" : "function",
"type" : "const pure bool(in NegInfInterval!(TP) interval)",
"line" : 18707}
,
{
"name" : "isBefore",
"kind" : "function",
"type" : "const pure bool(in TP timePoint)",
"line" : 18737}
,
{
"name" : "isBefore",
"kind" : "function",
"type" : "const pure bool(in Interval interval)",
"line" : 18767}
,
{
"name" : "isBefore",
"kind" : "function",
"type" : "const pure bool(in PosInfInterval!(TP) interval)",
"line" : 18795}
,
{
"name" : "isBefore",
"kind" : "function",
"type" : "const pure bool(in NegInfInterval!(TP) interval)",
"line" : 18822}
,
{
"name" : "isAfter",
"kind" : "function",
"type" : "const pure bool(in TP timePoint)",
"line" : 18852}
,
{
"name" : "isAfter",
"kind" : "function",
"type" : "const pure bool(in Interval interval)",
"line" : 18882}
,
{
"name" : "isAfter",
"kind" : "function",
"type" : "const pure bool(in PosInfInterval!(TP) interval)",
"line" : 18910}
,
{
"name" : "isAfter",
"kind" : "function",
"type" : "const pure bool(in NegInfInterval!(TP) interval)",
"line" : 18934}
,
{
"name" : "intersects",
"kind" : "function",
"type" : "const pure bool(in Interval interval)",
"line" : 18963}
,
{
"name" : "intersects",
"kind" : "function",
"type" : "const pure bool(in PosInfInterval!(TP) interval)",
"line" : 18990}
,
{
"name" : "intersects",
"kind" : "function",
"type" : "const pure bool(in NegInfInterval!(TP) interval)",
"line" : 19016}
,
{
"name" : "intersection",
"kind" : "function",
"type" : "const Interval(in Interval interval)",
"line" : 19045}
,
{
"name" : "intersection",
"kind" : "function",
"type" : "const Interval(in PosInfInterval!(TP) interval)",
"line" : 19077}
,
{
"name" : "intersection",
"kind" : "function",
"type" : "const Interval(in NegInfInterval!(TP) interval)",
"line" : 19106}
,
{
"name" : "isAdjacent",
"kind" : "function",
"type" : "const pure bool(in Interval interval)",
"line" : 19136}
,
{
"name" : "isAdjacent",
"kind" : "function",
"type" : "const pure bool(in PosInfInterval!(TP) interval)",
"line" : 19164}
,
{
"name" : "isAdjacent",
"kind" : "function",
"type" : "const pure bool(in NegInfInterval!(TP) interval)",
"line" : 19191}
,
{
"name" : "merge",
"kind" : "function",
"type" : "const Interval(in Interval interval)",
"line" : 19220}
,
{
"name" : "merge",
"kind" : "function",
"type" : "const PosInfInterval!(TP)(in PosInfInterval!(TP) interval)",
"line" : 19253}
,
{
"name" : "merge",
"kind" : "function",
"type" : "const NegInfInterval!(TP)(in NegInfInterval!(TP) interval)",
"line" : 19283}
,
{
"name" : "span",
"kind" : "function",
"type" : "const pure Interval(in Interval interval)",
"line" : 19314}
,
{
"name" : "span",
"kind" : "function",
"type" : "const pure PosInfInterval!(TP)(in PosInfInterval!(TP) interval)",
"line" : 19348}
,
{
"name" : "span",
"kind" : "function",
"type" : "const pure NegInfInterval!(TP)(in NegInfInterval!(TP) interval)",
"line" : 19378}
,
{
"name" : "shift(D) if (__traits(compiles,begin + duration))",
"kind" : "template",
"line" : 19411,
"members" : [
{
"name" : "shift",
"kind" : "function",
"type" : "pure void(D duration)",
"line" : 19411}
]
}
,
{
"name" : "expand(D) if (__traits(compiles,begin + duration))",
"kind" : "template",
"line" : 19508,
"members" : [
{
"name" : "expand",
"kind" : "function",
"type" : "pure void(D duration, Direction dir = Direction.both)",
"line" : 19508}
]
}
,
{
"name" : "fwdRange",
"kind" : "function",
"type" : "const IntervalRange!(TP,Direction.fwd)(TP delegate(in TP) func, PopFirst popFirst = PopFirst.no)",
"line" : 19719}
,
{
"name" : "bwdRange",
"kind" : "function",
"type" : "const IntervalRange!(TP,Direction.bwd)(TP delegate(in TP) func, PopFirst popFirst = PopFirst.no)",
"line" : 19812}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 19831}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 19843}
,
{
"name" : "_toStringImpl",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 19855}
,
{
"name" : "_enforceNotEmpty",
"kind" : "function",
"type" : "const pure void(size_t line = __LINE__)",
"line" : 19868}
,
{
"name" : "_valid",
"kind" : "function",
"type" : "pure nothrow bool(in TP begin, in TP end)",
"line" : 19882}
,
{
"name" : "_begin",
"kind" : "variable",
"type" : "TP",
"line" : 19894}
,
{
"name" : "_end",
"kind" : "variable",
"type" : "TP",
"line" : 19895}
]
}
]
}
,
{
"name" : "PosInfInterval(TP)",
"kind" : "struct",
"line" : 21393,
"members" : [
{
"name" : "PosInfInterval",
"kind" : "struct",
"line" : 21393,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "pure nothrow (in TP begin)",
"line" : 21405}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "pure nothrow PosInfInterval(ref const PosInfInterval rhs)",
"line" : 21415}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "pure nothrow PosInfInterval(PosInfInterval rhs)",
"line" : 21427}
,
{
"name" : "begin",
"kind" : "function",
"type" : "const pure nothrow TP()",
"line" : 21443}
,
{
"name" : "begin",
"kind" : "function",
"type" : "pure nothrow void(TP timePoint)",
"line" : 21455}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const pure nothrow bool()",
"line" : 21469}
,
{
"name" : "contains",
"kind" : "function",
"type" : "const pure nothrow bool(TP timePoint)",
"line" : 21487}
,
{
"name" : "contains",
"kind" : "function",
"type" : "const pure bool(in Interval!(TP) interval)",
"line" : 21514}
,
{
"name" : "contains",
"kind" : "function",
"type" : "const pure nothrow bool(in PosInfInterval interval)",
"line" : 21537}
,
{
"name" : "contains",
"kind" : "function",
"type" : "const pure nothrow bool(in NegInfInterval!(TP) interval)",
"line" : 21558}
,
{
"name" : "isBefore",
"kind" : "function",
"type" : "const pure nothrow bool(in TP timePoint)",
"line" : 21580}
,
{
"name" : "isBefore",
"kind" : "function",
"type" : "const pure bool(in Interval!(TP) interval)",
"line" : 21609}
,
{
"name" : "isBefore",
"kind" : "function",
"type" : "const pure nothrow bool(in PosInfInterval interval)",
"line" : 21636}
,
{
"name" : "isBefore",
"kind" : "function",
"type" : "const pure nothrow bool(in NegInfInterval!(TP) interval)",
"line" : 21658}
,
{
"name" : "isAfter",
"kind" : "function",
"type" : "const pure nothrow bool(in TP timePoint)",
"line" : 21677}
,
{
"name" : "isAfter",
"kind" : "function",
"type" : "const pure bool(in Interval!(TP) interval)",
"line" : 21705}
,
{
"name" : "isAfter",
"kind" : "function",
"type" : "const pure nothrow bool(in PosInfInterval interval)",
"line" : 21732}
,
{
"name" : "isAfter",
"kind" : "function",
"type" : "const pure nothrow bool(in NegInfInterval!(TP) interval)",
"line" : 21754}
,
{
"name" : "intersects",
"kind" : "function",
"type" : "const pure bool(in Interval!(TP) interval)",
"line" : 21781}
,
{
"name" : "intersects",
"kind" : "function",
"type" : "const pure nothrow bool(in PosInfInterval interval)",
"line" : 21808}
,
{
"name" : "intersects",
"kind" : "function",
"type" : "const pure nothrow bool(in NegInfInterval!(TP) interval)",
"line" : 21830}
,
{
"name" : "intersection",
"kind" : "function",
"type" : "const Interval!(TP)(in Interval!(TP) interval)",
"line" : 21857}
,
{
"name" : "intersection",
"kind" : "function",
"type" : "const pure nothrow PosInfInterval(in PosInfInterval interval)",
"line" : 21884}
,
{
"name" : "intersection",
"kind" : "function",
"type" : "const Interval!(TP)(in NegInfInterval!(TP) interval)",
"line" : 21910}
,
{
"name" : "isAdjacent",
"kind" : "function",
"type" : "const pure bool(in Interval!(TP) interval)",
"line" : 21937}
,
{
"name" : "isAdjacent",
"kind" : "function",
"type" : "const pure nothrow bool(in PosInfInterval interval)",
"line" : 21964}
,
{
"name" : "isAdjacent",
"kind" : "function",
"type" : "const pure nothrow bool(in NegInfInterval!(TP) interval)",
"line" : 21986}
,
{
"name" : "merge",
"kind" : "function",
"type" : "const PosInfInterval(in Interval!(TP) interval)",
"line" : 22018}
,
{
"name" : "merge",
"kind" : "function",
"type" : "const pure nothrow PosInfInterval(in PosInfInterval interval)",
"line" : 22049}
,
{
"name" : "span",
"kind" : "function",
"type" : "const pure PosInfInterval(in Interval!(TP) interval)",
"line" : 22087}
,
{
"name" : "span",
"kind" : "function",
"type" : "const pure nothrow PosInfInterval(in PosInfInterval interval)",
"line" : 22120}
,
{
"name" : "shift(D) if (__traits(compiles,begin + duration))",
"kind" : "template",
"line" : 22147,
"members" : [
{
"name" : "shift",
"kind" : "function",
"type" : "pure nothrow void(D duration)",
"line" : 22147}
]
}
,
{
"name" : "expand(D) if (__traits(compiles,begin + duration))",
"kind" : "template",
"line" : 22221,
"members" : [
{
"name" : "expand",
"kind" : "function",
"type" : "pure nothrow void(D duration)",
"line" : 22221}
]
}
,
{
"name" : "fwdRange",
"kind" : "function",
"type" : "const PosInfIntervalRange!(TP)(TP delegate(in TP) func, PopFirst popFirst = PopFirst.no)",
"line" : 22350}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 22367}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 22379}
,
{
"name" : "_toStringImpl",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 22390}
,
{
"name" : "_begin",
"kind" : "variable",
"type" : "TP",
"line" : 22399}
]
}
]
}
,
{
"name" : "NegInfInterval(TP)",
"kind" : "struct",
"line" : 23637,
"members" : [
{
"name" : "NegInfInterval",
"kind" : "struct",
"line" : 23637,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "pure nothrow (in TP end)",
"line" : 23649}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "pure nothrow NegInfInterval(ref const NegInfInterval rhs)",
"line" : 23659}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "pure nothrow NegInfInterval(NegInfInterval rhs)",
"line" : 23671}
,
{
"name" : "end",
"kind" : "function",
"type" : "const pure nothrow TP()",
"line" : 23687}
,
{
"name" : "end",
"kind" : "function",
"type" : "pure nothrow void(TP timePoint)",
"line" : 23699}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const pure nothrow bool()",
"line" : 23713}
,
{
"name" : "contains",
"kind" : "function",
"type" : "const pure nothrow bool(TP timePoint)",
"line" : 23732}
,
{
"name" : "contains",
"kind" : "function",
"type" : "const pure bool(in Interval!(TP) interval)",
"line" : 23759}
,
{
"name" : "contains",
"kind" : "function",
"type" : "const pure nothrow bool(in PosInfInterval!(TP) interval)",
"line" : 23782}
,
{
"name" : "contains",
"kind" : "function",
"type" : "const pure nothrow bool(in NegInfInterval interval)",
"line" : 23803}
,
{
"name" : "isBefore",
"kind" : "function",
"type" : "const pure nothrow bool(in TP timePoint)",
"line" : 23823}
,
{
"name" : "isBefore",
"kind" : "function",
"type" : "const pure bool(in Interval!(TP) interval)",
"line" : 23851}
,
{
"name" : "isBefore",
"kind" : "function",
"type" : "const pure nothrow bool(in PosInfInterval!(TP) interval)",
"line" : 23875}
,
{
"name" : "isBefore",
"kind" : "function",
"type" : "const pure nothrow bool(in NegInfInterval interval)",
"line" : 23901}
,
{
"name" : "isAfter",
"kind" : "function",
"type" : "const pure nothrow bool(in TP timePoint)",
"line" : 23924}
,
{
"name" : "isAfter",
"kind" : "function",
"type" : "const pure bool(in Interval!(TP) interval)",
"line" : 23956}
,
{
"name" : "isAfter",
"kind" : "function",
"type" : "const pure nothrow bool(in PosInfInterval!(TP) interval)",
"line" : 23983}
,
{
"name" : "isAfter",
"kind" : "function",
"type" : "const pure nothrow bool(in NegInfInterval interval)",
"line" : 24008}
,
{
"name" : "intersects",
"kind" : "function",
"type" : "const pure bool(in Interval!(TP) interval)",
"line" : 24035}
,
{
"name" : "intersects",
"kind" : "function",
"type" : "const pure nothrow bool(in PosInfInterval!(TP) interval)",
"line" : 24059}
,
{
"name" : "intersects",
"kind" : "function",
"type" : "const pure nothrow bool(in NegInfInterval!(TP) interval)",
"line" : 24083}
,
{
"name" : "intersection",
"kind" : "function",
"type" : "const Interval!(TP)(in Interval!(TP) interval)",
"line" : 24110}
,
{
"name" : "intersection",
"kind" : "function",
"type" : "const Interval!(TP)(in PosInfInterval!(TP) interval)",
"line" : 24140}
,
{
"name" : "intersection",
"kind" : "function",
"type" : "const nothrow NegInfInterval(in NegInfInterval interval)",
"line" : 24165}
,
{
"name" : "isAdjacent",
"kind" : "function",
"type" : "const pure bool(in Interval!(TP) interval)",
"line" : 24196}
,
{
"name" : "isAdjacent",
"kind" : "function",
"type" : "const pure nothrow bool(in PosInfInterval!(TP) interval)",
"line" : 24220}
,
{
"name" : "isAdjacent",
"kind" : "function",
"type" : "const pure nothrow bool(in NegInfInterval interval)",
"line" : 24245}
,
{
"name" : "merge",
"kind" : "function",
"type" : "const NegInfInterval(in Interval!(TP) interval)",
"line" : 24277}
,
{
"name" : "merge",
"kind" : "function",
"type" : "const pure nothrow NegInfInterval(in NegInfInterval interval)",
"line" : 24308}
,
{
"name" : "span",
"kind" : "function",
"type" : "const pure NegInfInterval(in Interval!(TP) interval)",
"line" : 24346}
,
{
"name" : "span",
"kind" : "function",
"type" : "const pure nothrow NegInfInterval(in NegInfInterval interval)",
"line" : 24379}
,
{
"name" : "shift(D) if (__traits(compiles,end + duration))",
"kind" : "template",
"line" : 24406,
"members" : [
{
"name" : "shift",
"kind" : "function",
"type" : "pure nothrow void(D duration)",
"line" : 24406}
]
}
,
{
"name" : "expand(D) if (__traits(compiles,end + duration))",
"kind" : "template",
"line" : 24479,
"members" : [
{
"name" : "expand",
"kind" : "function",
"type" : "pure nothrow void(D duration)",
"line" : 24479}
]
}
,
{
"name" : "bwdRange",
"kind" : "function",
"type" : "const NegInfIntervalRange!(TP)(TP delegate(in TP) func, PopFirst popFirst = PopFirst.no)",
"line" : 24607}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 24624}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 24636}
,
{
"name" : "_toStringImpl",
"kind" : "function",
"type" : "const nothrow string()",
"line" : 24647}
,
{
"name" : "_end",
"kind" : "variable",
"type" : "TP",
"line" : 24656}
]
}
]
}
,
{
"name" : "everyDayOfWeek(TP,Direction dir = Direction.fwd) if (isTimePoint!(TP) && (dir == Direction.fwd || dir == Direction.bwd) && __traits(hasMember,TP,\"dayOfWeek\") && !__traits(isStaticFunction,TP.dayOfWeek) && is(ReturnType!(TP.dayOfWeek) == DayOfWeek) && functionAttributes!(TP.dayOfWeek) & FunctionAttribute.PROPERTY && functionAttributes!(TP.dayOfWeek) & FunctionAttribute.NOTHROW)",
"kind" : "template",
"line" : 25932,
"members" : [
{
"name" : "everyDayOfWeek",
"kind" : "function",
"type" : "nothrow TP delegate(in TP)(DayOfWeek dayOfWeek)",
"line" : 25932}
]
}
,
{
"name" : "everyMonth(TP,Direction dir = Direction.fwd) if (isTimePoint!(TP) && (dir == Direction.fwd || dir == Direction.bwd) && __traits(hasMember,TP,\"month\") && !__traits(isStaticFunction,TP.month) && is(ReturnType!(TP.month) == Month) && functionAttributes!(TP.month) & FunctionAttribute.PROPERTY && functionAttributes!(TP.month) & FunctionAttribute.NOTHROW)",
"kind" : "template",
"line" : 26066,
"members" : [
{
"name" : "everyMonth",
"kind" : "function",
"type" : "TP delegate(in TP)(int month)",
"line" : 26066}
]
}
,
{
"name" : "everyDuration(TP,Direction dir = Direction.fwd,D) if (isTimePoint!(TP) && __traits(compiles,TP.init + duration) && (dir == Direction.fwd || dir == Direction.bwd))",
"kind" : "template",
"line" : 26213,
"members" : [
{
"name" : "everyDuration",
"kind" : "function",
"type" : "nothrow TP delegate(in TP)(D duration)",
"line" : 26213}
]
}
,
{
"name" : "everyDuration(TP,Direction dir = Direction.fwd,D) if (isTimePoint!(TP) && __traits(compiles,TP.init + duration) && __traits(compiles,TP.init.add!(\"years\")(years)) && __traits(compiles,TP.init.add!(\"months\")(months)) && (dir == Direction.fwd || dir == Direction.bwd))",
"kind" : "template",
"line" : 26335,
"members" : [
{
"name" : "everyDuration",
"kind" : "function",
"type" : "nothrow TP delegate(in TP)(int years, int months = 0, AllowDayOverflow allowOverflow = AllowDayOverflow.yes, D duration = dur!(\"days\")(0))",
"line" : 26335}
]
}
,
{
"name" : "IntervalRange(TP,Direction dir) if (isTimePoint!(TP) && dir != Direction.both)",
"kind" : "struct",
"line" : 26494,
"members" : [
{
"name" : "IntervalRange",
"kind" : "struct",
"line" : 26494,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "pure nothrow IntervalRange(ref IntervalRange rhs)",
"line" : 26501}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const pure nothrow bool()",
"line" : 26513}
,
{
"name" : "front",
"kind" : "function",
"type" : "const pure TP()",
"line" : 26525}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 26552}
,
{
"name" : "save",
"kind" : "function",
"type" : "pure nothrow IntervalRange()",
"line" : 26584}
,
{
"name" : "interval",
"kind" : "function",
"type" : "const pure nothrow Interval!(TP)()",
"line" : 26593}
,
{
"name" : "func",
"kind" : "function",
"type" : "pure nothrow @property TP delegate(in TP)()",
"line" : 26602}
,
{
"name" : "direction",
"kind" : "function",
"type" : "const pure nothrow Direction()",
"line" : 26611}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "pure nothrow (in Interval!(TP) interval, TP delegate(in TP) func)",
"line" : 26625}
,
{
"name" : "_enforceNotEmpty",
"kind" : "function",
"type" : "const pure void(size_t line = __LINE__)",
"line" : 26636}
,
{
"name" : "_enforceCorrectDirection",
"kind" : "function",
"type" : "const void(in TP newTP, size_t line = __LINE__)",
"line" : 26648}
,
{
"name" : "_interval",
"kind" : "variable",
"type" : "Interval!(TP)",
"line" : 26671}
,
{
"name" : "_func",
"kind" : "variable",
"type" : "TP delegate(in TP)",
"line" : 26672}
]
}
]
}
,
{
"name" : "PosInfIntervalRange(TP) if (isTimePoint!(TP))",
"kind" : "struct",
"line" : 27011,
"members" : [
{
"name" : "PosInfIntervalRange",
"kind" : "struct",
"line" : 27011,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "pure nothrow PosInfIntervalRange(ref PosInfIntervalRange rhs)",
"line" : 27018}
,
{
"name" : "empty",
"kind" : "variable",
"type" : "bool",
"line" : 27030}
,
{
"name" : "front",
"kind" : "function",
"type" : "const pure nothrow TP()",
"line" : 27036}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 27050}
,
{
"name" : "save",
"kind" : "function",
"type" : "pure nothrow PosInfIntervalRange()",
"line" : 27063}
,
{
"name" : "interval",
"kind" : "function",
"type" : "const pure nothrow PosInfInterval!(TP)()",
"line" : 27072}
,
{
"name" : "func",
"kind" : "function",
"type" : "pure nothrow @property TP delegate(in TP)()",
"line" : 27081}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "pure nothrow (in PosInfInterval!(TP) interval, TP delegate(in TP) func)",
"line" : 27095}
,
{
"name" : "_enforceCorrectDirection",
"kind" : "function",
"type" : "const void(in TP newTP, size_t line = __LINE__)",
"line" : 27107}
,
{
"name" : "_interval",
"kind" : "variable",
"type" : "PosInfInterval!(TP)",
"line" : 27118}
,
{
"name" : "_func",
"kind" : "variable",
"type" : "TP delegate(in TP)",
"line" : 27119}
]
}
]
}
,
{
"name" : "NegInfIntervalRange(TP) if (isTimePoint!(TP))",
"kind" : "struct",
"line" : 27310,
"members" : [
{
"name" : "NegInfIntervalRange",
"kind" : "struct",
"line" : 27310,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "pure nothrow NegInfIntervalRange(ref NegInfIntervalRange rhs)",
"line" : 27317}
,
{
"name" : "empty",
"kind" : "variable",
"type" : "bool",
"line" : 27329}
,
{
"name" : "front",
"kind" : "function",
"type" : "const pure nothrow TP()",
"line" : 27335}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 27349}
,
{
"name" : "save",
"kind" : "function",
"type" : "pure nothrow NegInfIntervalRange()",
"line" : 27362}
,
{
"name" : "interval",
"kind" : "function",
"type" : "const pure nothrow NegInfInterval!(TP)()",
"line" : 27371}
,
{
"name" : "func",
"kind" : "function",
"type" : "pure nothrow @property TP delegate(in TP)()",
"line" : 27380}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "pure nothrow (in NegInfInterval!(TP) interval, TP delegate(in TP) func)",
"line" : 27394}
,
{
"name" : "_enforceCorrectDirection",
"kind" : "function",
"type" : "const void(in TP newTP, size_t line = __LINE__)",
"line" : 27406}
,
{
"name" : "_interval",
"kind" : "variable",
"type" : "NegInfInterval!(TP)",
"line" : 27417}
,
{
"name" : "_func",
"kind" : "variable",
"type" : "TP delegate(in TP)",
"line" : 27418}
]
}
]
}
,
{
"name" : "TimeZone",
"kind" : "class",
"line" : 27583,
"base" : "Object",
"members" : [
{
"name" : "name",
"kind" : "function",
"type" : "const nothrow @property string()",
"line" : 27596}
,
{
"name" : "stdName",
"kind" : "function",
"type" : "const nothrow @property string()",
"line" : 27609}
,
{
"name" : "dstName",
"kind" : "function",
"type" : "const nothrow @property string()",
"line" : 27622}
,
{
"name" : "hasDST",
"kind" : "function",
"type" : "const nothrow @property bool()",
"line" : 27634}
,
{
"name" : "dstInEffect",
"kind" : "function",
"type" : "const nothrow bool(long stdTime)",
"line" : 27646}
,
{
"name" : "utcToTZ",
"kind" : "function",
"type" : "const nothrow long(long stdTime)",
"line" : 27657}
,
{
"name" : "tzToUTC",
"kind" : "function",
"type" : "const nothrow long(long adjTime)",
"line" : 27668}
,
{
"name" : "getTimeZone",
"kind" : "function",
"type" : "immutable(TimeZone)(string name)",
"line" : 27704}
,
{
"name" : "getInstalledTZNames",
"kind" : "function",
"type" : "string[](string subName = \"\")",
"line" : 27869}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "immutable pure immutable(TimeZone)(string name, string stdName, string dstName)",
"line" : 27919}
,
{
"name" : "_name",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 27927}
,
{
"name" : "_stdName",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 27928}
,
{
"name" : "_dstName",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 27929}
]
}
,
{
"name" : "LocalTime",
"kind" : "class",
"line" : 27943,
"base" : "TimeZone",
"members" : [
{
"name" : "opCall",
"kind" : "function",
"type" : "pure nothrow immutable(LocalTime)()",
"line" : 27951}
,
{
"name" : "stdName",
"kind" : "function",
"type" : "const nothrow @property string()",
"line" : 27991}
,
{
"name" : "dstName",
"kind" : "function",
"type" : "const nothrow @property string()",
"line" : 28064}
,
{
"name" : "hasDST",
"kind" : "function",
"type" : "const nothrow @property bool()",
"line" : 28131}
,
{
"name" : "dstInEffect",
"kind" : "function",
"type" : "const nothrow bool(long stdTime)",
"line" : 28199}
,
{
"name" : "utcToTZ",
"kind" : "function",
"type" : "const nothrow long(long stdTime)",
"line" : 28272}
,
{
"name" : "tzToUTC",
"kind" : "function",
"type" : "const nothrow long(long adjTime)",
"line" : 28336}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "immutable pure immutable(LocalTime)()",
"line" : 28392}
,
{
"name" : "_localTime",
"kind" : "variable",
"type" : "immutable(LocalTime)",
"line" : 28398}
]
}
,
{
"name" : "UTC",
"kind" : "class",
"line" : 28413,
"base" : "TimeZone",
"members" : [
{
"name" : "opCall",
"kind" : "function",
"type" : "pure nothrow immutable(UTC)()",
"line" : 28420}
,
{
"name" : "hasDST",
"kind" : "function",
"type" : "const nothrow @property bool()",
"line" : 28429}
,
{
"name" : "dstInEffect",
"kind" : "function",
"type" : "const nothrow bool(long stdTime)",
"line" : 28438}
,
{
"name" : "utcToTZ",
"kind" : "function",
"type" : "const nothrow long(long stdTime)",
"line" : 28454}
,
{
"name" : "tzToUTC",
"kind" : "function",
"type" : "const nothrow long(long adjTime)",
"line" : 28489}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "immutable pure immutable(UTC)()",
"line" : 28516}
,
{
"name" : "_utc",
"kind" : "variable",
"type" : "immutable(UTC)",
"line" : 28522}
]
}
,
{
"name" : "SimpleTimeZone",
"kind" : "class",
"line" : 28544,
"base" : "TimeZone",
"members" : [
{
"name" : "hasDST",
"kind" : "function",
"type" : "const nothrow @property bool()",
"line" : 28551}
,
{
"name" : "dstInEffect",
"kind" : "function",
"type" : "const nothrow bool(long stdTime)",
"line" : 28560}
,
{
"name" : "utcToTZ",
"kind" : "function",
"type" : "const nothrow long(long stdTime)",
"line" : 28574}
,
{
"name" : "tzToUTC",
"kind" : "function",
"type" : "const nothrow long(long adjTime)",
"line" : 28602}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "immutable immutable(SimpleTimeZone)(int utcOffset, string stdName = \"\")",
"line" : 28630}
,
{
"name" : "utcOffset",
"kind" : "variable",
"type" : "immutable(int)",
"line" : 28658}
,
{
"name" : "toISOString",
"kind" : "function",
"type" : "string(int utcOffset)",
"line" : 28671}
,
{
"name" : "fromISOString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 28729,
"members" : [
{
"name" : "fromISOString",
"kind" : "function",
"type" : "immutable(SimpleTimeZone)(S isoString)",
"line" : 28729}
]
}
]
}
,
{
"name" : "PosixTimeZone",
"kind" : "class",
"line" : 28891,
"base" : "TimeZone",
"members" : [
{
"name" : "hasDST",
"kind" : "function",
"type" : "const nothrow @property bool()",
"line" : 28901}
,
{
"name" : "dstInEffect",
"kind" : "function",
"type" : "const nothrow bool(long stdTime)",
"line" : 28916}
,
{
"name" : "utcToTZ",
"kind" : "function",
"type" : "const nothrow long(long stdTime)",
"line" : 28949}
,
{
"name" : "tzToUTC",
"kind" : "function",
"type" : "const nothrow long(long adjTime)",
"line" : 28983}
,
{
"name" : "defaultTZDatabaseDir",
"kind" : "variable",
"type" : "string",
"line" : 29019}
,
{
"name" : "getTimeZone",
"kind" : "function",
"type" : "immutable(PosixTimeZone)(string name, string tzDatabaseDir = \"\/usr\/share\/zoneinfo\/\")",
"line" : 29065}
,
{
"name" : "getInstalledTZNames",
"kind" : "function",
"type" : "string[](string subName = \"\", string tzDatabaseDir = \"\/usr\/share\/zoneinfo\/\")",
"line" : 29379}
,
{
"name" : "Transition",
"kind" : "struct",
"line" : 29464,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ref Transition(long timeT, immutable(TTInfo)* ttInfo)",
"line" : 29465}
,
{
"name" : "timeT",
"kind" : "variable",
"type" : "long",
"line" : 29471}
,
{
"name" : "ttInfo",
"kind" : "variable",
"type" : "immutable(TTInfo)*",
"line" : 29472}
]
}
,
{
"name" : "LeapSecond",
"kind" : "struct",
"line" : 29480,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ref LeapSecond(long timeT, int total)",
"line" : 29481}
,
{
"name" : "timeT",
"kind" : "variable",
"type" : "long",
"line" : 29487}
,
{
"name" : "total",
"kind" : "variable",
"type" : "int",
"line" : 29488}
]
}
,
{
"name" : "TTInfo",
"kind" : "struct",
"line" : 29496,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "immutable ref immutable(TTInfo)(in const(TempTTInfo) tempTTInfo, string abbrev)",
"line" : 29497}
,
{
"name" : "utcOffset",
"kind" : "variable",
"type" : "immutable(int)",
"line" : 29504}
,
{
"name" : "isDST",
"kind" : "variable",
"type" : "immutable(bool)",
"line" : 29505}
,
{
"name" : "abbrev",
"kind" : "variable",
"type" : "immutable(char[])",
"line" : 29506}
]
}
,
{
"name" : "TempTTInfo",
"kind" : "struct",
"line" : 29515,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ref TempTTInfo(int gmtOff, bool isDST, ubyte abbrInd)",
"line" : 29516}
,
{
"name" : "tt_gmtoff",
"kind" : "variable",
"type" : "int",
"line" : 29523}
,
{
"name" : "tt_isdst",
"kind" : "variable",
"type" : "bool",
"line" : 29524}
,
{
"name" : "tt_abbrind",
"kind" : "variable",
"type" : "ubyte",
"line" : 29525}
]
}
,
{
"name" : "TempTransition",
"kind" : "struct",
"line" : 29535,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ref TempTransition(long timeT, immutable(TTInfo)* ttInfo, TransitionType* ttype)",
"line" : 29536}
,
{
"name" : "timeT",
"kind" : "variable",
"type" : "long",
"line" : 29543}
,
{
"name" : "ttInfo",
"kind" : "variable",
"type" : "immutable(TTInfo)*",
"line" : 29544}
,
{
"name" : "ttype",
"kind" : "variable",
"type" : "TransitionType*",
"line" : 29545}
]
}
,
{
"name" : "TransitionType",
"kind" : "struct",
"line" : 29555,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ref TransitionType(bool isStd, bool inUTC)",
"line" : 29556}
,
{
"name" : "isStd",
"kind" : "variable",
"type" : "bool",
"line" : 29563}
,
{
"name" : "inUTC",
"kind" : "variable",
"type" : "bool",
"line" : 29566}
]
}
,
{
"name" : "readVal(T) if (is(T == int))",
"kind" : "template",
"line" : 29573,
"members" : [
{
"name" : "readVal",
"kind" : "function",
"type" : "T(ref File tzFile)",
"line" : 29573}
]
}
,
{
"name" : "readVal(T) if (is(T == long))",
"kind" : "template",
"line" : 29588,
"members" : [
{
"name" : "readVal",
"kind" : "function",
"type" : "T(ref File tzFile)",
"line" : 29588}
]
}
,
{
"name" : "readVal(T) if (isArray!(T))",
"kind" : "template",
"line" : 29602,
"members" : [
{
"name" : "readVal",
"kind" : "function",
"type" : "T(ref File tzFile, size_t length)",
"line" : 29602}
]
}
,
{
"name" : "readVal(T) if (is(T == TempTTInfo))",
"kind" : "template",
"line" : 29617,
"members" : [
{
"name" : "readVal",
"kind" : "function",
"type" : "T(ref File tzFile)",
"line" : 29617}
]
}
,
{
"name" : "readVal(T) if (!is(T == int) && !is(T == long) && !is(T == char[]) && !is(T == TempTTInfo))",
"kind" : "template",
"line" : 29629,
"members" : [
{
"name" : "readVal",
"kind" : "function",
"type" : "T(ref File tzFile)",
"line" : 29629}
]
}
,
{
"name" : "ntoh64",
"kind" : "function",
"type" : "ulong(ulong val)",
"line" : 29649}
,
{
"name" : "endianSwap64",
"kind" : "function",
"type" : "ulong(ulong val)",
"line" : 29662}
,
{
"name" : "_enforceValidTZFile",
"kind" : "function",
"type" : "void(bool result, ulong line = cast(ulong)__LINE__)",
"line" : 29679}
,
{
"name" : "calculateLeapSeconds",
"kind" : "function",
"type" : "const nothrow int(long stdTime)",
"line" : 29686}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "immutable immutable(PosixTimeZone)(immutable immutable(Transition[]) transitions, immutable immutable(LeapSecond[]) leapSeconds, string name, string stdName, string dstName, bool hasDST)",
"line" : 29716}
,
{
"name" : "_transitions",
"kind" : "variable",
"type" : "immutable(Transition[])",
"line" : 29745}
,
{
"name" : "_leapSeconds",
"kind" : "variable",
"type" : "immutable(LeapSecond[])",
"line" : 29748}
,
{
"name" : "_hasDST",
"kind" : "variable",
"type" : "immutable(bool)",
"line" : 29751}
]
}
,
{
"name" : "setTZEnvVar",
"kind" : "function",
"type" : "nothrow void(string tzDatabaseName)",
"line" : 30329}
,
{
"name" : "clearTZEnvVar",
"kind" : "function",
"type" : "nothrow void()",
"line" : 30343}
,
{
"name" : "tzDatabaseNameToWindowsTZName",
"kind" : "function",
"type" : "string(string tzName)",
"line" : 30380}
,
{
"name" : "windowsTZNameToTZDatabaseName",
"kind" : "function",
"type" : "string(string tzName)",
"line" : 30523}
,
{
"name" : "StopWatch",
"kind" : "struct",
"line" : 30703,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ref @safe StopWatch(AutoStart autostart)",
"line" : 30739}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "const pure nothrow @safe bool(ref const const(StopWatch) rhs)",
"line" : 30753}
,
{
"name" : "reset",
"kind" : "function",
"type" : "@safe void()",
"line" : 30763}
,
{
"name" : "start",
"kind" : "function",
"type" : "@safe void()",
"line" : 30792}
,
{
"name" : "stop",
"kind" : "function",
"type" : "@safe void()",
"line" : 30819}
,
{
"name" : "peek",
"kind" : "function",
"type" : "const @safe TickDuration()",
"line" : 30846}
,
{
"name" : "_flagStarted",
"kind" : "variable",
"type" : "bool",
"line" : 30869}
,
{
"name" : "_timeStart",
"kind" : "variable",
"type" : "TickDuration",
"line" : 30872}
,
{
"name" : "_timeMeasured",
"kind" : "variable",
"type" : "TickDuration",
"line" : 30875}
]
}
,
{
"name" : "lengthof(aliases...)",
"kind" : "template",
"line" : 30880,
"members" : [
{
"name" : "lengthof",
"kind" : "function",
"type" : "pure nothrow size_t()",
"line" : 30880}
]
}
,
{
"name" : "benchmark(fun...) if (areAllSafe!(fun))",
"kind" : "template",
"line" : 30910,
"members" : [
{
"name" : "benchmark",
"kind" : "function",
"type" : "TickDuration[lengthof!(fun)()](uint n)",
"line" : 30910}
]
}
,
{
"name" : "benchmark(fun...) if (!areAllSafe!(fun))",
"kind" : "template",
"line" : 30929,
"members" : [
{
"name" : "benchmark",
"kind" : "function",
"type" : "TickDuration[lengthof!(fun)()](uint times)",
"line" : 30929}
]
}
,
{
"name" : "ComparingBenchmarkResult",
"kind" : "struct",
"line" : 30975,
"members" : [
{
"name" : "point",
"kind" : "function",
"type" : "const pure nothrow @property @safe real()",
"line" : 30983}
,
{
"name" : "baseTime",
"kind" : "function",
"type" : "const pure nothrow @property @safe TickDuration()",
"line" : 30992}
,
{
"name" : "targetTime",
"kind" : "function",
"type" : "const pure nothrow @property @safe TickDuration()",
"line" : 31001}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "pure nothrow ref @safe ComparingBenchmarkResult(TickDuration baseTime, TickDuration targetTime)",
"line" : 31008}
,
{
"name" : "_baseTime",
"kind" : "variable",
"type" : "TickDuration",
"line" : 31014}
,
{
"name" : "_targetTime",
"kind" : "variable",
"type" : "TickDuration",
"line" : 31015}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "const @safe bool(ref const(ComparingBenchmarkResult) p)",
"line" : 30975}
]
}
,
{
"name" : "comparingBenchmark(alias baseFunc,alias targetFunc,int times = 4095) if (isSafe!(baseFunc) && isSafe!(targetFunc))",
"kind" : "template",
"line" : 31042,
"members" : [
{
"name" : "comparingBenchmark",
"kind" : "function",
"type" : "ComparingBenchmarkResult()",
"line" : 31042}
]
}
,
{
"name" : "comparingBenchmark(alias baseFunc,alias targetFunc,int times = 4095) if (!isSafe!(baseFunc) || !isSafe!(targetFunc))",
"kind" : "template",
"line" : 31053,
"members" : [
{
"name" : "comparingBenchmark",
"kind" : "function",
"type" : "ComparingBenchmarkResult()",
"line" : 31053}
]
}
,
{
"name" : "sysTimeToDTime",
"kind" : "function",
"type" : "long(in const(SysTime) sysTime)",
"line" : 31095}
,
{
"name" : "dTimeToSysTime",
"kind" : "function",
"type" : "SysTime(long dTime, immutable immutable(TimeZone) tz = cast(immutable(TimeZone))null)",
"line" : 31122}
,
{
"name" : "abs(D) if (is(Unqual!(D) == Duration) || is(Unqual!(D) == TickDuration))",
"kind" : "template",
"line" : 31148,
"members" : [
{
"name" : "abs",
"kind" : "function",
"type" : "D(D duration)",
"line" : 31148}
]
}
,
{
"name" : "isTimePoint(T)",
"kind" : "template",
"line" : 31177,
"members" : [
{
"name" : "isTimePoint",
"kind" : "variable",
"line" : 31183}
]
}
,
{
"name" : "yearIsLeapYear",
"kind" : "function",
"type" : "pure nothrow bool(int year)",
"line" : 31211}
,
{
"name" : "unixTimeToStdTime",
"kind" : "function",
"type" : "pure nothrow long(long unixTime)",
"line" : 31246}
,
{
"name" : "stdTimeToUnixTime",
"kind" : "function",
"type" : "pure nothrow long(long stdTime)",
"line" : 31286}
,
{
"name" : "DosFileTime",
"kind" : "typedef",
"type" : "DosFileTime",
"line" : 31579,
"base" : "uint"}
,
{
"name" : "DosFileTimeToSysTime",
"kind" : "function",
"type" : "SysTime(DosFileTime dft, immutable immutable(TimeZone) tz = cast(immutable(TimeZone))opCall())",
"line" : 31591}
,
{
"name" : "SysTimeToDosFileTime",
"kind" : "function",
"type" : "DosFileTime(SysTime sysTime)",
"line" : 31639}
,
{
"name" : "validTimeUnits",
"kind" : "function",
"type" : "bool(string[] units...)",
"line" : 31684}
,
{
"name" : "cmpTimeUnits",
"kind" : "function",
"type" : "int(string lhs, string rhs)",
"line" : 31711}
,
{
"name" : "CmpTimeUnits(string lhs,string rhs) if (validTimeUnits(lhs,rhs))",
"kind" : "template",
"line" : 31766,
"members" : [
{
"name" : "CmpTimeUnits",
"kind" : "variable",
"line" : 31769}
]
}
,
{
"name" : "cmpTimeUnitsCTFE",
"kind" : "function",
"type" : "int(string lhs, string rhs)",
"line" : 31776}
,
{
"name" : "valid(string units) if (units == \"months\" || units == \"hours\" || units == \"minutes\" || units == \"seconds\")",
"kind" : "template",
"line" : 31841,
"members" : [
{
"name" : "valid",
"kind" : "function",
"type" : "pure nothrow bool(int value)",
"line" : 31841}
]
}
,
{
"name" : "valid(string units) if (units == \"days\")",
"kind" : "template",
"line" : 31879,
"members" : [
{
"name" : "valid",
"kind" : "function",
"type" : "pure nothrow bool(int year, int month, int day)",
"line" : 31879}
]
}
,
{
"name" : "enforceValid(string units) if (units == \"months\" || units == \"hours\" || units == \"minutes\" || units == \"seconds\")",
"kind" : "template",
"line" : 31897,
"members" : [
{
"name" : "enforceValid",
"kind" : "function",
"type" : "pure void(int value, string file = __FILE__, size_t line = __LINE__)",
"line" : 31897}
]
}
,
{
"name" : "enforceValid(string units) if (units == \"days\")",
"kind" : "template",
"line" : 31939,
"members" : [
{
"name" : "enforceValid",
"kind" : "function",
"type" : "pure void(int year, Month month, int day, string file = __FILE__, size_t line = __LINE__)",
"line" : 31939}
]
}
,
{
"name" : "monthsToMonth",
"kind" : "function",
"type" : "pure int(int currMonth, int month)",
"line" : 31961}
,
{
"name" : "daysToDayOfWeek",
"kind" : "function",
"type" : "pure nothrow int(DayOfWeek currDoW, DayOfWeek dow)",
"line" : 32042}
,
{
"name" : "measureTime(alias func) if (isSafe!(func))",
"kind" : "template",
"line" : 32140,
"members" : [
{
"name" : "measureTime",
"kind" : "function",
"type" : "@safe ()",
"line" : 32140}
]
}
,
{
"name" : "measureTime(alias func) if (!isSafe!(func))",
"kind" : "template",
"line" : 32158,
"members" : [
{
"name" : "measureTime",
"kind" : "function",
"type" : "()",
"line" : 32158}
]
}
,
{
"name" : "daysInYear",
"kind" : "variable",
"type" : "int",
"line" : 32222}
,
{
"name" : "daysInLeapYear",
"kind" : "variable",
"type" : "int",
"line" : 32223}
,
{
"name" : "daysIn4Years",
"kind" : "variable",
"type" : "int",
"line" : 32224}
,
{
"name" : "daysIn100Years",
"kind" : "variable",
"type" : "int",
"line" : 32225}
,
{
"name" : "daysIn400Years",
"kind" : "variable",
"type" : "int",
"line" : 32226}
,
{
"name" : "hnsecsPer(string units) if (CmpTimeUnits!(units,\"months\") < 0)",
"kind" : "template",
"line" : 32236,
"members" : [
]
}
,
{
"name" : "splitUnitsFromHNSecs(string units) if (validTimeUnits(units) && CmpTimeUnits!(units,\"months\") < 0)",
"kind" : "template",
"line" : 32283,
"members" : [
{
"name" : "splitUnitsFromHNSecs",
"kind" : "function",
"type" : "pure nothrow long(ref long hnsecs)",
"line" : 32283}
]
}
,
{
"name" : "getUnitsFromHNSecs(string units) if (validTimeUnits(units) && CmpTimeUnits!(units,\"months\") < 0)",
"kind" : "template",
"line" : 32332,
"members" : [
{
"name" : "getUnitsFromHNSecs",
"kind" : "function",
"type" : "pure nothrow long(long hnsecs)",
"line" : 32332}
]
}
,
{
"name" : "removeUnitsFromHNSecs(string units) if (validTimeUnits(units) && CmpTimeUnits!(units,\"months\") < 0)",
"kind" : "template",
"line" : 32374,
"members" : [
{
"name" : "removeUnitsFromHNSecs",
"kind" : "function",
"type" : "pure nothrow long(long hnsecs)",
"line" : 32374}
]
}
,
{
"name" : "maxDay",
"kind" : "function",
"type" : "pure nothrow ubyte(int year, int month)",
"line" : 32403}
,
{
"name" : "getDayOfWeek",
"kind" : "function",
"type" : "pure nothrow DayOfWeek(int day)",
"line" : 32491}
,
{
"name" : "monthToString",
"kind" : "function",
"type" : "pure string(Month month, bool useLongName = true)",
"line" : 32560}
,
{
"name" : "monthFromString",
"kind" : "function",
"type" : "Month(string monthStr)",
"line" : 32680}
,
{
"name" : "nextSmallerTimeUnits(string units) if (validTimeUnits(units) && timeStrings.front != units)",
"kind" : "template",
"line" : 32786,
"members" : [
{
"name" : "nextSmallerTimeUnits",
"kind" : "variable",
"line" : 32790}
]
}
,
{
"name" : "nextLargerTimeUnits(string units) if (validTimeUnits(units) && timeStrings.back != units)",
"kind" : "template",
"line" : 32823,
"members" : [
{
"name" : "nextLargerTimeUnits",
"kind" : "variable",
"line" : 32827}
]
}
,
{
"name" : "fracSecToISOString",
"kind" : "function",
"type" : "nothrow string(int hnsecs)",
"line" : 32854}
,
{
"name" : "fracSecFromISOString(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 32912,
"members" : [
{
"name" : "fracSecFromISOString",
"kind" : "function",
"type" : "FracSec(in S isoString)",
"line" : 32912}
]
}
,
{
"name" : "hasMin(T)",
"kind" : "template",
"line" : 32999,
"members" : [
{
"name" : "hasMin",
"kind" : "variable",
"line" : 33005}
]
}
,
{
"name" : "hasMax(T)",
"kind" : "template",
"line" : 33032,
"members" : [
{
"name" : "hasMax",
"kind" : "variable",
"line" : 33038}
]
}
,
{
"name" : "hasOverloadedOpBinaryWithDuration(T)",
"kind" : "template",
"line" : 33071,
"members" : [
{
"name" : "hasOverloadedOpBinaryWithDuration",
"kind" : "variable",
"line" : 33080}
]
}
,
{
"name" : "hasOverloadedOpAssignWithDuration(T)",
"kind" : "template",
"line" : 33112,
"members" : [
{
"name" : "hasOverloadedOpAssignWithDuration",
"kind" : "variable",
"line" : 33121}
]
}
,
{
"name" : "hasOverloadedOpBinaryWithSelf(T)",
"kind" : "template",
"line" : 33152,
"members" : [
{
"name" : "hasOverloadedOpBinaryWithSelf",
"kind" : "variable",
"line" : 33155}
]
}
,
{
"name" : "numToString",
"kind" : "function",
"type" : "pure nothrow string(long value)",
"line" : 33183}
,
{
"name" : "DTRebindable(T) if (is(T == class) || is(T == interface) || isArray!(T))",
"kind" : "template",
"line" : 33220,
"members" : [
]
}
,
{
"name" : "_assertPred(string op,L,R) if ((op == \"<\" || op == \"<=\" || op == \"==\" || op == \"!=\" || op == \">=\" || op == \">\") && __traits(compiles,mixin(\"lhs \" ~ op ~ \" rhs\")) && _isPrintable!(L) && _isPrintable!(R))",
"kind" : "template",
"line" : 33635,
"members" : [
{
"name" : "_assertPred",
"kind" : "function",
"type" : "void(L lhs, R rhs, lazy string msg = null, string file = __FILE__, size_t line = __LINE__)",
"line" : 33635}
]
}
,
{
"name" : "_assertPred(string func,string expected,L,R) if (func == \"opCmp\" && (expected == \"<\" || expected == \"==\" || expected == \">\") && __traits(compiles,lhs.opCmp(rhs)) && _isPrintable!(L) && _isPrintable!(R))",
"kind" : "template",
"line" : 33753,
"members" : [
{
"name" : "_assertPred",
"kind" : "function",
"type" : "void(L lhs, R rhs, lazy string msg = null, string file = __FILE__, size_t line = __LINE__)",
"line" : 33753}
]
}
,
{
"name" : "_assertPred(string op,L,R,E) if ((op == \"+=\" || op == \"-=\" || op == \"*=\" || op == \"\/=\" || op == \"%=\" || op == \"^^=\" || op == \"&=\" || op == \"|=\" || op == \"^=\" || op == \"<<=\" || op == \">>=\" || op == \">>>=\" || op == \"~=\") && __traits(compiles,mixin(\"lhs \" ~ op ~ \" rhs\")) && __traits(compiles,mixin(\"(lhs \" ~ op ~ \" rhs) == expected\")) && _isPrintable!(L) && _isPrintable!(R))",
"kind" : "template",
"line" : 33829,
"members" : [
{
"name" : "_assertPred",
"kind" : "function",
"type" : "void(L lhs, R rhs, E expected, lazy string msg = null, string file = __FILE__, size_t line = __LINE__)",
"line" : 33829}
]
}
,
{
"name" : "_isPrintable(T...)",
"kind" : "template",
"line" : 34057,
"members" : [
]
}
,
{
"name" : "softDeprec(string vers,string date,string oldFunc,string newFunc)",
"kind" : "template",
"line" : 34073,
"members" : [
{
"name" : "softDeprec",
"kind" : "variable",
"line" : 34077}
]
}
]
}
,
{
"name" : "std.demangle",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/demangle.d",
"members" : [
{
"name" : "MangleException",
"kind" : "class",
"line" : 26,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "MangleException()",
"line" : 28}
]
}
,
{
"name" : "demangle",
"kind" : "function",
"type" : "string(string name)",
"line" : 80}
]
}
,
{
"name" : "std.encoding",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/encoding.d",
"members" : [
{
"name" : "INVALID_SEQUENCE",
"kind" : "variable",
"type" : "dchar",
"line" : 364}
,
{
"name" : "EncoderFunctions()",
"kind" : "template",
"line" : 366,
"members" : [
{
"name" : "ReadFromString()",
"kind" : "template",
"line" : 370,
"members" : [
{
"name" : "canRead",
"kind" : "function",
"type" : "bool()",
"line" : 372}
,
{
"name" : "peek",
"kind" : "function",
"type" : "E()",
"line" : 373}
,
{
"name" : "read",
"kind" : "function",
"type" : "E()",
"line" : 374}
]
}
,
{
"name" : "ReverseReadFromString()",
"kind" : "template",
"line" : 377,
"members" : [
{
"name" : "canRead",
"kind" : "function",
"type" : "bool()",
"line" : 379}
,
{
"name" : "peek",
"kind" : "function",
"type" : "E()",
"line" : 380}
,
{
"name" : "read",
"kind" : "function",
"type" : "E()",
"line" : 381}
]
}
,
{
"name" : "WriteToString()",
"kind" : "template",
"line" : 386,
"members" : [
{
"name" : "s",
"kind" : "variable",
"type" : "E[]",
"line" : 388}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(E c)",
"line" : 389}
]
}
,
{
"name" : "WriteToArray()",
"kind" : "template",
"line" : 392,
"members" : [
{
"name" : "write",
"kind" : "function",
"type" : "void(E c)",
"line" : 394}
]
}
,
{
"name" : "WriteToBuffer()",
"kind" : "template",
"line" : 397,
"members" : [
{
"name" : "write",
"kind" : "function",
"type" : "void(E c)",
"line" : 399}
]
}
,
{
"name" : "WriteToDelegate()",
"kind" : "template",
"line" : 402,
"members" : [
{
"name" : "write",
"kind" : "function",
"type" : "void(E c)",
"line" : 404}
]
}
,
{
"name" : "EncodeViaWrite()",
"kind" : "template",
"line" : 409,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "void(dchar c)",
"line" : 412}
]
}
,
{
"name" : "SkipViaRead()",
"kind" : "template",
"line" : 415,
"members" : [
{
"name" : "skip",
"kind" : "function",
"type" : "void()",
"line" : 418}
]
}
,
{
"name" : "DecodeViaRead()",
"kind" : "template",
"line" : 421,
"members" : [
{
"name" : "decode",
"kind" : "function",
"type" : "dchar()",
"line" : 424}
]
}
,
{
"name" : "SafeDecodeViaRead()",
"kind" : "template",
"line" : 427,
"members" : [
{
"name" : "safeDecode",
"kind" : "function",
"type" : "dchar()",
"line" : 430}
]
}
,
{
"name" : "DecodeReverseViaRead()",
"kind" : "template",
"line" : 433,
"members" : [
{
"name" : "decodeReverse",
"kind" : "function",
"type" : "dchar()",
"line" : 436}
]
}
,
{
"name" : "EncodeToString()",
"kind" : "template",
"line" : 441,
"members" : [
]
}
,
{
"name" : "EncodeToArray()",
"kind" : "template",
"line" : 447,
"members" : [
]
}
,
{
"name" : "EncodeToBuffer()",
"kind" : "template",
"line" : 453,
"members" : [
]
}
,
{
"name" : "EncodeToDelegate()",
"kind" : "template",
"line" : 459,
"members" : [
]
}
,
{
"name" : "SkipFromString()",
"kind" : "template",
"line" : 467,
"members" : [
]
}
,
{
"name" : "DecodeFromString()",
"kind" : "template",
"line" : 473,
"members" : [
]
}
,
{
"name" : "SafeDecodeFromString()",
"kind" : "template",
"line" : 479,
"members" : [
]
}
,
{
"name" : "DecodeReverseFromString()",
"kind" : "template",
"line" : 485,
"members" : [
]
}
,
{
"name" : "encode",
"kind" : "function",
"type" : "E[](dchar c)",
"line" : 495}
,
{
"name" : "encode",
"kind" : "function",
"type" : "void(dchar c, ref E[] array)",
"line" : 502}
,
{
"name" : "encode",
"kind" : "function",
"type" : "void(dchar c, void delegate(E) dg)",
"line" : 508}
,
{
"name" : "skip",
"kind" : "function",
"type" : "void(ref const(E)[] s)",
"line" : 514}
,
{
"name" : "decode(S)",
"kind" : "template",
"line" : 520,
"members" : [
{
"name" : "decode",
"kind" : "function",
"type" : "dchar(ref S s)",
"line" : 520}
]
}
,
{
"name" : "safeDecode(S)",
"kind" : "template",
"line" : 526,
"members" : [
{
"name" : "safeDecode",
"kind" : "function",
"type" : "dchar(ref S s)",
"line" : 526}
]
}
,
{
"name" : "decodeReverse",
"kind" : "function",
"type" : "dchar(ref const(E)[] s)",
"line" : 532}
]
}
,
{
"name" : "CodePoints(E)",
"kind" : "struct",
"line" : 542,
"members" : [
{
"name" : "CodePoints",
"kind" : "struct",
"line" : 542,
"members" : [
{
"name" : "s",
"kind" : "variable",
"type" : "const(E)[]",
"line" : 543}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(const(E)[] s)",
"line" : 545}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref dchar) dg)",
"line" : 555}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref size_t, ref dchar) dg)",
"line" : 567}
,
{
"name" : "opApplyReverse",
"kind" : "function",
"type" : "int(scope int delegate(ref dchar) dg)",
"line" : 583}
,
{
"name" : "opApplyReverse",
"kind" : "function",
"type" : "int(scope int delegate(ref size_t, ref dchar) dg)",
"line" : 595}
]
}
]
}
,
{
"name" : "CodeUnits(E)",
"kind" : "struct",
"line" : 610,
"members" : [
{
"name" : "CodeUnits",
"kind" : "struct",
"line" : 610,
"members" : [
{
"name" : "s",
"kind" : "variable",
"type" : "E[]",
"line" : 611}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(dchar d)",
"line" : 613}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref E) dg)",
"line" : 623}
,
{
"name" : "opApplyReverse",
"kind" : "function",
"type" : "int(scope int delegate(ref E) dg)",
"line" : 634}
]
}
]
}
,
{
"name" : "EncoderInstance(E)",
"kind" : "template",
"line" : 648,
"members" : [
]
}
,
{
"name" : "AsciiChar",
"kind" : "typedef",
"type" : "AsciiChar",
"line" : 659,
"base" : "ubyte"}
,
{
"name" : "AsciiString",
"kind" : "alias",
"type" : "immutable(AsciiChar)[]",
"line" : 661}
,
{
"name" : "EncoderInstance(CharType : AsciiChar)",
"kind" : "template",
"line" : 663,
"members" : [
{
"name" : "E",
"kind" : "alias",
"type" : "AsciiChar",
"line" : 665}
,
{
"name" : "EString",
"kind" : "alias",
"type" : "AsciiString",
"line" : 666}
,
{
"name" : "encodingName",
"kind" : "function",
"type" : "string()",
"line" : 668}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 673}
,
{
"name" : "isValidCodeUnit",
"kind" : "function",
"type" : "bool(AsciiChar c)",
"line" : 678}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "size_t(dchar c)",
"line" : 683}
,
{
"name" : "encodeX(Range)",
"kind" : "template",
"line" : 693,
"members" : [
{
"name" : "encodeX",
"kind" : "function",
"type" : "void(dchar c, Range r)",
"line" : 693}
]
}
,
{
"name" : "encodeViaWrite()",
"kind" : "template",
"line" : 699,
"members" : [
{
"name" : "encodeViaWrite",
"kind" : "function",
"type" : "void(dchar c)",
"line" : 699}
]
}
,
{
"name" : "skipViaRead()",
"kind" : "template",
"line" : 705,
"members" : [
{
"name" : "skipViaRead",
"kind" : "function",
"type" : "void()",
"line" : 705}
]
}
,
{
"name" : "decodeViaRead()",
"kind" : "template",
"line" : 710,
"members" : [
{
"name" : "decodeViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 710}
]
}
,
{
"name" : "safeDecodeViaRead()",
"kind" : "template",
"line" : 715,
"members" : [
{
"name" : "safeDecodeViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 715}
]
}
,
{
"name" : "decodeReverseViaRead()",
"kind" : "template",
"line" : 721,
"members" : [
{
"name" : "decodeReverseViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 721}
]
}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "EString()",
"line" : 726}
]
}
,
{
"name" : "Latin1Char",
"kind" : "typedef",
"type" : "Latin1Char",
"line" : 739,
"base" : "ubyte"}
,
{
"name" : "Latin1String",
"kind" : "alias",
"type" : "immutable(Latin1Char)[]",
"line" : 744}
,
{
"name" : "EncoderInstance(CharType : Latin1Char)",
"kind" : "template",
"line" : 746,
"members" : [
{
"name" : "E",
"kind" : "alias",
"type" : "Latin1Char",
"line" : 748}
,
{
"name" : "EString",
"kind" : "alias",
"type" : "Latin1String",
"line" : 749}
,
{
"name" : "encodingName",
"kind" : "function",
"type" : "string()",
"line" : 751}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 756}
,
{
"name" : "isValidCodeUnit",
"kind" : "function",
"type" : "bool(Latin1Char c)",
"line" : 761}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "size_t(dchar c)",
"line" : 766}
,
{
"name" : "encodeViaWrite()",
"kind" : "template",
"line" : 776,
"members" : [
{
"name" : "encodeViaWrite",
"kind" : "function",
"type" : "void(dchar c)",
"line" : 776}
]
}
,
{
"name" : "skipViaRead()",
"kind" : "template",
"line" : 782,
"members" : [
{
"name" : "skipViaRead",
"kind" : "function",
"type" : "void()",
"line" : 782}
]
}
,
{
"name" : "decodeViaRead()",
"kind" : "template",
"line" : 787,
"members" : [
{
"name" : "decodeViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 787}
]
}
,
{
"name" : "safeDecodeViaRead()",
"kind" : "template",
"line" : 792,
"members" : [
{
"name" : "safeDecodeViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 792}
]
}
,
{
"name" : "decodeReverseViaRead()",
"kind" : "template",
"line" : 797,
"members" : [
{
"name" : "decodeReverseViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 797}
]
}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "EString()",
"line" : 802}
]
}
,
{
"name" : "Windows1252Char",
"kind" : "typedef",
"type" : "Windows1252Char",
"line" : 815,
"base" : "ubyte"}
,
{
"name" : "Windows1252String",
"kind" : "alias",
"type" : "immutable(Windows1252Char)[]",
"line" : 820}
,
{
"name" : "EncoderInstance(CharType : Windows1252Char)",
"kind" : "template",
"line" : 822,
"members" : [
{
"name" : "E",
"kind" : "alias",
"type" : "Windows1252Char",
"line" : 824}
,
{
"name" : "EString",
"kind" : "alias",
"type" : "Windows1252String",
"line" : 825}
,
{
"name" : "encodingName",
"kind" : "function",
"type" : "string()",
"line" : 827}
,
{
"name" : "charMap",
"kind" : "variable",
"type" : "wstring",
"line" : 832}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 839}
,
{
"name" : "isValidCodeUnit",
"kind" : "function",
"type" : "bool(Windows1252Char c)",
"line" : 847}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "size_t(dchar c)",
"line" : 853}
,
{
"name" : "encodeViaWrite()",
"kind" : "template",
"line" : 863,
"members" : [
{
"name" : "encodeViaWrite",
"kind" : "function",
"type" : "void(dchar c)",
"line" : 863}
]
}
,
{
"name" : "skipViaRead()",
"kind" : "template",
"line" : 883,
"members" : [
{
"name" : "skipViaRead",
"kind" : "function",
"type" : "void()",
"line" : 883}
]
}
,
{
"name" : "decodeViaRead()",
"kind" : "template",
"line" : 888,
"members" : [
{
"name" : "decodeViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 888}
]
}
,
{
"name" : "safeDecodeViaRead()",
"kind" : "template",
"line" : 894,
"members" : [
{
"name" : "safeDecodeViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 894}
]
}
,
{
"name" : "decodeReverseViaRead()",
"kind" : "template",
"line" : 901,
"members" : [
{
"name" : "decodeReverseViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 901}
]
}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "EString()",
"line" : 907}
]
}
,
{
"name" : "EncoderInstance(CharType : char)",
"kind" : "template",
"line" : 919,
"members" : [
{
"name" : "E",
"kind" : "alias",
"type" : "char",
"line" : 921}
,
{
"name" : "EString",
"kind" : "alias",
"type" : "immutable(char)[]",
"line" : 922}
,
{
"name" : "encodingName",
"kind" : "function",
"type" : "string()",
"line" : 924}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 929}
,
{
"name" : "isValidCodeUnit",
"kind" : "function",
"type" : "bool(char c)",
"line" : 934}
,
{
"name" : "tailTable",
"kind" : "variable",
"type" : "ubyte[128]",
"line" : 939}
,
{
"name" : "tails",
"kind" : "function",
"type" : "int(char c)",
"line" : 951}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "size_t(dchar c)",
"line" : 961}
,
{
"name" : "encodeViaWrite()",
"kind" : "template",
"line" : 974,
"members" : [
{
"name" : "encodeViaWrite",
"kind" : "function",
"type" : "void(dchar c)",
"line" : 974}
]
}
,
{
"name" : "skipViaRead()",
"kind" : "template",
"line" : 1000,
"members" : [
{
"name" : "skipViaRead",
"kind" : "function",
"type" : "void()",
"line" : 1000}
]
}
,
{
"name" : "decodeViaRead()",
"kind" : "template",
"line" : 1011,
"members" : [
{
"name" : "decodeViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 1011}
]
}
,
{
"name" : "safeDecodeViaRead()",
"kind" : "template",
"line" : 1024,
"members" : [
{
"name" : "safeDecodeViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 1024}
]
}
,
{
"name" : "decodeReverseViaRead()",
"kind" : "template",
"line" : 1055,
"members" : [
{
"name" : "decodeReverseViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 1055}
]
}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "EString()",
"line" : 1073}
]
}
,
{
"name" : "EncoderInstance(CharType : wchar)",
"kind" : "template",
"line" : 1085,
"members" : [
{
"name" : "E",
"kind" : "alias",
"type" : "wchar",
"line" : 1087}
,
{
"name" : "EString",
"kind" : "alias",
"type" : "immutable(wchar)[]",
"line" : 1088}
,
{
"name" : "encodingName",
"kind" : "function",
"type" : "string()",
"line" : 1090}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 1095}
,
{
"name" : "isValidCodeUnit",
"kind" : "function",
"type" : "bool(wchar c)",
"line" : 1100}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "size_t(dchar c)",
"line" : 1105}
,
{
"name" : "encodeViaWrite()",
"kind" : "template",
"line" : 1115,
"members" : [
{
"name" : "encodeViaWrite",
"kind" : "function",
"type" : "void(dchar c)",
"line" : 1115}
]
}
,
{
"name" : "skipViaRead()",
"kind" : "template",
"line" : 1129,
"members" : [
{
"name" : "skipViaRead",
"kind" : "function",
"type" : "void()",
"line" : 1129}
]
}
,
{
"name" : "decodeViaRead()",
"kind" : "template",
"line" : 1136,
"members" : [
{
"name" : "decodeViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 1136}
]
}
,
{
"name" : "safeDecodeViaRead()",
"kind" : "template",
"line" : 1146,
"members" : [
{
"name" : "safeDecodeViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 1146}
]
}
,
{
"name" : "decodeReverseViaRead()",
"kind" : "template",
"line" : 1160,
"members" : [
{
"name" : "decodeReverseViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 1160}
]
}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "EString()",
"line" : 1170}
]
}
,
{
"name" : "EncoderInstance(CharType : dchar)",
"kind" : "template",
"line" : 1182,
"members" : [
{
"name" : "E",
"kind" : "alias",
"type" : "dchar",
"line" : 1184}
,
{
"name" : "EString",
"kind" : "alias",
"type" : "immutable(dchar)[]",
"line" : 1185}
,
{
"name" : "encodingName",
"kind" : "function",
"type" : "string()",
"line" : 1187}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 1192}
,
{
"name" : "isValidCodeUnit",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 1197}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "size_t(dchar c)",
"line" : 1202}
,
{
"name" : "encodeViaWrite()",
"kind" : "template",
"line" : 1212,
"members" : [
{
"name" : "encodeViaWrite",
"kind" : "function",
"type" : "void(dchar c)",
"line" : 1212}
]
}
,
{
"name" : "skipViaRead()",
"kind" : "template",
"line" : 1217,
"members" : [
{
"name" : "skipViaRead",
"kind" : "function",
"type" : "void()",
"line" : 1217}
]
}
,
{
"name" : "decodeViaRead()",
"kind" : "template",
"line" : 1222,
"members" : [
{
"name" : "decodeViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 1222}
]
}
,
{
"name" : "safeDecodeViaRead()",
"kind" : "template",
"line" : 1227,
"members" : [
{
"name" : "safeDecodeViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 1227}
]
}
,
{
"name" : "decodeReverseViaRead()",
"kind" : "template",
"line" : 1233,
"members" : [
{
"name" : "decodeReverseViaRead",
"kind" : "function",
"type" : "dchar()",
"line" : 1233}
]
}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "EString()",
"line" : 1238}
]
}
,
{
"name" : "isValidCodePoint",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 1264}
,
{
"name" : "encodingName(T)",
"kind" : "template",
"line" : 1282,
"members" : [
{
"name" : "encodingName",
"kind" : "function",
"type" : "string()",
"line" : 1282}
]
}
,
{
"name" : "canEncode(E)",
"kind" : "template",
"line" : 1311,
"members" : [
{
"name" : "canEncode",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 1311}
]
}
,
{
"name" : "isValidCodeUnit(E)",
"kind" : "template",
"line" : 1336,
"members" : [
{
"name" : "isValidCodeUnit",
"kind" : "function",
"type" : "bool(E c)",
"line" : 1336}
]
}
,
{
"name" : "isValid(E)",
"kind" : "template",
"line" : 1365,
"members" : [
{
"name" : "isValid",
"kind" : "function",
"type" : "bool(const(E)[] s)",
"line" : 1365}
]
}
,
{
"name" : "validLength(E)",
"kind" : "template",
"line" : 1384,
"members" : [
{
"name" : "validLength",
"kind" : "function",
"type" : "size_t(const(E)[] s)",
"line" : 1384}
]
}
,
{
"name" : "sanitize(E)",
"kind" : "template",
"line" : 1412,
"members" : [
{
"name" : "sanitize",
"kind" : "function",
"type" : "immutable(E)[](immutable(E)[] s)",
"line" : 1412}
]
}
,
{
"name" : "firstSequence(E)",
"kind" : "template",
"line" : 1467,
"members" : [
{
"name" : "firstSequence",
"kind" : "function",
"type" : "size_t(const(E)[] s)",
"line" : 1467}
]
}
,
{
"name" : "lastSequence(E)",
"kind" : "template",
"line" : 1497,
"members" : [
{
"name" : "lastSequence",
"kind" : "function",
"type" : "size_t(const(E)[] s)",
"line" : 1497}
]
}
,
{
"name" : "index(E)",
"kind" : "template",
"line" : 1529,
"members" : [
{
"name" : "index",
"kind" : "function",
"type" : "sizediff_t(const(E)[] s, int n)",
"line" : 1529}
]
}
,
{
"name" : "decode(S)",
"kind" : "template",
"line" : 1565,
"members" : [
{
"name" : "decode",
"kind" : "function",
"type" : "dchar(ref S s)",
"line" : 1565}
]
}
,
{
"name" : "decodeReverse(E)",
"kind" : "template",
"line" : 1591,
"members" : [
{
"name" : "decodeReverse",
"kind" : "function",
"type" : "dchar(ref const(E)[] s)",
"line" : 1591}
]
}
,
{
"name" : "safeDecode(S)",
"kind" : "template",
"line" : 1617,
"members" : [
{
"name" : "safeDecode",
"kind" : "function",
"type" : "dchar(ref S s)",
"line" : 1617}
]
}
,
{
"name" : "encodedLength(E)",
"kind" : "template",
"line" : 1641,
"members" : [
{
"name" : "encodedLength",
"kind" : "function",
"type" : "size_t(dchar c)",
"line" : 1641}
]
}
,
{
"name" : "encode(E)",
"kind" : "template",
"line" : 1672,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "E[](dchar c)",
"line" : 1672}
]
}
,
{
"name" : "encode(E)",
"kind" : "template",
"line" : 1707,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "size_t(dchar c, E[] array)",
"line" : 1707}
]
}
,
{
"name" : "encode(E,R)",
"kind" : "template",
"line" : 1755,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "size_t(dchar c, R range)",
"line" : 1755}
]
}
,
{
"name" : "encode(E)",
"kind" : "template",
"line" : 1833,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "void(dchar c, void delegate(E) dg)",
"line" : 1833}
]
}
,
{
"name" : "codePoints(E)",
"kind" : "template",
"line" : 1875,
"members" : [
{
"name" : "codePoints",
"kind" : "function",
"type" : "CodePoints!(E)(immutable(E)[] s)",
"line" : 1875}
]
}
,
{
"name" : "codeUnits(E)",
"kind" : "template",
"line" : 1927,
"members" : [
{
"name" : "codeUnits",
"kind" : "function",
"type" : "CodeUnits!(E)(dchar c)",
"line" : 1927}
]
}
,
{
"name" : "encode(Tgt,Src,R)",
"kind" : "template",
"line" : 1955,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "size_t(in Src[] s, R range)",
"line" : 1955}
]
}
,
{
"name" : "transcode(Src,Dst)",
"kind" : "template",
"line" : 1993,
"members" : [
{
"name" : "transcode",
"kind" : "function",
"type" : "void(immutable(Src)[] s, out immutable(Dst)[] r)",
"line" : 1993}
]
}
,
{
"name" : "EncodingException",
"kind" : "class",
"line" : 2056,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "EncodingException(string msg)",
"line" : 2056}
]
}
,
{
"name" : "UnrecognizedEncodingException",
"kind" : "class",
"line" : 2058,
"base" : "EncodingException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "UnrecognizedEncodingException(string msg)",
"line" : 2060}
]
}
,
{
"name" : "EncodingScheme",
"kind" : "class",
"line" : 2065,
"base" : "Object",
"members" : [
{
"name" : "register",
"kind" : "function",
"type" : "void(string className)",
"line" : 2083}
,
{
"name" : "create",
"kind" : "function",
"type" : "EncodingScheme(string encodingName)",
"line" : 2106}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 2122}
,
{
"name" : "names",
"kind" : "function",
"type" : "const string[]()",
"line" : 2127}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "const bool(dchar c)",
"line" : 2133}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "const ulong(dchar c)",
"line" : 2146}
,
{
"name" : "encode",
"kind" : "function",
"type" : "const ulong(dchar c, ubyte[] buffer)",
"line" : 2164}
,
{
"name" : "decode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2177}
,
{
"name" : "safeDecode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2192}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "const immutable(ubyte)[]()",
"line" : 2201}
,
{
"name" : "isValid",
"kind" : "function",
"type" : "bool(const(ubyte)[] s)",
"line" : 2210}
,
{
"name" : "validLength",
"kind" : "function",
"type" : "ulong(const(ubyte)[] s)",
"line" : 2228}
,
{
"name" : "sanitize",
"kind" : "function",
"type" : "immutable(ubyte)[](immutable(ubyte)[] s)",
"line" : 2252}
,
{
"name" : "firstSequence",
"kind" : "function",
"type" : "ulong(const(ubyte)[] s)",
"line" : 2300}
,
{
"name" : "count",
"kind" : "function",
"type" : "ulong(const(ubyte)[] s)",
"line" : 2323}
,
{
"name" : "index",
"kind" : "function",
"type" : "long(const(ubyte)[] s, ulong n)",
"line" : 2348}
,
{
"name" : "supported",
"kind" : "variable",
"type" : "string[string]",
"line" : 2361}
]
}
,
{
"name" : "EncodingSchemeASCII",
"kind" : "class",
"line" : 2380,
"base" : "EncodingScheme",
"members" : [
{
"name" : "names",
"kind" : "function",
"type" : "const string[]()",
"line" : 2389}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 2408}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "const bool(dchar c)",
"line" : 2413}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "const ulong(dchar c)",
"line" : 2418}
,
{
"name" : "encode",
"kind" : "function",
"type" : "const ulong(dchar c, ubyte[] buffer)",
"line" : 2423}
,
{
"name" : "decode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2429}
,
{
"name" : "safeDecode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2437}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "const immutable(ubyte)[]()",
"line" : 2445}
]
}
,
{
"name" : "EncodingSchemeLatin1",
"kind" : "class",
"line" : 2466,
"base" : "EncodingScheme",
"members" : [
{
"name" : "names",
"kind" : "function",
"type" : "const string[]()",
"line" : 2475}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 2492}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "const bool(dchar c)",
"line" : 2497}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "const ulong(dchar c)",
"line" : 2502}
,
{
"name" : "encode",
"kind" : "function",
"type" : "const ulong(dchar c, ubyte[] buffer)",
"line" : 2507}
,
{
"name" : "decode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2513}
,
{
"name" : "safeDecode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2521}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "const immutable(ubyte)[]()",
"line" : 2529}
]
}
,
{
"name" : "EncodingSchemeWindows1252",
"kind" : "class",
"line" : 2542,
"base" : "EncodingScheme",
"members" : [
{
"name" : "names",
"kind" : "function",
"type" : "const string[]()",
"line" : 2551}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 2560}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "const bool(dchar c)",
"line" : 2565}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "const ulong(dchar c)",
"line" : 2570}
,
{
"name" : "encode",
"kind" : "function",
"type" : "const ulong(dchar c, ubyte[] buffer)",
"line" : 2575}
,
{
"name" : "decode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2581}
,
{
"name" : "safeDecode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2589}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "const immutable(ubyte)[]()",
"line" : 2597}
]
}
,
{
"name" : "EncodingSchemeUtf8",
"kind" : "class",
"line" : 2610,
"base" : "EncodingScheme",
"members" : [
{
"name" : "names",
"kind" : "function",
"type" : "const string[]()",
"line" : 2619}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 2628}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "const bool(dchar c)",
"line" : 2633}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "const ulong(dchar c)",
"line" : 2638}
,
{
"name" : "encode",
"kind" : "function",
"type" : "const ulong(dchar c, ubyte[] buffer)",
"line" : 2643}
,
{
"name" : "decode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2649}
,
{
"name" : "safeDecode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2657}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "const immutable(ubyte)[]()",
"line" : 2665}
]
}
,
{
"name" : "EncodingSchemeUtf16Native",
"kind" : "class",
"line" : 2679,
"base" : "EncodingScheme",
"members" : [
{
"name" : "NAME",
"kind" : "variable",
"type" : "const(immutable(char)[])",
"line" : 2688}
,
{
"name" : "names",
"kind" : "function",
"type" : "const string[]()",
"line" : 2691}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 2696}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "const bool(dchar c)",
"line" : 2701}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "const ulong(dchar c)",
"line" : 2706}
,
{
"name" : "encode",
"kind" : "function",
"type" : "const ulong(dchar c, ubyte[] buffer)",
"line" : 2711}
,
{
"name" : "decode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2717}
,
{
"name" : "safeDecode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2730}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "const immutable(ubyte)[]()",
"line" : 2743}
]
}
,
{
"name" : "EncodingSchemeUtf32Native",
"kind" : "class",
"line" : 2757,
"base" : "EncodingScheme",
"members" : [
{
"name" : "NAME",
"kind" : "variable",
"type" : "const(immutable(char)[])",
"line" : 2766}
,
{
"name" : "names",
"kind" : "function",
"type" : "const string[]()",
"line" : 2769}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 2774}
,
{
"name" : "canEncode",
"kind" : "function",
"type" : "const bool(dchar c)",
"line" : 2779}
,
{
"name" : "encodedLength",
"kind" : "function",
"type" : "const ulong(dchar c)",
"line" : 2784}
,
{
"name" : "encode",
"kind" : "function",
"type" : "const ulong(dchar c, ubyte[] buffer)",
"line" : 2789}
,
{
"name" : "decode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2795}
,
{
"name" : "safeDecode",
"kind" : "function",
"type" : "const dchar(ref const(ubyte)[] s)",
"line" : 2808}
,
{
"name" : "replacementSequence",
"kind" : "function",
"type" : "const immutable(ubyte)[]()",
"line" : 2821}
]
}
]
}
,
{
"name" : "std.exception",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/exception.d",
"members" : [
{
"name" : "assertNotThrown(T : Throwable = Exception,E)",
"kind" : "template",
"line" : 79,
"members" : [
{
"name" : "assertNotThrown",
"kind" : "function",
"type" : "void(lazy E expression, string msg = null, string file = __FILE__, size_t line = __LINE__)",
"line" : 79}
]
}
,
{
"name" : "assertThrown(T : Throwable = Exception,E)",
"kind" : "template",
"line" : 218,
"members" : [
{
"name" : "assertThrown",
"kind" : "function",
"type" : "void(lazy E expression, string msg = null, string file = __FILE__, size_t line = __LINE__)",
"line" : 218}
]
}
,
{
"name" : "enforce(T,string file = __FILE__,int line = __LINE__)",
"kind" : "template",
"line" : 352,
"members" : [
{
"name" : "enforce",
"kind" : "function",
"type" : "@safe T(T value, lazy const(char)[] msg = null)",
"line" : 352}
]
}
,
{
"name" : "enforce(T,string file = __FILE__,int line = __LINE__)",
"kind" : "template",
"line" : 363,
"members" : [
{
"name" : "enforce",
"kind" : "function",
"type" : "T(T value, scope void delegate() dg)",
"line" : 363}
]
}
,
{
"name" : "bailOut",
"kind" : "function",
"type" : "@safe void(string file, int line, in const(char[]) msg)",
"line" : 370}
,
{
"name" : "enforce(T)",
"kind" : "template",
"line" : 402,
"members" : [
{
"name" : "enforce",
"kind" : "function",
"type" : "@safe T(T value, lazy Throwable ex)",
"line" : 402}
]
}
,
{
"name" : "errnoEnforce(T,string file = __FILE__,int line = __LINE__)",
"kind" : "template",
"line" : 433,
"members" : [
{
"name" : "errnoEnforce",
"kind" : "function",
"type" : "@safe T(T value, lazy string msg = null)",
"line" : 433}
]
}
,
{
"name" : "enforceEx(E,T)",
"kind" : "template",
"line" : 451,
"members" : [
{
"name" : "enforceEx",
"kind" : "function",
"type" : "@safe T(T value, lazy string msg = \"\")",
"line" : 451}
]
}
,
{
"name" : "collectException(T = Exception,E)",
"kind" : "template",
"line" : 496,
"members" : [
{
"name" : "collectException",
"kind" : "function",
"type" : "T(lazy E expression, ref E result)",
"line" : 496}
]
}
,
{
"name" : "collectException(T : Throwable = Exception,E)",
"kind" : "template",
"line" : 533,
"members" : [
{
"name" : "collectException",
"kind" : "function",
"type" : "T(lazy E expression)",
"line" : 533}
]
}
,
{
"name" : "collectExceptionMsg(T = Exception,E)",
"kind" : "template",
"line" : 583,
"members" : [
{
"name" : "collectExceptionMsg",
"kind" : "function",
"type" : "string(lazy E expression)",
"line" : 583}
]
}
,
{
"name" : "emptyExceptionMsg",
"kind" : "variable",
"type" : "string",
"line" : 612}
,
{
"name" : "assumeUnique(T)",
"kind" : "template",
"line" : 687,
"members" : [
{
"name" : "assumeUnique",
"kind" : "function",
"type" : "pure nothrow immutable(T)[](ref T[] array)",
"line" : 687}
]
}
,
{
"name" : "assumeUnique(T,U)",
"kind" : "template",
"line" : 701,
"members" : [
{
"name" : "assumeUnique",
"kind" : "function",
"type" : "pure nothrow immutable(T[U])(ref T[U] array)",
"line" : 701}
]
}
,
{
"name" : "pointsTo(S,T)",
"kind" : "template",
"line" : 722,
"members" : [
{
"name" : "pointsTo",
"kind" : "function",
"type" : "pure nothrow @trusted bool(ref const S source, ref const T target)",
"line" : 722}
]
}
,
{
"name" : "ErrnoException",
"kind" : "class",
"line" : 802,
"base" : "Exception",
"members" : [
{
"name" : "errno",
"kind" : "variable",
"type" : "uint",
"line" : 804}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ErrnoException(string msg, string file = null, uint line = cast(uint)0)",
"line" : 805}
]
}
,
{
"name" : "structuralCast(Target,Source) if (is(Source == class) || is(Target == class))",
"kind" : "template",
"line" : 823,
"members" : [
{
"name" : "structuralCast",
"kind" : "function",
"type" : "Target(Source obj)",
"line" : 823}
]
}
,
{
"name" : "structuralCast(Target,Source) if (is(Source == interface) || is(Target == interface))",
"kind" : "template",
"line" : 833,
"members" : [
{
"name" : "structuralCast",
"kind" : "function",
"type" : "Target(Source obj)",
"line" : 833}
]
}
,
{
"name" : "structurallyCompatible(S,T) if (!isArray!(S) || !isArray!(T))",
"kind" : "template",
"line" : 898,
"members" : [
{
"name" : "structurallyCompatible",
"kind" : "variable",
"line" : 903}
]
}
,
{
"name" : "structurallyCompatible(S,T) if (isArray!(S) && isArray!(T))",
"kind" : "template",
"line" : 906,
"members" : [
{
"name" : "structurallyCompatible",
"kind" : "variable",
"line" : 910}
]
}
]
}
,
{
"name" : "std.file",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/file.d",
"members" : [
{
"name" : "struct_stat64",
"kind" : "struct",
"line" : 154,
"members" : [
{
"name" : "st_dev",
"kind" : "variable",
"type" : "ulong",
"line" : 155}
,
{
"name" : "st_ino",
"kind" : "variable",
"type" : "ulong",
"line" : 156}
,
{
"name" : "st_nlink",
"kind" : "variable",
"type" : "ulong",
"line" : 157}
,
{
"name" : "st_mode",
"kind" : "variable",
"type" : "uint",
"line" : 158}
,
{
"name" : "st_uid",
"kind" : "variable",
"type" : "uint",
"line" : 159}
,
{
"name" : "st_gid",
"kind" : "variable",
"type" : "uint",
"line" : 160}
,
{
"name" : "__pad0",
"kind" : "variable",
"type" : "int",
"line" : 161}
,
{
"name" : "st_rdev",
"kind" : "variable",
"type" : "ulong",
"line" : 162}
,
{
"name" : "st_size",
"kind" : "variable",
"type" : "long",
"line" : 163}
,
{
"name" : "st_blksize",
"kind" : "variable",
"type" : "long",
"line" : 164}
,
{
"name" : "st_blocks",
"kind" : "variable",
"type" : "long",
"line" : 165}
,
{
"name" : "st_atime",
"kind" : "variable",
"type" : "long",
"line" : 166}
,
{
"name" : "st_atimensec",
"kind" : "variable",
"type" : "ulong",
"line" : 167}
,
{
"name" : "st_mtime",
"kind" : "variable",
"type" : "long",
"line" : 168}
,
{
"name" : "st_mtimensec",
"kind" : "variable",
"type" : "ulong",
"line" : 169}
,
{
"name" : "st_ctime",
"kind" : "variable",
"type" : "long",
"line" : 170}
,
{
"name" : "st_ctimensec",
"kind" : "variable",
"type" : "ulong",
"line" : 171}
,
{
"name" : "__unused",
"kind" : "variable",
"type" : "long[3LU]",
"line" : 172}
]
}
,
{
"name" : "fstat64",
"kind" : "function",
"type" : "intC (int, struct_stat64*)",
"line" : 177}
,
{
"name" : "stat64",
"kind" : "function",
"type" : "intC (in const(char*), struct_stat64*)",
"line" : 178}
,
{
"name" : "lstat64",
"kind" : "function",
"type" : "intC (in const(char*), struct_stat64*)",
"line" : 179}
,
{
"name" : "FileException",
"kind" : "class",
"line" : 188,
"base" : "Exception",
"members" : [
{
"name" : "errno",
"kind" : "variable",
"type" : "immutable(uint)",
"line" : 193}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "FileException(in const(char[]) name, in const(char[]) msg, string file = __FILE__, ulong line = cast(ulong)__LINE__)",
"line" : 204}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "FileException(in const(char[]) name, uint errno = cast(uint)getErrno(), string file = __FILE__, ulong line = cast(ulong)__LINE__)",
"line" : 243}
]
}
,
{
"name" : "cenforce(T)",
"kind" : "template",
"line" : 254,
"members" : [
{
"name" : "cenforce",
"kind" : "function",
"type" : "T(T condition, lazy const(char)[] name, string file = __FILE__, size_t line = __LINE__)",
"line" : 254}
]
}
,
{
"name" : "read",
"kind" : "function",
"type" : "void[](in const(char[]) name, ulong upTo = 18446744073709551615LU)",
"line" : 295}
,
{
"name" : "readText(S = string)",
"kind" : "template",
"line" : 404,
"members" : [
{
"name" : "readText",
"kind" : "function",
"type" : "S(in char[] name)",
"line" : 404}
]
}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(in const(char[]) name, const const(void[]) buffer)",
"line" : 434}
,
{
"name" : "append",
"kind" : "function",
"type" : "void(in const(char[]) name, in const(void[]) buffer)",
"line" : 475}
,
{
"name" : "writeImpl",
"kind" : "function",
"type" : "void(in const(char[]) name, in const(void[]) buffer, in const(uint) mode)",
"line" : 501}
,
{
"name" : "rename",
"kind" : "function",
"type" : "void(in const(char[]) from, in const(char[]) to)",
"line" : 521}
,
{
"name" : "remove",
"kind" : "function",
"type" : "void(in const(char[]) name)",
"line" : 540}
,
{
"name" : "getSize",
"kind" : "function",
"type" : "ulong(in const(char[]) name)",
"line" : 559}
,
{
"name" : "getTimes(C) if (is(Unqual!(C) == char))",
"kind" : "template",
"line" : 657,
"members" : [
{
"name" : "getTimes",
"kind" : "function",
"type" : "void(in C[] name, out d_time ftc, out d_time fta, out d_time ftm)",
"line" : 657}
]
}
,
{
"name" : "getTimes(C) if (is(Unqual!(C) == char))",
"kind" : "template",
"line" : 691,
"members" : [
{
"name" : "getTimes",
"kind" : "function",
"type" : "void(in C[] name, out SysTime fileAccessTime, out SysTime fileModificationTime)",
"line" : 691}
]
}
,
{
"name" : "getTimesPosix(C) if (is(Unqual!(C) == char))",
"kind" : "template",
"line" : 916,
"members" : [
{
"name" : "getTimesPosix",
"kind" : "function",
"type" : "void(in C[] name, out SysTime fileStatusChangeTime, out SysTime fileAccessTime, out SysTime fileModificationTime)",
"line" : 916}
]
}
,
{
"name" : "lastModified(C) if (is(Unqual!(C) == char))",
"kind" : "template",
"line" : 941,
"members" : [
{
"name" : "lastModified",
"kind" : "function",
"type" : "d_time(in C[] name)",
"line" : 941}
]
}
,
{
"name" : "lastModified(C) if (is(Unqual!(C) == char))",
"kind" : "template",
"line" : 966,
"members" : [
{
"name" : "lastModified",
"kind" : "function",
"type" : "d_time(in C[] name, d_time returnIfMissing)",
"line" : 966}
]
}
,
{
"name" : "timeLastModified",
"kind" : "function",
"type" : "SysTime(in const(char[]) name)",
"line" : 1004}
,
{
"name" : "timeLastModified",
"kind" : "function",
"type" : "SysTime(in const(char[]) name, SysTime returnIfMissing)",
"line" : 1056}
,
{
"name" : "exists",
"kind" : "function",
"type" : "@property bool(in const(char[]) name)",
"line" : 1103}
,
{
"name" : "getAttributes",
"kind" : "function",
"type" : "uint(in const(char[]) name)",
"line" : 1148}
,
{
"name" : "getLinkAttributes",
"kind" : "function",
"type" : "uint(in const(char[]) name)",
"line" : 1187}
,
{
"name" : "isDir",
"kind" : "function",
"type" : "@property bool(in const(char[]) name)",
"line" : 1225}
,
{
"name" : "isdir",
"kind" : "alias",
"line" : 1261}
,
{
"name" : "isDir",
"kind" : "function",
"type" : "nothrow @property bool(uint attributes)",
"line" : 1273}
,
{
"name" : "attrIsDir",
"kind" : "function",
"type" : "nothrow bool(uint attributes)",
"line" : 1298}
,
{
"name" : "isFile",
"kind" : "function",
"type" : "@property bool(in const(char[]) name)",
"line" : 1370}
,
{
"name" : "isfile",
"kind" : "alias",
"line" : 1402}
,
{
"name" : "isFile",
"kind" : "function",
"type" : "nothrow @property bool(uint attributes)",
"line" : 1424}
,
{
"name" : "attrIsFile",
"kind" : "function",
"type" : "nothrow bool(uint attributes)",
"line" : 1460}
,
{
"name" : "isSymLink",
"kind" : "function",
"type" : "@property bool(in const(char[]) name)",
"line" : 1517}
,
{
"name" : "isSymLink",
"kind" : "function",
"type" : "nothrow @property bool(uint attributes)",
"line" : 1613}
,
{
"name" : "attrIsSymLink",
"kind" : "function",
"type" : "nothrow bool(uint attributes)",
"line" : 1643}
,
{
"name" : "chdir",
"kind" : "function",
"type" : "void(in const(char[]) pathname)",
"line" : 1660}
,
{
"name" : "mkdir",
"kind" : "function",
"type" : "void(in const(char[]) pathname)",
"line" : 1681}
,
{
"name" : "mkdirRecurse",
"kind" : "function",
"type" : "void(in const(char[]) pathname)",
"line" : 1701}
,
{
"name" : "rmdir",
"kind" : "function",
"type" : "void(in const(char[]) pathname)",
"line" : 1747}
,
{
"name" : "getcwd",
"kind" : "function",
"type" : "string()",
"line" : 1820}
,
{
"name" : "DirEntry",
"kind" : "struct",
"line" : 2210,
"members" : [
{
"name" : "name",
"kind" : "function",
"type" : "const @property string()",
"line" : 2213}
,
{
"name" : "isDir",
"kind" : "function",
"type" : "@property bool()",
"line" : 2218}
,
{
"name" : "isdir",
"kind" : "alias",
"line" : 2225}
,
{
"name" : "isFile",
"kind" : "function",
"type" : "@property bool()",
"line" : 2227}
,
{
"name" : "isfile",
"kind" : "alias",
"line" : 2234}
,
{
"name" : "isSymLink",
"kind" : "function",
"type" : "@property bool()",
"line" : 2236}
,
{
"name" : "d_type",
"kind" : "function",
"type" : "@property ubyte()",
"line" : 2248}
,
{
"name" : "size",
"kind" : "function",
"type" : "@property ulong()",
"line" : 2253}
,
{
"name" : "creationTime",
"kind" : "function",
"type" : "@property long()",
"line" : 2259}
,
{
"name" : "timeStatusChanged",
"kind" : "function",
"type" : "@property SysTime()",
"line" : 2266}
,
{
"name" : "lastAccessTime",
"kind" : "function",
"type" : "@property long()",
"line" : 2273}
,
{
"name" : "timeLastAccessed",
"kind" : "function",
"type" : "@property SysTime()",
"line" : 2280}
,
{
"name" : "lastWriteTime",
"kind" : "function",
"type" : "@property long()",
"line" : 2287}
,
{
"name" : "timeLastModified",
"kind" : "function",
"type" : "@property SysTime()",
"line" : 2294}
,
{
"name" : "attributes",
"kind" : "function",
"type" : "@property uint()",
"line" : 2301}
,
{
"name" : "linkAttributes",
"kind" : "function",
"type" : "@property uint()",
"line" : 2308}
,
{
"name" : "statBuf",
"kind" : "function",
"type" : "@property struct_stat64()",
"line" : 2315}
,
{
"name" : "_init",
"kind" : "function",
"type" : "void(in const(char[]) path)",
"line" : 2324}
,
{
"name" : "_init",
"kind" : "function",
"type" : "void(in const(char[]) path, dirent* fd)",
"line" : 2333}
,
{
"name" : "_ensureStatDone",
"kind" : "function",
"type" : "void()",
"line" : 2362}
,
{
"name" : "_ensureLStatDone",
"kind" : "function",
"type" : "void()",
"line" : 2377}
,
{
"name" : "_name",
"kind" : "variable",
"type" : "string",
"line" : 2402}
,
{
"name" : "_statBuf",
"kind" : "variable",
"type" : "struct_stat64",
"line" : 2404}
,
{
"name" : "_lstatMode",
"kind" : "variable",
"type" : "uint",
"line" : 2405}
,
{
"name" : "_dType",
"kind" : "variable",
"type" : "ubyte",
"line" : 2406}
,
{
"name" : "_didLStat",
"kind" : "variable",
"type" : "bool",
"line" : 2408}
,
{
"name" : "_didStat",
"kind" : "variable",
"type" : "bool",
"line" : 2409}
,
{
"name" : "_dTypeSet",
"kind" : "variable",
"type" : "bool",
"line" : 2410}
]
}
,
{
"name" : "listdir",
"kind" : "alias",
"line" : 2506}
,
{
"name" : "copy",
"kind" : "function",
"type" : "void(in const(char[]) from, in const(char[]) to)",
"line" : 2512}
,
{
"name" : "setTimes(C) if (is(Unqual!(C) == char))",
"kind" : "template",
"line" : 2581,
"members" : [
{
"name" : "setTimes",
"kind" : "function",
"type" : "void(in C[] name, d_time fta, d_time ftm)",
"line" : 2581}
]
}
,
{
"name" : "setTimes(C) if (is(Unqual!(C) == char))",
"kind" : "template",
"line" : 2633,
"members" : [
{
"name" : "setTimes",
"kind" : "function",
"type" : "void(in C[] name, SysTime fileAccessTime, SysTime fileModificationTime)",
"line" : 2633}
]
}
,
{
"name" : "rmdirRecurse",
"kind" : "function",
"type" : "void(in const(char[]) pathname)",
"line" : 2695}
,
{
"name" : "rmdirRecurse",
"kind" : "function",
"type" : "void(ref DirEntry de)",
"line" : 2711}
,
{
"name" : "SpanMode",
"kind" : "enum",
"line" : 2814,
"base" : "int",
"members" : [
{
"name" : "shallow",
"kind" : "enum member",
"line" : 2816}
,
{
"name" : "depth",
"kind" : "enum member",
"line" : 2820}
,
{
"name" : "breadth",
"kind" : "enum member",
"line" : 2823}
]
}
,
{
"name" : "DirIteratorImpl",
"kind" : "struct",
"line" : 2827,
"members" : [
{
"name" : "_mode",
"kind" : "variable",
"type" : "SpanMode",
"line" : 2828}
,
{
"name" : "_followSymLinks",
"kind" : "variable",
"type" : "bool",
"line" : 2833}
,
{
"name" : "_cur",
"kind" : "variable",
"type" : "DirEntry",
"line" : 2834}
,
{
"name" : "_stack",
"kind" : "variable",
"type" : "Appender!(DirHandle[])",
"line" : 2835}
,
{
"name" : "_stashed",
"kind" : "variable",
"type" : "Appender!(DirEntry[])",
"line" : 2836}
,
{
"name" : "pushExtra",
"kind" : "function",
"type" : "void(DirEntry de)",
"line" : 2838}
,
{
"name" : "hasExtra",
"kind" : "function",
"type" : "bool()",
"line" : 2840}
,
{
"name" : "popExtra",
"kind" : "function",
"type" : "DirEntry()",
"line" : 2842}
,
{
"name" : "DirHandle",
"kind" : "struct",
"line" : 2967,
"members" : [
{
"name" : "dirpath",
"kind" : "variable",
"type" : "string",
"line" : 2968}
,
{
"name" : "h",
"kind" : "variable",
"type" : "DIR*",
"line" : 2969}
]
}
,
{
"name" : "stepIn",
"kind" : "function",
"type" : "bool(string directory)",
"line" : 2972}
,
{
"name" : "next",
"kind" : "function",
"type" : "bool()",
"line" : 2983}
,
{
"name" : "popDirStack",
"kind" : "function",
"type" : "void()",
"line" : 3001}
,
{
"name" : "releaseDirStack",
"kind" : "function",
"type" : "void()",
"line" : 3008}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref DirIteratorImpl(string pathname, SpanMode mode, bool _followSymLinks)",
"line" : 3016}
,
{
"name" : "empty",
"kind" : "function",
"type" : "@property bool()",
"line" : 3038}
,
{
"name" : "front",
"kind" : "function",
"type" : "@property DirEntry()",
"line" : 3039}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 3040}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "ref DirIteratorImpl(DirIteratorImpl p)",
"line" : 2827}
]
}
,
{
"name" : "DirIterator",
"kind" : "struct",
"line" : 3082,
"members" : [
{
"name" : "impl",
"kind" : "variable",
"type" : "RefCounted!(DirIteratorImpl,cast(RefCountedAutoInitialize)0)",
"line" : 3084}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref DirIterator(string pathname, SpanMode mode, bool followSymLinks)",
"line" : 3085}
,
{
"name" : "empty",
"kind" : "function",
"type" : "@property bool()",
"line" : 3090}
,
{
"name" : "front",
"kind" : "function",
"type" : "@property DirEntry()",
"line" : 3091}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 3092}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(int delegate(ref string name) dg)",
"line" : 3093}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(int delegate(ref DirEntry name) dg)",
"line" : 3103}
,
{
"name" : "__cpctor",
"kind" : "function",
"type" : "void(ref DirIterator p)",
"line" : 3082}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "ref DirIterator(DirIterator p)",
"line" : 3082}
]
}
,
{
"name" : "dirEntries",
"kind" : "function",
"type" : "DirIterator(string path, SpanMode mode, bool followSymLinks = true)",
"line" : 3160}
,
{
"name" : "dirEntry",
"kind" : "function",
"type" : "DirEntry(in const(char[]) name)",
"line" : 3206}
,
{
"name" : "slurp(Types...)",
"kind" : "template",
"line" : 3416,
"members" : [
{
"name" : "slurp",
"kind" : "function",
"type" : "Select!(Types.length == 1,Types[0][],Tuple!(Types)[])(string filename, in char[] format)",
"line" : 3416}
]
}
,
{
"name" : "listDir(C)",
"kind" : "template",
"line" : 3475,
"members" : [
{
"name" : "listDir",
"kind" : "function",
"type" : "string[](in C[] pathname)",
"line" : 3475}
]
}
,
{
"name" : "listDir(C,U) if (is(C : char) && !is(U : bool delegate(string filename)))",
"kind" : "template",
"line" : 3546,
"members" : [
{
"name" : "listDir",
"kind" : "function",
"type" : "string[](in C[] pathname, U filter, bool followSymLinks = true)",
"line" : 3546}
]
}
,
{
"name" : "listDir(C,U) if (is(C : char) && is(U : bool delegate(string filename)))",
"kind" : "template",
"line" : 3619,
"members" : [
{
"name" : "listDir",
"kind" : "function",
"type" : "void(in C[] pathname, U callback)",
"line" : 3619}
]
}
,
{
"name" : "_listDir",
"kind" : "function",
"type" : "void(in const(char[]) pathname, bool delegate(string filename) callback)",
"line" : 3633}
,
{
"name" : "_listDir",
"kind" : "function",
"type" : "void(in const(char[]) pathname, bool delegate(DirEntry* de) callback)",
"line" : 3708}
,
{
"name" : "d_time",
"kind" : "alias",
"type" : "long",
"line" : 3743}
,
{
"name" : "d_time_nan",
"kind" : "variable",
"type" : "long",
"line" : 3744}
,
{
"name" : "ticksPerSecond",
"kind" : "variable",
"type" : "int",
"line" : 3745}
,
{
"name" : "softDeprec(string vers,string date,string oldFunc,string newFunc)",
"kind" : "template",
"line" : 3757,
"members" : [
{
"name" : "softDeprec",
"kind" : "variable",
"line" : 3761}
]
}
]
}
,
{
"name" : "std.__fileinit",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/__fileinit.d",
"members" : [
]
}
,
{
"name" : "std.format",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/format.d",
"members" : [
{
"name" : "snprintf",
"kind" : "function",
"type" : "intC (char* s, ulong n, in const(char*) format,...)",
"line" : 52}
,
{
"name" : "FormatError",
"kind" : "class",
"line" : 58,
"base" : "Error",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "FormatError()",
"line" : 60}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "FormatError(string msg)",
"line" : 65}
]
}
,
{
"name" : "formattedWrite(Writer,Char,A...)",
"kind" : "template",
"line" : 302,
"members" : [
{
"name" : "formattedWrite",
"kind" : "function",
"type" : "void(Writer w, in Char[] fmt, A args)",
"line" : 302}
]
}
,
{
"name" : "formattedRead(R,Char,S...)",
"kind" : "template",
"line" : 405,
"members" : [
{
"name" : "formattedRead",
"kind" : "function",
"type" : "uint(ref R r, const(Char)[] fmt, S args)",
"line" : 405}
]
}
,
{
"name" : "FormatSpec(Char)",
"kind" : "struct",
"line" : 468,
"members" : [
{
"name" : "FormatSpec",
"kind" : "struct",
"line" : 468,
"members" : [
{
"name" : "width",
"kind" : "variable",
"type" : "int",
"line" : 472}
,
{
"name" : "precision",
"kind" : "variable",
"type" : "int",
"line" : 478}
,
{
"name" : "DYNAMIC",
"kind" : "variable",
"type" : "int",
"line" : 484}
,
{
"name" : "UNSPECIFIED",
"kind" : "variable",
"type" : "int",
"line" : 489}
,
{
"name" : "spec",
"kind" : "variable",
"type" : "char",
"line" : 493}
,
{
"name" : "indexStart",
"kind" : "variable",
"type" : "ubyte",
"line" : 498}
,
{
"name" : "indexEnd",
"kind" : "variable",
"type" : "ubyte",
"line" : 503}
,
{
"name" : "allFlags",
"kind" : "variable",
"type" : "ubyte",
"line" : 537}
,
{
"name" : "nested",
"kind" : "variable",
"type" : "const(Char)[]",
"line" : 553}
,
{
"name" : "trailing",
"kind" : "variable",
"type" : "const(Char)[]",
"line" : 558}
,
{
"name" : "seqBefore",
"kind" : "variable",
"type" : "const(Char)[]",
"line" : 564}
,
{
"name" : "seqAfter",
"kind" : "variable",
"type" : "const(Char)[]",
"line" : 570}
,
{
"name" : "seqSeparator",
"kind" : "variable",
"type" : "const(Char)[]",
"line" : 576}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(in Char[] fmt)",
"line" : 584}
,
{
"name" : "writeUpToNextSpec(OutputRange)",
"kind" : "template",
"line" : 589,
"members" : [
{
"name" : "writeUpToNextSpec",
"kind" : "function",
"type" : "bool(OutputRange writer)",
"line" : 589}
]
}
,
{
"name" : "fillUp",
"kind" : "function",
"type" : "void()",
"line" : 643}
,
{
"name" : "readUpToNextSpec(R)",
"kind" : "template",
"line" : 797,
"members" : [
{
"name" : "readUpToNextSpec",
"kind" : "function",
"type" : "bool(ref R r)",
"line" : 797}
]
}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 848}
]
}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (is(const(T) == const(void[])))",
"kind" : "template",
"line" : 869,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 869}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (is(T == enum))",
"kind" : "template",
"line" : 886,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 886}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (isIntegral!(T))",
"kind" : "template",
"line" : 936,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, FormatSpec!(Char) f)",
"line" : 936}
]
}
,
{
"name" : "formatValue(Writer,D,Char) if (isFloatingPoint!(D))",
"kind" : "template",
"line" : 1067,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, D obj, ref FormatSpec!(Char) f)",
"line" : 1067}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (is(T : bool) && !is(T == enum))",
"kind" : "template",
"line" : 1132,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1132}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (isSomeChar!(T))",
"kind" : "template",
"line" : 1148,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1148}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (isSomeString!(T) && !isStaticArray!(T) && !is(T == enum))",
"kind" : "template",
"line" : 1164,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1164}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (isInputRange!(T) && !isSomeString!(T))",
"kind" : "template",
"line" : 1199,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1199}
]
}
,
{
"name" : "formatRange(Writer,T,Char) if (isInputRange!(T) && !isSomeChar!(ElementType!(T)))",
"kind" : "template",
"line" : 1214,
"members" : [
{
"name" : "formatRange",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1214}
]
}
,
{
"name" : "formatRange(Writer,T,Char) if (isInputRange!(T) && isSomeChar!(ElementType!(T)))",
"kind" : "template",
"line" : 1292,
"members" : [
{
"name" : "formatRange",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1292}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (!isInputRange!(T) && isDynamicArray!(T) && !isSomeString!(T) && !is(const(T) == const(void[])))",
"kind" : "template",
"line" : 1332,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1332}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (is(D == void[0]))",
"kind" : "template",
"line" : 1389,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1389}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (isPointer!(T) && !isInputRange!(T))",
"kind" : "template",
"line" : 1400,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1400}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (!isSomeString!(T) && is(T == class) && !isInputRange!(T))",
"kind" : "template",
"line" : 1419,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1419}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (is(T == interface) && !isInputRange!(T))",
"kind" : "template",
"line" : 1432,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1432}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (isAssociativeArray!(T) && !is(T == enum))",
"kind" : "template",
"line" : 1456,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1456}
]
}
,
{
"name" : "WriterSink(Writer)",
"kind" : "struct",
"line" : 1485,
"members" : [
{
"name" : "WriterSink",
"kind" : "struct",
"line" : 1485,
"members" : [
{
"name" : "w",
"kind" : "variable",
"type" : "Writer*",
"line" : 1486}
,
{
"name" : "sink",
"kind" : "function",
"type" : "void(const(char)[] s)",
"line" : 1487}
]
}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (is(T == struct) && !isInputRange!(T))",
"kind" : "template",
"line" : 1500,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1500}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (isStaticArray!(T))",
"kind" : "template",
"line" : 1553,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, ref T val, ref FormatSpec!(Char) f)",
"line" : 1553}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (is(T : creal))",
"kind" : "template",
"line" : 1562,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1562}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (is(T : ireal))",
"kind" : "template",
"line" : 1582,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1582}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (is(T == delegate))",
"kind" : "template",
"line" : 1601,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1601}
]
}
,
{
"name" : "formatValue(Writer,T,Char) if (is(T == typedef))",
"kind" : "template",
"line" : 1626,
"members" : [
{
"name" : "formatValue",
"kind" : "function",
"type" : "void(Writer w, T val, ref FormatSpec!(Char) f)",
"line" : 1626}
]
}
,
{
"name" : "formatGeneric(Writer,D,Char)",
"kind" : "template",
"line" : 1649,
"members" : [
{
"name" : "formatGeneric",
"kind" : "function",
"type" : "void(Writer w, const(void)* arg, ref FormatSpec!(Char) f)",
"line" : 1649}
]
}
,
{
"name" : "getNthInt(A...)",
"kind" : "template",
"line" : 1673,
"members" : [
{
"name" : "getNthInt",
"kind" : "function",
"type" : "int(uint index, A args)",
"line" : 1673}
]
}
,
{
"name" : "skipData(Range,Char)",
"kind" : "template",
"line" : 2250,
"members" : [
{
"name" : "skipData",
"kind" : "function",
"type" : "void(ref Range input, ref FormatSpec!(Char) spec)",
"line" : 2250}
]
}
,
{
"name" : "unformatValue(T,Range,Char) if (isArray!(T) && !isSomeString!(T))",
"kind" : "template",
"line" : 2270,
"members" : [
{
"name" : "unformatValue",
"kind" : "function",
"type" : "T(ref Range input, ref FormatSpec!(Char) spec)",
"line" : 2270}
]
}
,
{
"name" : "unformatValue(T,Range,Char) if (isInputRange!(Range) && isSomeString!(T))",
"kind" : "template",
"line" : 2289,
"members" : [
{
"name" : "unformatValue",
"kind" : "function",
"type" : "T(ref Range input, ref FormatSpec!(Char) spec)",
"line" : 2289}
]
}
,
{
"name" : "acceptedSpecs(T)",
"kind" : "template",
"line" : 2325,
"members" : [
]
}
,
{
"name" : "unformatValue(T,Range,Char) if (isIntegral!(T) && isInputRange!(Range))",
"kind" : "template",
"line" : 2335,
"members" : [
{
"name" : "unformatValue",
"kind" : "function",
"type" : "T(ref Range input, ref FormatSpec!(Char) spec)",
"line" : 2335}
]
}
,
{
"name" : "unformatValue(T,Range,Char) if (isSomeChar!(T) && isInputRange!(Range))",
"kind" : "template",
"line" : 2350,
"members" : [
{
"name" : "unformatValue",
"kind" : "function",
"type" : "T(ref Range input, ref FormatSpec!(Char) spec)",
"line" : 2350}
]
}
,
{
"name" : "unformatValue(T,Range,Char) if (isFloatingPoint!(T))",
"kind" : "template",
"line" : 2367,
"members" : [
{
"name" : "unformatValue",
"kind" : "function",
"type" : "T(ref Range input, ref FormatSpec!(Char) spec)",
"line" : 2367}
]
}
,
{
"name" : "Mangle",
"kind" : "enum",
"line" : 2442,
"base" : "char",
"members" : [
{
"name" : "Tvoid",
"kind" : "enum member",
"line" : 2444}
,
{
"name" : "Tbool",
"kind" : "enum member",
"line" : 2445}
,
{
"name" : "Tbyte",
"kind" : "enum member",
"line" : 2446}
,
{
"name" : "Tubyte",
"kind" : "enum member",
"line" : 2447}
,
{
"name" : "Tshort",
"kind" : "enum member",
"line" : 2448}
,
{
"name" : "Tushort",
"kind" : "enum member",
"line" : 2449}
,
{
"name" : "Tint",
"kind" : "enum member",
"line" : 2450}
,
{
"name" : "Tuint",
"kind" : "enum member",
"line" : 2451}
,
{
"name" : "Tlong",
"kind" : "enum member",
"line" : 2452}
,
{
"name" : "Tulong",
"kind" : "enum member",
"line" : 2453}
,
{
"name" : "Tfloat",
"kind" : "enum member",
"line" : 2454}
,
{
"name" : "Tdouble",
"kind" : "enum member",
"line" : 2455}
,
{
"name" : "Treal",
"kind" : "enum member",
"line" : 2456}
,
{
"name" : "Tifloat",
"kind" : "enum member",
"line" : 2458}
,
{
"name" : "Tidouble",
"kind" : "enum member",
"line" : 2459}
,
{
"name" : "Tireal",
"kind" : "enum member",
"line" : 2460}
,
{
"name" : "Tcfloat",
"kind" : "enum member",
"line" : 2461}
,
{
"name" : "Tcdouble",
"kind" : "enum member",
"line" : 2462}
,
{
"name" : "Tcreal",
"kind" : "enum member",
"line" : 2463}
,
{
"name" : "Tchar",
"kind" : "enum member",
"line" : 2465}
,
{
"name" : "Twchar",
"kind" : "enum member",
"line" : 2466}
,
{
"name" : "Tdchar",
"kind" : "enum member",
"line" : 2467}
,
{
"name" : "Tarray",
"kind" : "enum member",
"line" : 2469}
,
{
"name" : "Tsarray",
"kind" : "enum member",
"line" : 2470}
,
{
"name" : "Taarray",
"kind" : "enum member",
"line" : 2471}
,
{
"name" : "Tpointer",
"kind" : "enum member",
"line" : 2472}
,
{
"name" : "Tfunction",
"kind" : "enum member",
"line" : 2473}
,
{
"name" : "Tident",
"kind" : "enum member",
"line" : 2474}
,
{
"name" : "Tclass",
"kind" : "enum member",
"line" : 2475}
,
{
"name" : "Tstruct",
"kind" : "enum member",
"line" : 2476}
,
{
"name" : "Tenum",
"kind" : "enum member",
"line" : 2477}
,
{
"name" : "Ttypedef",
"kind" : "enum member",
"line" : 2478}
,
{
"name" : "Tdelegate",
"kind" : "enum member",
"line" : 2479}
,
{
"name" : "Tconst",
"kind" : "enum member",
"line" : 2481}
,
{
"name" : "Timmutable",
"kind" : "enum member",
"line" : 2482}
]
}
,
{
"name" : "primitiveTypeInfo",
"kind" : "function",
"type" : "TypeInfo(Mangle m)",
"line" : 2489}
,
{
"name" : "doFormat",
"kind" : "function",
"type" : "void(void delegate(dchar) putc, TypeInfo[] arguments, void* argptr)",
"line" : 2782}
]
}
,
{
"name" : "std.functional",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/functional.d",
"members" : [
{
"name" : "unaryFun(alias funbody,bool byRef = false,string parmName = \"a\")",
"kind" : "template",
"line" : 39,
"members" : [
{
"name" : "unaryFun",
"kind" : "alias",
"type" : "unaryFunImpl!(funbody,byRef,parmName).result",
"line" : 41}
]
}
,
{
"name" : "unaryFunImpl(alias fun,bool byRef,string parmName = \"a\")",
"kind" : "template",
"line" : 44,
"members" : [
]
}
,
{
"name" : "binaryFun(alias funbody,string parm1Name = \"a\",string parm2Name = \"b\")",
"kind" : "template",
"line" : 136,
"members" : [
{
"name" : "binaryFun",
"kind" : "alias",
"type" : "binaryFunImpl!(funbody,parm1Name,parm2Name).result",
"line" : 139}
]
}
,
{
"name" : "binaryFunImpl(alias fun,string parm1Name,string parm2Name)",
"kind" : "template",
"line" : 142,
"members" : [
]
}
,
{
"name" : "binaryReverseArgs(alias pred)",
"kind" : "template",
"line" : 255,
"members" : [
{
"name" : "binaryReverseArgs(ElementType1,ElementType2)",
"kind" : "template",
"line" : 258,
"members" : [
{
"name" : "binaryReverseArgs",
"kind" : "function",
"type" : "typeof(delegate ()\n{\nElementType1 a;\nElementType2 b;\nreturn pred(b,a);\n}\n())(ElementType1 a, ElementType2 b)",
"line" : 258}
]
}
]
}
,
{
"name" : "not(alias pred)",
"kind" : "template",
"line" : 286,
"members" : [
{
"name" : "not(T...) if (is(typeof(!unaryFun!(pred)(args))) || is(typeof(!binaryFun!(pred)(args))))",
"kind" : "template",
"line" : 288,
"members" : [
{
"name" : "not",
"kind" : "function",
"type" : "(T args)",
"line" : 288}
]
}
]
}
,
{
"name" : "curry(alias fun,alias arg)",
"kind" : "template",
"line" : 315,
"members" : [
]
}
,
{
"name" : "add(A,B)",
"kind" : "template",
"line" : 333,
"members" : [
{
"name" : "add",
"kind" : "function",
"type" : "(A x, B y)",
"line" : 333}
]
}
,
{
"name" : "adjoin(F...) if (F.length)",
"kind" : "template",
"line" : 372,
"members" : [
{
"name" : "adjoin(V...)",
"kind" : "template",
"line" : 374,
"members" : [
{
"name" : "adjoin",
"kind" : "function",
"type" : "(V a)",
"line" : 374}
]
}
]
}
,
{
"name" : "compose(fun...)",
"kind" : "template",
"line" : 476,
"members" : [
{
"name" : "compose",
"kind" : "alias",
"type" : "composeImpl!(fun).doIt",
"line" : 476}
]
}
,
{
"name" : "composeImpl(fun...)",
"kind" : "template",
"line" : 479,
"members" : [
]
}
,
{
"name" : "pipe(fun...)",
"kind" : "template",
"line" : 527,
"members" : [
{
"name" : "pipe",
"kind" : "alias",
"type" : "compose!(Reverse!(fun))",
"line" : 529}
]
}
,
{
"name" : "memoize(alias fun,uint maxSize = (uint).max)",
"kind" : "template",
"line" : 626,
"members" : [
{
"name" : "memoize",
"kind" : "function",
"type" : "ReturnType!(fun)(ParameterTypeTuple!(fun) args)",
"line" : 628}
]
}
,
{
"name" : "DelegateFaker(F)",
"kind" : "struct",
"line" : 676,
"members" : [
{
"name" : "DelegateFaker",
"kind" : "struct",
"line" : 676,
"members" : [
{
"name" : "GeneratingPolicy()",
"kind" : "template",
"line" : 693,
"members" : [
{
"name" : "WITHOUT_SYMBOL",
"kind" : "variable",
"line" : 696}
,
{
"name" : "generateFunctionBody(unused...)",
"kind" : "template",
"line" : 699,
"members" : [
{
"name" : "generateFunctionBody",
"kind" : "variable",
"line" : 711}
]
}
]
}
,
{
"name" : "FuncInfo_doIt",
"kind" : "alias",
"type" : "FuncInfo!(F)",
"line" : 715}
]
}
]
}
,
{
"name" : "toDelegate(F) if (isCallable!(F))",
"kind" : "template",
"line" : 746,
"members" : [
{
"name" : "toDelegate",
"kind" : "function",
"type" : "(auto ref F fp)",
"line" : 746}
]
}
]
}
,
{
"name" : "std.getopt",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/getopt.d",
"members" : [
{
"name" : "getopt(T...)",
"kind" : "template",
"line" : 341,
"members" : [
{
"name" : "getopt",
"kind" : "function",
"type" : "void(ref string[] args, T opts)",
"line" : 341}
]
}
,
{
"name" : "config",
"kind" : "enum",
"line" : 354,
"base" : "int",
"members" : [
{
"name" : "caseSensitive",
"kind" : "enum member",
"line" : 356}
,
{
"name" : "caseInsensitive",
"kind" : "enum member",
"line" : 358}
,
{
"name" : "bundling",
"kind" : "enum member",
"line" : 360}
,
{
"name" : "noBundling",
"kind" : "enum member",
"line" : 362}
,
{
"name" : "passThrough",
"kind" : "enum member",
"line" : 364}
,
{
"name" : "noPassThrough",
"kind" : "enum member",
"line" : 366}
,
{
"name" : "stopOnFirstNonOption",
"kind" : "enum member",
"line" : 368}
]
}
,
{
"name" : "getoptImpl(T...)",
"kind" : "template",
"line" : 371,
"members" : [
{
"name" : "getoptImpl",
"kind" : "function",
"type" : "void(ref string[] args, ref configuration cfg, T opts)",
"line" : 371}
]
}
,
{
"name" : "handleOption(R)",
"kind" : "template",
"line" : 417,
"members" : [
{
"name" : "handleOption",
"kind" : "function",
"type" : "void(string option, R receiver, ref string[] args, ref configuration cfg, bool incremental)",
"line" : 417}
]
}
,
{
"name" : "optionChar",
"kind" : "variable",
"type" : "dchar",
"line" : 535}
,
{
"name" : "endOfOptions",
"kind" : "variable",
"type" : "string",
"line" : 543}
,
{
"name" : "assignChar",
"kind" : "variable",
"type" : "dchar",
"line" : 549}
,
{
"name" : "autoIncrementChar",
"kind" : "variable",
"type" : "char",
"line" : 551}
,
{
"name" : "configuration",
"kind" : "struct",
"line" : 554,
"members" : [
{
"name" : "caseSensitive",
"kind" : "function",
"type" : "const bool()",
"line" : 555}
,
{
"name" : "caseSensitive",
"kind" : "function",
"type" : "void(bool v)",
"line" : 556}
,
{
"name" : "bundling",
"kind" : "function",
"type" : "const bool()",
"line" : 557}
,
{
"name" : "bundling",
"kind" : "function",
"type" : "void(bool v)",
"line" : 558}
,
{
"name" : "passThrough",
"kind" : "function",
"type" : "const bool()",
"line" : 559}
,
{
"name" : "passThrough",
"kind" : "function",
"type" : "void(bool v)",
"line" : 560}
,
{
"name" : "stopOnFirstNonOption",
"kind" : "function",
"type" : "const bool()",
"line" : 561}
,
{
"name" : "stopOnFirstNonOption",
"kind" : "function",
"type" : "void(bool v)",
"line" : 562}
,
{
"name" : "caseSensitivebundlingpassThroughstopOnFirstNonOption",
"kind" : "variable",
"type" : "ubyte",
"line" : 563}
]
}
,
{
"name" : "optMatch",
"kind" : "function",
"type" : "bool(string arg, string optPattern, ref string value, configuration cfg)",
"line" : 563}
,
{
"name" : "setConfig",
"kind" : "function",
"type" : "void(ref configuration cfg, config option)",
"line" : 614}
]
}
,
{
"name" : "std.gregorian",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/gregorian.d",
"members" : [
{
"name" : "GregYear",
"kind" : "alias",
"type" : "ushort",
"line" : 63}
,
{
"name" : "GregMonth",
"kind" : "alias",
"type" : "ushort",
"line" : 64}
,
{
"name" : "GregDay",
"kind" : "alias",
"type" : "ushort",
"line" : 65}
,
{
"name" : "GregDayOfWeek",
"kind" : "alias",
"type" : "uint",
"line" : 66}
,
{
"name" : "GregDayOfYear",
"kind" : "alias",
"type" : "uint",
"line" : 67}
,
{
"name" : "Jan",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "Feb",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "Mar",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "Apr",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "May",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "Jun",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "Jul",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "Aug",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "Sep",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "Oct",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "Nov",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "Dec",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "Special",
"kind" : "struct",
"line" : 72,
"members" : [
{
"name" : "value",
"kind" : "variable",
"type" : "ulong",
"line" : 72}
]
}
,
{
"name" : "notADateTime",
"kind" : "variable",
"type" : "immutable(Special)",
"line" : 74}
,
{
"name" : "negInfin",
"kind" : "variable",
"type" : "immutable(Special)",
"line" : 75}
,
{
"name" : "posInfin",
"kind" : "variable",
"type" : "immutable(Special)",
"line" : 76}
,
{
"name" : "minDateTime",
"kind" : "variable",
"type" : "immutable(Special)",
"line" : 77}
,
{
"name" : "maxDateTime",
"kind" : "variable",
"type" : "immutable(Special)",
"line" : 78}
,
{
"name" : "notSpecial",
"kind" : "variable",
"type" : "immutable(Special)",
"line" : 79}
,
{
"name" : "Date",
"kind" : "struct",
"line" : 82,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ref Date(uint year, uint month, uint day)",
"line" : 83}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref Date(Special s)",
"line" : 93}
,
{
"name" : "year",
"kind" : "function",
"type" : "const @property ushort()",
"line" : 98}
,
{
"name" : "month",
"kind" : "function",
"type" : "const @property ushort()",
"line" : 114}
,
{
"name" : "day",
"kind" : "function",
"type" : "const @property ushort()",
"line" : 130}
,
{
"name" : "yearMonthDay",
"kind" : "function",
"type" : "const @property Tuple!(ushort,ushort,ushort)()",
"line" : 147}
,
{
"name" : "dayOfWeek",
"kind" : "function",
"type" : "const @property uint()",
"line" : 163}
,
{
"name" : "dayOfYear",
"kind" : "function",
"type" : "const @property uint()",
"line" : 175}
,
{
"name" : "endOfMonth",
"kind" : "function",
"type" : "const @property Date()",
"line" : 182}
,
{
"name" : "isInfinity",
"kind" : "function",
"type" : "const @property bool()",
"line" : 187}
,
{
"name" : "isNegInfinity",
"kind" : "function",
"type" : "const @property bool()",
"line" : 192}
,
{
"name" : "isPosInfinity",
"kind" : "function",
"type" : "const @property bool()",
"line" : 197}
,
{
"name" : "isNotADate",
"kind" : "function",
"type" : "const @property bool()",
"line" : 202}
,
{
"name" : "isSpecial",
"kind" : "function",
"type" : "const @property bool()",
"line" : 207}
,
{
"name" : "asSpecial",
"kind" : "function",
"type" : "const @property Special()",
"line" : 212}
,
{
"name" : "modJulianDay",
"kind" : "function",
"type" : "const @property long()",
"line" : 219}
,
{
"name" : "julianDay",
"kind" : "function",
"type" : "@property long(Tuple!(ushort,ushort,ushort) ymd)",
"line" : 225}
,
{
"name" : "isLeapYear",
"kind" : "function",
"type" : "bool(uint year)",
"line" : 236}
,
{
"name" : "weekNumber",
"kind" : "function",
"type" : "const @property int()",
"line" : 243}
,
{
"name" : "endOfMonthDay",
"kind" : "function",
"type" : "const @property uint()",
"line" : 287}
,
{
"name" : "toSimpleString",
"kind" : "function",
"type" : "const @property string()",
"line" : 306}
,
{
"name" : "toIsoString",
"kind" : "function",
"type" : "const @property string()",
"line" : 312}
,
{
"name" : "toIsoExtendedString",
"kind" : "function",
"type" : "const @property string()",
"line" : 317}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(ref const const(Date) rhs)",
"line" : 322}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "const int(in const(Date) rhs)",
"line" : 327}
,
{
"name" : "opBinary(string op) if (op == \"-\")",
"kind" : "template",
"line" : 337,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "const Days(const Date d)",
"line" : 337}
]
}
,
{
"name" : "days_",
"kind" : "variable",
"type" : "ulong",
"line" : 358}
]
}
,
{
"name" : "Days",
"kind" : "struct",
"line" : 362,
"members" : [
{
"name" : "days_",
"kind" : "variable",
"type" : "long",
"line" : 363}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref Days(long d)",
"line" : 364}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref Days(Special s)",
"line" : 365}
,
{
"name" : "days",
"kind" : "function",
"type" : "const @property long()",
"line" : 366}
,
{
"name" : "isNegative",
"kind" : "function",
"type" : "const @property bool()",
"line" : 367}
,
{
"name" : "unit",
"kind" : "function",
"type" : "@property Days()",
"line" : 368}
,
{
"name" : "isSpecial",
"kind" : "function",
"type" : "@property bool()",
"line" : 369}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(ref const const(Days) rhs)",
"line" : 373}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "const int(in const(Days) rhs)",
"line" : 378}
,
{
"name" : "opBinary(string op) if (op == \"+\" || op == \"-\")",
"kind" : "template",
"line" : 383,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "const Days(Days d)",
"line" : 383}
]
}
]
}
,
{
"name" : "fromString",
"kind" : "function",
"type" : "Date(in const(char[]) s)",
"line" : 389}
,
{
"name" : "fromUndelimitedString",
"kind" : "function",
"type" : "Date(in const(char[]) s)",
"line" : 395}
,
{
"name" : "dayClockLocalDay",
"kind" : "function",
"type" : "Date()",
"line" : 401}
,
{
"name" : "dayClockUniversalDay",
"kind" : "function",
"type" : "Date()",
"line" : 407}
]
}
,
{
"name" : "std.intrinsic",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/intrinsic.d",
"members" : [
{
"name" : "bsf",
"kind" : "function",
"type" : "pure nothrow int(ulong v)",
"line" : 35}
,
{
"name" : "bsr",
"kind" : "function",
"type" : "pure nothrow int(ulong v)",
"line" : 66}
,
{
"name" : "bt",
"kind" : "function",
"type" : "pure nothrow int(in const(ulong*) p, ulong bitnum)",
"line" : 71}
,
{
"name" : "btc",
"kind" : "function",
"type" : "nothrow int(ulong* p, ulong bitnum)",
"line" : 76}
,
{
"name" : "btr",
"kind" : "function",
"type" : "nothrow int(ulong* p, ulong bitnum)",
"line" : 81}
,
{
"name" : "bts",
"kind" : "function",
"type" : "nothrow int(ulong* p, ulong bitnum)",
"line" : 140}
,
{
"name" : "bswap",
"kind" : "function",
"type" : "pure nothrow uint(uint v)",
"line" : 148}
,
{
"name" : "inp",
"kind" : "function",
"type" : "nothrow ubyte(uint port_address)",
"line" : 154}
,
{
"name" : "inpw",
"kind" : "function",
"type" : "nothrow ushort(uint port_address)",
"line" : 159}
,
{
"name" : "inpl",
"kind" : "function",
"type" : "nothrow uint(uint port_address)",
"line" : 164}
,
{
"name" : "outp",
"kind" : "function",
"type" : "nothrow ubyte(uint port_address, ubyte value)",
"line" : 170}
,
{
"name" : "outpw",
"kind" : "function",
"type" : "nothrow ushort(uint port_address, ushort value)",
"line" : 175}
,
{
"name" : "outpl",
"kind" : "function",
"type" : "nothrow uint(uint port_address, uint value)",
"line" : 180}
]
}
,
{
"name" : "std.iterator",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/iterator.d",
"members" : [
{
"name" : "Iterator(Range : T[],T)",
"kind" : "template",
"line" : 40,
"members" : [
{
"name" : "Iterator",
"kind" : "alias",
"type" : "T*",
"line" : 42}
]
}
,
{
"name" : "ElementType(Range : T[],T)",
"kind" : "template",
"line" : 49,
"members" : [
{
"name" : "ElementType",
"kind" : "alias",
"type" : "T",
"line" : 51}
]
}
,
{
"name" : "isEmpty(T)",
"kind" : "template",
"line" : 57,
"members" : [
{
"name" : "isEmpty",
"kind" : "function",
"type" : "bool(T[] r)",
"line" : 57}
]
}
,
{
"name" : "begin(T)",
"kind" : "template",
"line" : 65,
"members" : [
{
"name" : "begin",
"kind" : "function",
"type" : "Iterator!(T[])(T[] r)",
"line" : 65}
]
}
,
{
"name" : "end(T)",
"kind" : "template",
"line" : 73,
"members" : [
{
"name" : "end",
"kind" : "function",
"type" : "Iterator!(T[])(T[] r)",
"line" : 73}
]
}
,
{
"name" : "front(T)",
"kind" : "template",
"line" : 84,
"members" : [
{
"name" : "front",
"kind" : "function",
"type" : "ElementType!(T[])(T[] r)",
"line" : 84}
]
}
,
{
"name" : "range(T)",
"kind" : "template",
"line" : 103,
"members" : [
{
"name" : "range",
"kind" : "function",
"type" : "T[](T* first, T* last)",
"line" : 103}
]
}
,
{
"name" : "Retro(R : E[],E)",
"kind" : "struct",
"line" : 114,
"members" : [
{
"name" : "Retro",
"kind" : "struct",
"line" : 114,
"members" : [
{
"name" : "forward",
"kind" : "variable",
"type" : "E[]",
"line" : 115}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(E[] range)",
"line" : 117}
]
}
]
}
,
{
"name" : "retro(E)",
"kind" : "template",
"line" : 127,
"members" : [
{
"name" : "retro",
"kind" : "function",
"type" : "Retro!(E[])(E[] r)",
"line" : 127}
]
}
,
{
"name" : "Iterator(R : Retro!(T),T)",
"kind" : "struct",
"line" : 133,
"members" : [
{
"name" : "Iterator",
"kind" : "struct",
"line" : 133,
"members" : [
{
"name" : "it",
"kind" : "variable",
"type" : "Iterator!(T)",
"line" : 134}
,
{
"name" : "opSubtract(Iterator)",
"kind" : "template",
"line" : 135,
"members" : [
{
"name" : "opSubtract",
"kind" : "function",
"type" : "int(Iterator rhs)",
"line" : 135}
]
}
,
{
"name" : "opPreInc",
"kind" : "function",
"type" : "void()",
"line" : 141}
,
{
"name" : "opAdd",
"kind" : "function",
"type" : "Iterator(int i)",
"line" : 145}
,
{
"name" : "opAddAssign",
"kind" : "function",
"type" : "void(int i)",
"line" : 151}
,
{
"name" : "opStar",
"kind" : "function",
"type" : "typeof(it[-1])()",
"line" : 155}
]
}
]
}
,
{
"name" : "begin(F)",
"kind" : "template",
"line" : 161,
"members" : [
{
"name" : "begin",
"kind" : "function",
"type" : "Iterator!(Retro!(F))(Retro!(F) range)",
"line" : 161}
]
}
,
{
"name" : "end(F)",
"kind" : "template",
"line" : 168,
"members" : [
{
"name" : "end",
"kind" : "function",
"type" : "Iterator!(Retro!(F))(Retro!(F) range)",
"line" : 168}
]
}
,
{
"name" : "rBegin(F)",
"kind" : "template",
"line" : 179,
"members" : [
{
"name" : "rBegin",
"kind" : "function",
"type" : "Iterator!(Retro!(F[]))(F[] range)",
"line" : 179}
]
}
,
{
"name" : "rEnd(F)",
"kind" : "template",
"line" : 188,
"members" : [
{
"name" : "rEnd",
"kind" : "function",
"type" : "Iterator!(Retro!(F[]))(F[] range)",
"line" : 188}
]
}
]
}
,
{
"name" : "std.json",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/json.d",
"members" : [
{
"name" : "UTFStride",
"kind" : "alias",
"line" : 27}
,
{
"name" : "toUnicode",
"kind" : "alias",
"line" : 28}
,
{
"name" : "JSON_TYPE",
"kind" : "enum",
"line" : 34,
"base" : "byte",
"members" : [
{
"name" : "STRING",
"kind" : "enum member",
"line" : 35}
,
{
"name" : "INTEGER",
"kind" : "enum member",
"line" : 36}
,
{
"name" : "FLOAT",
"kind" : "enum member",
"line" : 37}
,
{
"name" : "OBJECT",
"kind" : "enum member",
"line" : 38}
,
{
"name" : "ARRAY",
"kind" : "enum member",
"line" : 39}
,
{
"name" : "TRUE",
"kind" : "enum member",
"line" : 40}
,
{
"name" : "FALSE",
"kind" : "enum member",
"line" : 41}
,
{
"name" : "NULL",
"kind" : "enum member",
"line" : 42}
]
}
,
{
"name" : "JSONValue",
"kind" : "struct",
"line" : 48,
"members" : [
{
"name" : "str",
"kind" : "variable",
"type" : "string",
"line" : 50}
,
{
"name" : "integer",
"kind" : "variable",
"type" : "long",
"line" : 51}
,
{
"name" : "floating",
"kind" : "variable",
"type" : "real",
"line" : 52}
,
{
"name" : "object",
"kind" : "variable",
"type" : "JSONValue[string]",
"line" : 53}
,
{
"name" : "array",
"kind" : "variable",
"type" : "JSONValue[]",
"line" : 54}
,
{
"name" : "type",
"kind" : "variable",
"type" : "JSON_TYPE",
"line" : 56}
]
}
,
{
"name" : "parseJSON(T) if (isInputRange!(T))",
"kind" : "template",
"line" : 62,
"members" : [
{
"name" : "parseJSON",
"kind" : "function",
"type" : "JSONValue(T json, int maxDepth = -1)",
"line" : 62}
]
}
,
{
"name" : "toJSON",
"kind" : "function",
"type" : "string(in const(JSONValue*) root)",
"line" : 314}
,
{
"name" : "appendJSONChar",
"kind" : "function",
"type" : "void(Appender!(string)* dst, dchar c, scope void delegate(string) error)",
"line" : 394}
,
{
"name" : "JSONException",
"kind" : "class",
"line" : 418,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "JSONException(string msg, int line = 0, int pos = 0)",
"line" : 419}
]
}
]
}
,
{
"name" : "std.loader",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/loader.d",
"members" : [
{
"name" : "boolean",
"kind" : "alias",
"type" : "int",
"line" : 61}
,
{
"name" : "HModule_",
"kind" : "alias",
"type" : "void*",
"line" : 83}
,
{
"name" : "HXModule",
"kind" : "typedef",
"type" : "HXModule",
"line" : 98,
"base" : "void*"}
,
{
"name" : "ExeModule_Init",
"kind" : "function",
"type" : "int()",
"line" : 117}
,
{
"name" : "ExeModule_Uninit",
"kind" : "function",
"type" : "void()",
"line" : 122}
,
{
"name" : "ExeModule_Load",
"kind" : "function",
"type" : "HXModule(in const(immutable(char)[]) moduleName)",
"line" : 133}
,
{
"name" : "ExeModule_AddRef",
"kind" : "function",
"type" : "HXModule(HXModule hModule)",
"line" : 138}
,
{
"name" : "ExeModule_Release",
"kind" : "function",
"type" : "void(ref HXModule hModule)",
"line" : 147}
,
{
"name" : "ExeModule_GetSymbol",
"kind" : "function",
"type" : "void*(ref HXModule hModule, in const(immutable(char)[]) symbolName)",
"line" : 152}
,
{
"name" : "ExeModule_Error",
"kind" : "function",
"type" : "string()",
"line" : 157}
,
{
"name" : "ExeModuleInfo",
"kind" : "class",
"line" : 264,
"base" : "Object",
"members" : [
{
"name" : "m_cRefs",
"kind" : "variable",
"type" : "int",
"line" : 266}
,
{
"name" : "m_hmod",
"kind" : "variable",
"type" : "void*",
"line" : 267}
,
{
"name" : "m_name",
"kind" : "variable",
"type" : "string",
"line" : 268}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ExeModuleInfo(void* hmod, string name)",
"line" : 270}
]
}
,
{
"name" : "s_init",
"kind" : "variable",
"type" : "int",
"line" : 278}
,
{
"name" : "s_modules",
"kind" : "variable",
"type" : "ExeModuleInfo[string]",
"line" : 279}
,
{
"name" : "s_lastError",
"kind" : "variable",
"type" : "string",
"line" : 280}
,
{
"name" : "record_error_",
"kind" : "function",
"type" : "void()",
"line" : 282}
,
{
"name" : "ExeModule_Init_",
"kind" : "function",
"type" : "int()",
"line" : 288}
,
{
"name" : "ExeModule_Uninit_",
"kind" : "function",
"type" : "void()",
"line" : 299}
,
{
"name" : "ExeModule_Load_",
"kind" : "function",
"type" : "HXModule(in const(immutable(char)[]) moduleName)",
"line" : 306}
,
{
"name" : "ExeModule_AddRef_",
"kind" : "function",
"type" : "HXModule(HXModule hModule)",
"line" : 341}
,
{
"name" : "ExeModule_Release_",
"kind" : "function",
"type" : "void(ref HXModule hModule)",
"line" : 368}
,
{
"name" : "ExeModule_GetSymbol_",
"kind" : "function",
"type" : "void*(ref HXModule hModule, in const(immutable(char)[]) symbolName)",
"line" : 400}
,
{
"name" : "ExeModule_Error_",
"kind" : "function",
"type" : "string()",
"line" : 426}
,
{
"name" : "ExeModule_GetPath_",
"kind" : "function",
"type" : "string(HXModule hModule)",
"line" : 431}
,
{
"name" : "ExeModuleException",
"kind" : "class",
"line" : 463,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ExeModuleException(string message)",
"line" : 466}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ExeModuleException(uint errcode)",
"line" : 471}
]
}
,
{
"name" : "ExeModule",
"kind" : "class",
"line" : 487,
"base" : "Object",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ExeModule(HXModule hModule, int bTakeOwnership)",
"line" : 492}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ExeModule(string moduleName)",
"line" : 521}
,
{
"name" : "close",
"kind" : "function",
"type" : "void()",
"line" : 558}
,
{
"name" : "getSymbol",
"kind" : "function",
"type" : "void*(in const(immutable(char)[]) symbolName)",
"line" : 585}
,
{
"name" : "findSymbol",
"kind" : "function",
"type" : "void*(in const(immutable(char)[]) symbolName)",
"line" : 616}
,
{
"name" : "Handle",
"kind" : "function",
"type" : "HXModule()",
"line" : 629}
,
{
"name" : "Path",
"kind" : "function",
"type" : "string()",
"line" : 636}
,
{
"name" : "m_hModule",
"kind" : "variable",
"type" : "HXModule",
"line" : 661}
]
}
]
}
,
{
"name" : "std.math",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/math.d",
"members" : [
{
"name" : "floatTraits(T)",
"kind" : "template",
"line" : 118,
"members" : [
{
"name" : "RECIP_EPSILON",
"kind" : "variable",
"type" : "T",
"line" : 123}
]
}
,
{
"name" : "MANTISSA_LSB",
"kind" : "variable",
"type" : "int",
"line" : 195}
,
{
"name" : "MANTISSA_MSB",
"kind" : "variable",
"type" : "int",
"line" : 196}
,
{
"name" : "E",
"kind" : "variable",
"type" : "real",
"line" : 208}
,
{
"name" : "LOG2T",
"kind" : "variable",
"type" : "real",
"line" : 209}
,
{
"name" : "LOG2E",
"kind" : "variable",
"type" : "real",
"line" : 210}
,
{
"name" : "LOG2",
"kind" : "variable",
"type" : "real",
"line" : 211}
,
{
"name" : "LOG10E",
"kind" : "variable",
"type" : "real",
"line" : 212}
,
{
"name" : "LN2",
"kind" : "variable",
"type" : "real",
"line" : 213}
,
{
"name" : "LN10",
"kind" : "variable",
"type" : "real",
"line" : 214}
,
{
"name" : "PI",
"kind" : "variable",
"type" : "real",
"line" : 215}
,
{
"name" : "PI_2",
"kind" : "variable",
"type" : "real",
"line" : 216}
,
{
"name" : "PI_4",
"kind" : "variable",
"type" : "real",
"line" : 217}
,
{
"name" : "M_1_PI",
"kind" : "variable",
"type" : "real",
"line" : 218}
,
{
"name" : "M_2_PI",
"kind" : "variable",
"type" : "real",
"line" : 219}
,
{
"name" : "M_2_SQRTPI",
"kind" : "variable",
"type" : "real",
"line" : 220}
,
{
"name" : "SQRT2",
"kind" : "variable",
"type" : "real",
"line" : 221}
,
{
"name" : "SQRT1_2",
"kind" : "variable",
"type" : "real",
"line" : 222}
,
{
"name" : "abs(Num) if (is(typeof(Num.init >= 0)) && is(typeof(-Num.init)) && !(is(Num* : const(ifloat*)) || is(Num* : const(idouble*)) || is(Num* : const(ireal*))))",
"kind" : "template",
"line" : 245,
"members" : [
{
"name" : "abs",
"kind" : "function",
"type" : "pure nothrow @safe Num(Num x)",
"line" : 245}
]
}
,
{
"name" : "abs(Num) if (is(Num* : const(cfloat*)) || is(Num* : const(cdouble*)) || is(Num* : const(creal*)))",
"kind" : "template",
"line" : 256,
"members" : [
{
"name" : "abs",
"kind" : "function",
"type" : "pure nothrow @safe (Num z)",
"line" : 256}
]
}
,
{
"name" : "abs(Num) if (is(Num* : const(ifloat*)) || is(Num* : const(idouble*)) || is(Num* : const(ireal*)))",
"kind" : "template",
"line" : 264,
"members" : [
{
"name" : "abs",
"kind" : "function",
"type" : "pure nothrow @safe real(Num y)",
"line" : 264}
]
}
,
{
"name" : "conj",
"kind" : "function",
"type" : "pure nothrow @safe creal(creal z)",
"line" : 292}
,
{
"name" : "conj",
"kind" : "function",
"type" : "pure nothrow @safe ireal(ireal y)",
"line" : 298}
,
{
"name" : "cos",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 323}
,
{
"name" : "sin",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 338}
,
{
"name" : "sin",
"kind" : "function",
"type" : "pure nothrow @safe creal(creal z)",
"line" : 349}
,
{
"name" : "sin",
"kind" : "function",
"type" : "pure nothrow @safe ireal(ireal y)",
"line" : 357}
,
{
"name" : "cos",
"kind" : "function",
"type" : "pure nothrow @safe creal(creal z)",
"line" : 373}
,
{
"name" : "cos",
"kind" : "function",
"type" : "pure nothrow @safe real(ireal y)",
"line" : 381}
,
{
"name" : "tan",
"kind" : "function",
"type" : "pure nothrow @trusted real(real x)",
"line" : 403}
,
{
"name" : "acos",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 545}
,
{
"name" : "acos",
"kind" : "function",
"type" : "pure nothrow @safe double(double x)",
"line" : 551}
,
{
"name" : "acos",
"kind" : "function",
"type" : "pure nothrow @safe float(float x)",
"line" : 553}
,
{
"name" : "asin",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 566}
,
{
"name" : "asin",
"kind" : "function",
"type" : "pure nothrow @safe double(double x)",
"line" : 571}
,
{
"name" : "asin",
"kind" : "function",
"type" : "pure nothrow @safe float(float x)",
"line" : 573}
,
{
"name" : "atan",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 585}
,
{
"name" : "atan",
"kind" : "function",
"type" : "pure nothrow @safe double(double x)",
"line" : 587}
,
{
"name" : "atan",
"kind" : "function",
"type" : "pure nothrow @safe float(float x)",
"line" : 589}
,
{
"name" : "atan2",
"kind" : "function",
"type" : "pure nothrow @trusted real(real y, real x)",
"line" : 612}
,
{
"name" : "atan2",
"kind" : "function",
"type" : "pure nothrow @safe double(double y, double x)",
"line" : 629}
,
{
"name" : "atan2",
"kind" : "function",
"type" : "pure nothrow @safe float(float y, float x)",
"line" : 635}
,
{
"name" : "cosh",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 648}
,
{
"name" : "cosh",
"kind" : "function",
"type" : "pure nothrow @safe double(double x)",
"line" : 656}
,
{
"name" : "cosh",
"kind" : "function",
"type" : "pure nothrow @safe float(float x)",
"line" : 658}
,
{
"name" : "sinh",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 670}
,
{
"name" : "sinh",
"kind" : "function",
"type" : "pure nothrow @safe double(double x)",
"line" : 683}
,
{
"name" : "sinh",
"kind" : "function",
"type" : "pure nothrow @safe float(float x)",
"line" : 685}
,
{
"name" : "tanh",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 697}
,
{
"name" : "tanh",
"kind" : "function",
"type" : "pure nothrow @safe double(double x)",
"line" : 707}
,
{
"name" : "tanh",
"kind" : "function",
"type" : "pure nothrow @safe float(float x)",
"line" : 709}
,
{
"name" : "coshisinh",
"kind" : "function",
"type" : "pure nothrow @safe creal(real x)",
"line" : 715}
,
{
"name" : "acosh",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 751}
,
{
"name" : "acosh",
"kind" : "function",
"type" : "pure nothrow @safe double(double x)",
"line" : 759}
,
{
"name" : "acosh",
"kind" : "function",
"type" : "pure nothrow @safe float(float x)",
"line" : 761}
,
{
"name" : "asinh",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 788}
,
{
"name" : "asinh",
"kind" : "function",
"type" : "pure nothrow @safe double(double x)",
"line" : 797}
,
{
"name" : "asinh",
"kind" : "function",
"type" : "pure nothrow @safe float(float x)",
"line" : 799}
,
{
"name" : "atanh",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 827}
,
{
"name" : "atanh",
"kind" : "function",
"type" : "pure nothrow @safe double(double x)",
"line" : 833}
,
{
"name" : "atanh",
"kind" : "function",
"type" : "pure nothrow @safe float(float x)",
"line" : 835}
,
{
"name" : "rndtol",
"kind" : "function",
"type" : "pure nothrow @safe long(real x)",
"line" : 852}
,
{
"name" : "rndtonl",
"kind" : "function",
"type" : "realC (real x)",
"line" : 861}
,
{
"name" : "sqrt",
"kind" : "function",
"type" : "pure nothrow @safe float(float x)",
"line" : 876}
,
{
"name" : "sqrt",
"kind" : "function",
"type" : "pure nothrow @safe double(double x)",
"line" : 877}
,
{
"name" : "sqrt",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 878}
,
{
"name" : "sqrt",
"kind" : "function",
"type" : "pure nothrow @trusted real(byte x)",
"line" : 886}
,
{
"name" : "sqrt",
"kind" : "function",
"type" : "pure nothrow @trusted real(ubyte x)",
"line" : 887}
,
{
"name" : "sqrt",
"kind" : "function",
"type" : "pure nothrow @trusted real(short x)",
"line" : 888}
,
{
"name" : "sqrt",
"kind" : "function",
"type" : "pure nothrow @trusted real(ushort x)",
"line" : 889}
,
{
"name" : "sqrt",
"kind" : "function",
"type" : "pure nothrow @trusted real(int x)",
"line" : 890}
,
{
"name" : "sqrt",
"kind" : "function",
"type" : "pure nothrow @trusted real(uint x)",
"line" : 891}
,
{
"name" : "sqrt",
"kind" : "function",
"type" : "pure nothrow @trusted real(long x)",
"line" : 892}
,
{
"name" : "sqrt",
"kind" : "function",
"type" : "pure nothrow @trusted real(ulong x)",
"line" : 893}
,
{
"name" : "sqrt",
"kind" : "function",
"type" : "pure nothrow @safe creal(creal z)",
"line" : 906}
,
{
"name" : "exp",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 957}
,
{
"name" : "exp",
"kind" : "function",
"type" : "pure nothrow @safe double(double x)",
"line" : 977}
,
{
"name" : "exp",
"kind" : "function",
"type" : "pure nothrow @safe float(float x)",
"line" : 979}
,
{
"name" : "expm1",
"kind" : "function",
"type" : "pure nothrow @trusted real(real x)",
"line" : 997}
,
{
"name" : "exp2",
"kind" : "function",
"type" : "pure nothrow @trusted real(real x)",
"line" : 1155}
,
{
"name" : "expi",
"kind" : "function",
"type" : "pure nothrow @trusted creal(real y)",
"line" : 1405}
,
{
"name" : "frexp",
"kind" : "function",
"type" : "pure nothrow @trusted real(real value, out int exp)",
"line" : 1446}
,
{
"name" : "ilogb",
"kind" : "function",
"type" : "nothrow @trusted int(real x)",
"line" : 1604}
,
{
"name" : "FP_ILOGB0",
"kind" : "alias",
"line" : 1606}
,
{
"name" : "FP_ILOGBNAN",
"kind" : "alias",
"line" : 1607}
,
{
"name" : "ldexp",
"kind" : "function",
"type" : "pure nothrow @safe real(real n, int exp)",
"line" : 1615}
,
{
"name" : "log",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 1639}
,
{
"name" : "log10",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 1663}
,
{
"name" : "log1p",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 1692}
,
{
"name" : "log2",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 1717}
,
{
"name" : "logb",
"kind" : "function",
"type" : "nothrow @trusted real(real x)",
"line" : 1739}
,
{
"name" : "modf",
"kind" : "function",
"type" : "nothrow @trusted real(real x, ref real y)",
"line" : 1755}
,
{
"name" : "scalbn",
"kind" : "function",
"type" : "nothrow @trusted real(real x, int n)",
"line" : 1769}
,
{
"name" : "cbrt",
"kind" : "function",
"type" : "nothrow @trusted real(real x)",
"line" : 1798}
,
{
"name" : "fabs",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 1810}
,
{
"name" : "hypot",
"kind" : "function",
"type" : "pure nothrow @safe real(real x, real y)",
"line" : 1832}
,
{
"name" : "erf",
"kind" : "function",
"type" : "nothrow @trusted real(real x)",
"line" : 1918}
,
{
"name" : "erfc",
"kind" : "function",
"type" : "nothrow @trusted real(real x)",
"line" : 1925}
,
{
"name" : "lgamma",
"kind" : "function",
"type" : "nothrow @trusted real(real x)",
"line" : 1942}
,
{
"name" : "tgamma",
"kind" : "function",
"type" : "nothrow @trusted real(real x)",
"line" : 1973}
,
{
"name" : "ceil",
"kind" : "function",
"type" : "nothrow @trusted real(real x)",
"line" : 1984}
,
{
"name" : "floor",
"kind" : "function",
"type" : "nothrow @trusted real(real x)",
"line" : 1990}
,
{
"name" : "nearbyint",
"kind" : "function",
"type" : "nothrow @trusted real(real x)",
"line" : 1999}
,
{
"name" : "rint",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 2009}
,
{
"name" : "lrint",
"kind" : "function",
"type" : "pure nothrow @trusted long(real x)",
"line" : 2021}
,
{
"name" : "round",
"kind" : "function",
"type" : "nothrow @trusted real(real x)",
"line" : 2042}
,
{
"name" : "lround",
"kind" : "function",
"type" : "nothrow @trusted long(real x)",
"line" : 2050}
,
{
"name" : "trunc",
"kind" : "function",
"type" : "nothrow @trusted real(real x)",
"line" : 2073}
,
{
"name" : "remainder",
"kind" : "function",
"type" : "nothrow @trusted real(real x, real y)",
"line" : 2097}
,
{
"name" : "remquo",
"kind" : "function",
"type" : "nothrow @trusted real(real x, real y, out int n)",
"line" : 2099}
,
{
"name" : "IeeeFlags",
"kind" : "struct",
"line" : 2139,
"members" : [
{
"name" : "flags",
"kind" : "variable",
"type" : "uint",
"line" : 2143}
,
{
"name" : "INEXACT_MASK",
"kind" : "enum member",
"line" : 2147}
,
{
"name" : "UNDERFLOW_MASK",
"kind" : "enum member",
"line" : 2148}
,
{
"name" : "OVERFLOW_MASK",
"kind" : "enum member",
"line" : 2149}
,
{
"name" : "DIVBYZERO_MASK",
"kind" : "enum member",
"line" : 2150}
,
{
"name" : "INVALID_MASK",
"kind" : "enum member",
"line" : 2151}
,
{
"name" : "getIeeeFlags",
"kind" : "function",
"type" : "uint()",
"line" : 2176}
,
{
"name" : "resetIeeeFlags",
"kind" : "function",
"type" : "void()",
"line" : 2204}
,
{
"name" : "inexact",
"kind" : "function",
"type" : "@property bool()",
"line" : 2223}
,
{
"name" : "underflow",
"kind" : "function",
"type" : "@property bool()",
"line" : 2225}
,
{
"name" : "overflow",
"kind" : "function",
"type" : "@property bool()",
"line" : 2227}
,
{
"name" : "divByZero",
"kind" : "function",
"type" : "@property bool()",
"line" : 2229}
,
{
"name" : "invalid",
"kind" : "function",
"type" : "@property bool()",
"line" : 2231}
]
}
,
{
"name" : "resetIeeeFlags",
"kind" : "function",
"type" : "void()",
"line" : 2236}
,
{
"name" : "ieeeFlags",
"kind" : "function",
"type" : "@property IeeeFlags()",
"line" : 2239}
,
{
"name" : "FloatingPointControl",
"kind" : "struct",
"line" : 2281,
"members" : [
{
"name" : "RoundingMode",
"kind" : "alias",
"type" : "uint",
"line" : 2282}
,
{
"name" : "roundToNearest",
"kind" : "enum member",
"line" : 2289}
,
{
"name" : "roundDown",
"kind" : "enum member",
"line" : 2290}
,
{
"name" : "roundUp",
"kind" : "enum member",
"line" : 2291}
,
{
"name" : "roundToZero",
"kind" : "enum member",
"line" : 2292}
,
{
"name" : "inexactException",
"kind" : "enum member",
"line" : 2299}
,
{
"name" : "underflowException",
"kind" : "enum member",
"line" : 2300}
,
{
"name" : "overflowException",
"kind" : "enum member",
"line" : 2301}
,
{
"name" : "divByZeroException",
"kind" : "enum member",
"line" : 2302}
,
{
"name" : "subnormalException",
"kind" : "enum member",
"line" : 2303}
,
{
"name" : "invalidException",
"kind" : "enum member",
"line" : 2304}
,
{
"name" : "severeExceptions",
"kind" : "enum member",
"line" : 2306}
,
{
"name" : "allExceptions",
"kind" : "enum member",
"line" : 2308}
,
{
"name" : "EXCEPTION_MASK",
"kind" : "variable",
"type" : "ushort",
"line" : 2312}
,
{
"name" : "ROUNDING_MASK",
"kind" : "variable",
"type" : "ushort",
"line" : 2313}
,
{
"name" : "enableExceptions",
"kind" : "function",
"type" : "void(uint exceptions)",
"line" : 2316}
,
{
"name" : "disableExceptions",
"kind" : "function",
"type" : "void(uint exceptions)",
"line" : 2322}
,
{
"name" : "rounding",
"kind" : "function",
"type" : "@property void(uint newMode)",
"line" : 2328}
,
{
"name" : "enabledExceptions",
"kind" : "function",
"type" : "@property uint()",
"line" : 2334}
,
{
"name" : "rounding",
"kind" : "function",
"type" : "@property uint()",
"line" : 2339}
,
{
"name" : "savedState",
"kind" : "variable",
"type" : "ushort",
"line" : 2350}
,
{
"name" : "initialized",
"kind" : "variable",
"type" : "bool",
"line" : 2352}
,
{
"name" : "initialize",
"kind" : "function",
"type" : "void()",
"line" : 2353}
,
{
"name" : "clearExceptions",
"kind" : "function",
"type" : "void()",
"line" : 2362}
,
{
"name" : "getControlState",
"kind" : "function",
"type" : "ushort()",
"line" : 2375}
,
{
"name" : "setControlState",
"kind" : "function",
"type" : "void(ushort newState)",
"line" : 2402}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "ref FloatingPointControl(FloatingPointControl p)",
"line" : 2281}
]
}
,
{
"name" : "isNaN",
"kind" : "function",
"type" : "pure nothrow @trusted bool(real x)",
"line" : 2440}
,
{
"name" : "isFinite",
"kind" : "function",
"type" : "pure nothrow @trusted int(real e)",
"line" : 2477}
,
{
"name" : "isNormal(X)",
"kind" : "template",
"line" : 2500,
"members" : [
{
"name" : "isNormal",
"kind" : "function",
"type" : "pure nothrow @trusted int(X x)",
"line" : 2500}
]
}
,
{
"name" : "isSubnormal",
"kind" : "function",
"type" : "pure nothrow @trusted int(float f)",
"line" : 2542}
,
{
"name" : "isSubnormal",
"kind" : "function",
"type" : "pure nothrow @trusted int(double d)",
"line" : 2558}
,
{
"name" : "isSubnormal",
"kind" : "function",
"type" : "pure nothrow @trusted int(real x)",
"line" : 2575}
,
{
"name" : "isInfinity",
"kind" : "function",
"type" : "pure nothrow @trusted bool(real x)",
"line" : 2607}
,
{
"name" : "isIdentical",
"kind" : "function",
"type" : "pure nothrow @trusted bool(real x, real y)",
"line" : 2645}
,
{
"name" : "signbit",
"kind" : "function",
"type" : "pure nothrow @trusted int(real x)",
"line" : 2671}
,
{
"name" : "copysign",
"kind" : "function",
"type" : "pure nothrow @trusted real(real to, real from)",
"line" : 2693}
,
{
"name" : "sgn(F)",
"kind" : "template",
"line" : 2728,
"members" : [
{
"name" : "sgn",
"kind" : "function",
"type" : "pure nothrow @safe F(F x)",
"line" : 2728}
]
}
,
{
"name" : "NaN",
"kind" : "function",
"type" : "pure nothrow @trusted real(ulong payload)",
"line" : 2757}
,
{
"name" : "getNaNPayload",
"kind" : "function",
"type" : "pure nothrow @trusted ulong(real x)",
"line" : 2817}
,
{
"name" : "nextUp",
"kind" : "function",
"type" : "pure nothrow @trusted real(real x)",
"line" : 2880}
,
{
"name" : "nextUp",
"kind" : "function",
"type" : "pure nothrow @trusted double(double x)",
"line" : 2951}
,
{
"name" : "nextUp",
"kind" : "function",
"type" : "pure nothrow @trusted float(float x)",
"line" : 2973}
,
{
"name" : "nextDown",
"kind" : "function",
"type" : "pure nothrow @safe real(real x)",
"line" : 3009}
,
{
"name" : "nextDown",
"kind" : "function",
"type" : "pure nothrow @safe double(double x)",
"line" : 3015}
,
{
"name" : "nextDown",
"kind" : "function",
"type" : "pure nothrow @safe float(float x)",
"line" : 3021}
,
{
"name" : "nextafter(T)",
"kind" : "template",
"line" : 3111,
"members" : [
{
"name" : "nextafter",
"kind" : "function",
"type" : "pure nothrow @safe T(T x, T y)",
"line" : 3111}
]
}
,
{
"name" : "fdim",
"kind" : "function",
"type" : "pure nothrow @safe real(real x, real y)",
"line" : 3143}
,
{
"name" : "fmax",
"kind" : "function",
"type" : "pure nothrow @safe real(real x, real y)",
"line" : 3148}
,
{
"name" : "fmin",
"kind" : "function",
"type" : "pure nothrow @safe real(real x, real y)",
"line" : 3153}
,
{
"name" : "fma",
"kind" : "function",
"type" : "pure nothrow @safe real(real x, real y, real z)",
"line" : 3161}
,
{
"name" : "pow(F,G) if (isFloatingPoint!(F) && isIntegral!(G))",
"kind" : "template",
"line" : 3166,
"members" : [
{
"name" : "pow",
"kind" : "function",
"type" : "pure nothrow @trusted Unqual!(F)(F x, G n)",
"line" : 3166}
]
}
,
{
"name" : "pow(F,G) if (isIntegral!(F) && isIntegral!(G))",
"kind" : "template",
"line" : 3251,
"members" : [
{
"name" : "pow",
"kind" : "function",
"type" : "pure nothrow @trusted typeof(Unqual!(F).init * Unqual!(G).init)(F x, G n)",
"line" : 3251}
]
}
,
{
"name" : "pow(I,F) if (isIntegral!(I) && isFloatingPoint!(F))",
"kind" : "template",
"line" : 3306,
"members" : [
{
"name" : "pow",
"kind" : "function",
"type" : "pure nothrow @trusted real(I x, F y)",
"line" : 3306}
]
}
,
{
"name" : "pow(F,G) if (isFloatingPoint!(F) && isFloatingPoint!(G))",
"kind" : "template",
"line" : 3355,
"members" : [
{
"name" : "pow",
"kind" : "function",
"type" : "pure nothrow @trusted Unqual!(Largest!(F,G))(F x, G y)",
"line" : 3355}
]
}
,
{
"name" : "feqrel(X) if (isFloatingPoint!(X))",
"kind" : "template",
"line" : 3549,
"members" : [
{
"name" : "feqrel",
"kind" : "function",
"type" : "pure nothrow @trusted int(X x, X y)",
"line" : 3549}
]
}
,
{
"name" : "ieeeMean(T)",
"kind" : "template",
"line" : 3678,
"members" : [
{
"name" : "ieeeMean",
"kind" : "function",
"type" : "pure nothrow @trusted T(T x, T y)",
"line" : 3678}
]
}
,
{
"name" : "poly",
"kind" : "function",
"type" : "pure nothrow @trusted real(real x, const const(real[]) A)",
"line" : 3794}
,
{
"name" : "approxEqual(T,U,V)",
"kind" : "template",
"line" : 3952,
"members" : [
{
"name" : "approxEqual",
"kind" : "function",
"type" : "bool(T lhs, U rhs, V maxRelDiff, V maxAbsDiff = 1e-05)",
"line" : 3952}
]
}
,
{
"name" : "approxEqual(T,U)",
"kind" : "template",
"line" : 4007,
"members" : [
{
"name" : "approxEqual",
"kind" : "function",
"type" : "bool(T lhs, U rhs)",
"line" : 4007}
]
}
,
{
"name" : "isnan",
"kind" : "alias",
"line" : 4029}
,
{
"name" : "isfinite",
"kind" : "alias",
"line" : 4030}
,
{
"name" : "isnormal",
"kind" : "alias",
"line" : 4031}
,
{
"name" : "issubnormal",
"kind" : "alias",
"line" : 4032}
,
{
"name" : "isinf",
"kind" : "alias",
"line" : 4033}
,
{
"name" : "yl2x",
"kind" : "function",
"type" : "pure nothrow @safe real(real x, real y)",
"line" : 4040}
,
{
"name" : "yl2xp1",
"kind" : "function",
"type" : "pure nothrow @safe real(real x, real y)",
"line" : 4041}
]
}
,
{
"name" : "std.mathspecial",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/mathspecial.d",
"members" : [
{
"name" : "gamma",
"kind" : "function",
"type" : "real(real x)",
"line" : 85}
,
{
"name" : "logGamma",
"kind" : "function",
"type" : "real(real x)",
"line" : 104}
,
{
"name" : "sgnGamma",
"kind" : "function",
"type" : "real(real x)",
"line" : 117}
,
{
"name" : "beta",
"kind" : "function",
"type" : "real(real x, real y)",
"line" : 149}
,
{
"name" : "digamma",
"kind" : "function",
"type" : "real(real x)",
"line" : 167}
,
{
"name" : "betaIncomplete",
"kind" : "function",
"type" : "real(real a, real b, real x)",
"line" : 192}
,
{
"name" : "betaIncompleteInverse",
"kind" : "function",
"type" : "real(real a, real b, real y)",
"line" : 205}
,
{
"name" : "gammaIncomplete",
"kind" : "function",
"type" : "real(real a, real x)",
"line" : 224}
,
{
"name" : "gammaIncompleteCompl",
"kind" : "function",
"type" : "real(real a, real x)",
"line" : 234}
,
{
"name" : "gammaIncompleteComplInverse",
"kind" : "function",
"type" : "real(real a, real x)",
"line" : 249}
,
{
"name" : "erf",
"kind" : "function",
"type" : "real(real x)",
"line" : 273}
,
{
"name" : "erfc",
"kind" : "function",
"type" : "real(real x)",
"line" : 287}
,
{
"name" : "normalDistribution",
"kind" : "function",
"type" : "real(real x)",
"line" : 310}
,
{
"name" : "normalDistributionInverse",
"kind" : "function",
"type" : "real(real p)",
"line" : 321}
]
}
,
{
"name" : "std.md5",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/md5.d",
"members" : [
{
"name" : "sum",
"kind" : "function",
"type" : "void(ref ubyte[16LU] digest, in const(void[][]) data...)",
"line" : 100}
,
{
"name" : "digestToString",
"kind" : "function",
"type" : "string(in const(ubyte[16LU]) digest)",
"line" : 124}
,
{
"name" : "getDigestString",
"kind" : "function",
"type" : "string(in const(void[][]) data...)",
"line" : 149}
,
{
"name" : "MD5_CTX",
"kind" : "struct",
"line" : 176,
"members" : [
{
"name" : "state",
"kind" : "variable",
"type" : "uint[4LU]",
"line" : 177}
,
{
"name" : "count",
"kind" : "variable",
"type" : "ulong",
"line" : 181}
,
{
"name" : "buffer",
"kind" : "variable",
"type" : "ubyte[64LU]",
"line" : 182}
,
{
"name" : "PADDING",
"kind" : "variable",
"type" : "ubyte[64LU]",
"line" : 184}
,
{
"name" : "F",
"kind" : "function",
"type" : "uint(uint x, uint y, uint z)",
"line" : 195}
,
{
"name" : "G",
"kind" : "function",
"type" : "uint(uint x, uint y, uint z)",
"line" : 196}
,
{
"name" : "H",
"kind" : "function",
"type" : "uint(uint x, uint y, uint z)",
"line" : 197}
,
{
"name" : "I",
"kind" : "function",
"type" : "uint(uint x, uint y, uint z)",
"line" : 198}
,
{
"name" : "ROTATE_LEFT",
"kind" : "function",
"type" : "uint(uint x, uint n)",
"line" : 203}
,
{
"name" : "FF",
"kind" : "function",
"type" : "void(ref uint a, uint b, uint c, uint d, uint x, uint s, uint ac)",
"line" : 224}
,
{
"name" : "GG",
"kind" : "function",
"type" : "void(ref uint a, uint b, uint c, uint d, uint x, uint s, uint ac)",
"line" : 231}
,
{
"name" : "HH",
"kind" : "function",
"type" : "void(ref uint a, uint b, uint c, uint d, uint x, uint s, uint ac)",
"line" : 238}
,
{
"name" : "II",
"kind" : "function",
"type" : "void(ref uint a, uint b, uint c, uint d, uint x, uint s, uint ac)",
"line" : 245}
,
{
"name" : "start",
"kind" : "function",
"type" : "void()",
"line" : 255}
,
{
"name" : "update",
"kind" : "function",
"type" : "void(const const(void[]) input)",
"line" : 264}
,
{
"name" : "finish",
"kind" : "function",
"type" : "void(ref ubyte[16LU] digest)",
"line" : 299}
,
{
"name" : "S11",
"kind" : "enum member",
"line" : 331}
,
{
"name" : "S12",
"kind" : "enum member",
"line" : 332}
,
{
"name" : "S13",
"kind" : "enum member",
"line" : 333}
,
{
"name" : "S14",
"kind" : "enum member",
"line" : 334}
,
{
"name" : "S21",
"kind" : "enum member",
"line" : 335}
,
{
"name" : "S22",
"kind" : "enum member",
"line" : 336}
,
{
"name" : "S23",
"kind" : "enum member",
"line" : 337}
,
{
"name" : "S24",
"kind" : "enum member",
"line" : 338}
,
{
"name" : "S31",
"kind" : "enum member",
"line" : 339}
,
{
"name" : "S32",
"kind" : "enum member",
"line" : 340}
,
{
"name" : "S33",
"kind" : "enum member",
"line" : 341}
,
{
"name" : "S34",
"kind" : "enum member",
"line" : 342}
,
{
"name" : "S41",
"kind" : "enum member",
"line" : 343}
,
{
"name" : "S42",
"kind" : "enum member",
"line" : 344}
,
{
"name" : "S43",
"kind" : "enum member",
"line" : 345}
,
{
"name" : "S44",
"kind" : "enum member",
"line" : 346}
,
{
"name" : "transform",
"kind" : "function",
"type" : "void(ubyte* block)",
"line" : 349}
,
{
"name" : "Encode",
"kind" : "function",
"type" : "void(ubyte* output, const const(uint*) input, uint len)",
"line" : 443}
,
{
"name" : "Decode",
"kind" : "function",
"type" : "void(uint* output, const const(ubyte*) input, uint len)",
"line" : 460}
]
}
]
}
,
{
"name" : "std.metastrings",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/metastrings.d",
"members" : [
{
"name" : "Format(A...)",
"kind" : "template",
"line" : 48,
"members" : [
]
}
,
{
"name" : "FormatString(const(char)[] F,A...)",
"kind" : "template",
"line" : 58,
"members" : [
]
}
,
{
"name" : "toStringNow(ulong v)",
"kind" : "template",
"line" : 86,
"members" : [
]
}
,
{
"name" : "toStringNow(long v)",
"kind" : "template",
"line" : 100,
"members" : [
]
}
,
{
"name" : "toStringNow(uint U)",
"kind" : "template",
"line" : 115,
"members" : [
{
"name" : "toStringNow",
"kind" : "variable",
"line" : 117}
]
}
,
{
"name" : "toStringNow(int I)",
"kind" : "template",
"line" : 121,
"members" : [
{
"name" : "toStringNow",
"kind" : "variable",
"line" : 123}
]
}
,
{
"name" : "toStringNow(bool B)",
"kind" : "template",
"line" : 127,
"members" : [
{
"name" : "toStringNow",
"kind" : "variable",
"line" : 129}
]
}
,
{
"name" : "toStringNow(string S)",
"kind" : "template",
"line" : 133,
"members" : [
{
"name" : "toStringNow",
"kind" : "variable",
"line" : 135}
]
}
,
{
"name" : "toStringNow(char C)",
"kind" : "template",
"line" : 139,
"members" : [
{
"name" : "toStringNow",
"kind" : "variable",
"line" : 141}
]
}
,
{
"name" : "parseUinteger(const(char)[] s)",
"kind" : "template",
"line" : 155,
"members" : [
]
}
,
{
"name" : "parseInteger(const(char)[] s)",
"kind" : "template",
"line" : 187,
"members" : [
]
}
,
{
"name" : "ToString",
"kind" : "alias",
"line" : 223}
,
{
"name" : "ParseUinteger",
"kind" : "alias",
"line" : 225}
,
{
"name" : "ParseInteger",
"kind" : "alias",
"line" : 227}
]
}
,
{
"name" : "std.mmfile",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/mmfile.d",
"members" : [
{
"name" : "MmFile",
"kind" : "class",
"line" : 61,
"base" : "Object",
"members" : [
{
"name" : "Mode",
"kind" : "enum",
"line" : 66,
"base" : "int",
"members" : [
{
"name" : "Read",
"kind" : "enum member",
"line" : 67}
,
{
"name" : "ReadWriteNew",
"kind" : "enum member",
"line" : 68}
,
{
"name" : "ReadWrite",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "ReadCopyOnWrite",
"kind" : "enum member",
"line" : 70}
]
}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "MmFile(string filename)",
"line" : 79}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "MmFile(File file, Mode mode = cast(Mode)0, ulong size = cast(ulong)0, void* address = null, ulong window = cast(ulong)0)",
"line" : 84}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "MmFile(int fildes, Mode mode, ulong size, void* address, ulong window)",
"line" : 90}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "MmFile(string filename, Mode mode, ulong size, void* address, ulong window = cast(ulong)0)",
"line" : 173}
,
{
"name" : "flush",
"kind" : "function",
"type" : "void()",
"line" : 426}
,
{
"name" : "length",
"kind" : "function",
"type" : "@property ulong()",
"line" : 448}
,
{
"name" : "mode",
"kind" : "function",
"type" : "Mode()",
"line" : 457}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "void[]()",
"line" : 466}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "void[](ulong i1, ulong i2)",
"line" : 475}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "ubyte(ulong i)",
"line" : 487}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "ubyte(ubyte value, ulong i)",
"line" : 498}
,
{
"name" : "mapped",
"kind" : "function",
"type" : "int(ulong i)",
"line" : 508}
,
{
"name" : "unmap",
"kind" : "function",
"type" : "void()",
"line" : 516}
,
{
"name" : "map",
"kind" : "function",
"type" : "void(ulong start, ulong len)",
"line" : 533}
,
{
"name" : "ensureMapped",
"kind" : "function",
"type" : "void(ulong i)",
"line" : 552}
,
{
"name" : "ensureMapped",
"kind" : "function",
"type" : "void(ulong i, ulong j)",
"line" : 570}
,
{
"name" : "filename",
"kind" : "variable",
"type" : "string",
"line" : 590}
,
{
"name" : "data",
"kind" : "variable",
"type" : "void[]",
"line" : 591}
,
{
"name" : "start",
"kind" : "variable",
"type" : "ulong",
"line" : 592}
,
{
"name" : "window",
"kind" : "variable",
"type" : "ulong",
"line" : 593}
,
{
"name" : "size",
"kind" : "variable",
"type" : "ulong",
"line" : 594}
,
{
"name" : "mMode",
"kind" : "variable",
"type" : "Mode",
"line" : 595}
,
{
"name" : "address",
"kind" : "variable",
"type" : "void*",
"line" : 596}
,
{
"name" : "fd",
"kind" : "variable",
"type" : "int",
"line" : 606}
,
{
"name" : "prot",
"kind" : "variable",
"type" : "int",
"line" : 607}
,
{
"name" : "flags",
"kind" : "variable",
"type" : "int",
"line" : 608}
,
{
"name" : "fmode",
"kind" : "variable",
"type" : "int",
"line" : 609}
]
}
]
}
,
{
"name" : "std.numeric",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/numeric.d",
"members" : [
{
"name" : "CustomFloatFlags",
"kind" : "enum",
"line" : 51,
"base" : "int",
"members" : [
{
"name" : "signed",
"kind" : "enum member",
"line" : 54}
,
{
"name" : "storeNormalized",
"kind" : "enum member",
"line" : 62}
,
{
"name" : "allowDenorm",
"kind" : "enum member",
"line" : 68}
,
{
"name" : "infinity",
"kind" : "enum member",
"line" : 71}
,
{
"name" : "nan",
"kind" : "enum member",
"line" : 74}
,
{
"name" : "probability",
"kind" : "enum member",
"line" : 81}
,
{
"name" : "negativeUnsigned",
"kind" : "enum member",
"line" : 84}
,
{
"name" : "allowDenormZeroOnly",
"kind" : "enum member",
"line" : 89}
,
{
"name" : "ieee",
"kind" : "enum member",
"line" : 92}
,
{
"name" : "none",
"kind" : "enum member",
"line" : 95}
]
}
,
{
"name" : "bsr64",
"kind" : "function",
"type" : "int(ulong value)",
"line" : 99}
,
{
"name" : "CustomFloat(uint bits) if (bits == 8 || bits == 16 || bits == 32 || bits == 64 || bits == 80)",
"kind" : "template",
"line" : 141,
"members" : [
]
}
,
{
"name" : "CustomFloat(uint precision,uint exponentWidth,CustomFloatFlags flags = CustomFloatFlags.ieee) if (((flags & flags.signed) + precision + exponentWidth) % 8 == 0 && precision + exponentWidth > 0)",
"kind" : "template",
"line" : 151,
"members" : [
{
"name" : "CustomFloat",
"kind" : "alias",
"type" : "CustomFloat!(precision,exponentWidth,flags,(1 << exponentWidth - ((flags & flags.probability) == 0)) - ((flags & (flags.nan | flags.infinity)) != 0) - ((flags & flags.probability) != 0))",
"line" : 157}
]
}
,
{
"name" : "CustomFloat(uint precision,uint exponentWidth,CustomFloatFlags flags,uint bias) if (((flags & flags.signed) + precision + exponentWidth) % 8 == 0 && precision + exponentWidth > 0)",
"kind" : "struct",
"line" : 167,
"members" : [
{
"name" : "CustomFloat",
"kind" : "struct",
"line" : 167,
"members" : [
{
"name" : "uType(uint bits)",
"kind" : "template",
"line" : 170,
"members" : [
]
}
,
{
"name" : "sType(uint bits)",
"kind" : "template",
"line" : 176,
"members" : [
]
}
,
{
"name" : "T_sig",
"kind" : "alias",
"type" : "uType!(precision)",
"line" : 181}
,
{
"name" : "T_exp",
"kind" : "alias",
"type" : "uType!(exponentWidth)",
"line" : 182}
,
{
"name" : "T_signed_exp",
"kind" : "alias",
"type" : "sType!(exponentWidth)",
"line" : 183}
,
{
"name" : "Flags",
"kind" : "alias",
"type" : "CustomFloatFlags",
"line" : 185}
,
{
"name" : "ToBinary(F) if (is(CustomFloat!(F.sizeof * 8)) || is(F == real))",
"kind" : "union",
"line" : 188,
"members" : [
{
"name" : "ToBinary",
"kind" : "union",
"line" : 188,
"members" : [
{
"name" : "set",
"kind" : "variable",
"type" : "F",
"line" : 189}
,
{
"name" : "get",
"kind" : "variable",
"type" : "CustomFloat!(min(F.sizeof * 8,80))",
"line" : 193}
,
{
"name" : "opCall",
"kind" : "function",
"type" : "typeof(get)(F value)",
"line" : 196}
]
}
]
}
,
{
"name" : "roundedShift(T,U)",
"kind" : "template",
"line" : 205,
"members" : [
{
"name" : "roundedShift",
"kind" : "function",
"type" : "void(ref T sig, U shift)",
"line" : 205}
]
}
,
{
"name" : "toNormalized(T,U)",
"kind" : "template",
"line" : 219,
"members" : [
{
"name" : "toNormalized",
"kind" : "function",
"type" : "void(ref T sig, ref U exp)",
"line" : 219}
]
}
,
{
"name" : "fromNormalized(T,U)",
"kind" : "template",
"line" : 253,
"members" : [
{
"name" : "fromNormalized",
"kind" : "function",
"type" : "void(ref T sig, ref U exp)",
"line" : 253}
]
}
,
{
"name" : "dig",
"kind" : "function",
"type" : "size_t()",
"line" : 370}
,
{
"name" : "epsilon",
"kind" : "function",
"type" : "CustomFloat()",
"line" : 375}
,
{
"name" : "mant_dig",
"kind" : "variable",
"line" : 394}
,
{
"name" : "max_10_exp",
"kind" : "function",
"type" : "int()",
"line" : 397}
,
{
"name" : "max_exp",
"kind" : "variable",
"line" : 400}
,
{
"name" : "min_10_exp",
"kind" : "function",
"type" : "int()",
"line" : 403}
,
{
"name" : "min_exp",
"kind" : "variable",
"line" : 406}
,
{
"name" : "max",
"kind" : "function",
"type" : "CustomFloat()",
"line" : 409}
,
{
"name" : "min_normal",
"kind" : "function",
"type" : "CustomFloat()",
"line" : 419}
,
{
"name" : "re",
"kind" : "function",
"type" : "CustomFloat()",
"line" : 432}
,
{
"name" : "im",
"kind" : "function",
"type" : "CustomFloat()",
"line" : 435}
,
{
"name" : "__ctor(F) if (__traits(compiles,cast(real)input))",
"kind" : "template",
"line" : 438,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(F input)",
"line" : 438}
]
}
,
{
"name" : "opAssign(F : CustomFloat)",
"kind" : "template",
"line" : 441,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(F input)",
"line" : 441}
]
}
,
{
"name" : "opAssign(F) if (__traits(compiles,cast(real)input))",
"kind" : "template",
"line" : 449,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(F input)",
"line" : 449}
]
}
,
{
"name" : "get(F) if (staticIndexOf!(Unqual!(F),float,double,real) >= 0)",
"kind" : "template",
"line" : 481,
"members" : [
{
"name" : "get",
"kind" : "function",
"type" : "F()",
"line" : 481}
]
}
,
{
"name" : "opCast(T) if (__traits(compiles,get!(T)))",
"kind" : "template",
"line" : 500,
"members" : [
{
"name" : "opCast",
"kind" : "function",
"type" : "T()",
"line" : 500}
]
}
,
{
"name" : "opUnary(string op) if (__traits(compiles,mixin(op ~ \"(get!real)\")) || op == \"++\" || op == \"--\")",
"kind" : "template",
"line" : 503,
"members" : [
{
"name" : "opUnary",
"kind" : "function",
"type" : "real()",
"line" : 503}
]
}
,
{
"name" : "opBinary(string op,T) if (__traits(compiles,mixin(\"get!real\" ~ op ~ \"b\")))",
"kind" : "template",
"line" : 513,
"members" : [
{
"name" : "opBinary",
"kind" : "function",
"type" : "real(T b)",
"line" : 513}
]
}
,
{
"name" : "opBinaryRight(string op,T) if (__traits(compiles,mixin(\"a\" ~ op ~ \"get!real\")) && !__traits(compiles,mixin(\"get!real\" ~ op ~ \"b\")))",
"kind" : "template",
"line" : 518,
"members" : [
{
"name" : "opBinaryRight",
"kind" : "function",
"type" : "real(T a)",
"line" : 518}
]
}
,
{
"name" : "opCmp(T) if (__traits(compiles,cast(real)b))",
"kind" : "template",
"line" : 524,
"members" : [
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(auto ref T b)",
"line" : 524}
]
}
,
{
"name" : "opOpAssign(string op,T) if (__traits(compiles,mixin(\"get!real\" ~ op ~ \"cast(real)b\")))",
"kind" : "template",
"line" : 531,
"members" : [
{
"name" : "opOpAssign",
"kind" : "function",
"type" : "void(auto ref T b)",
"line" : 531}
]
}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 536}
]
}
]
}
,
{
"name" : "FPTemporary(F) if (isFloatingPoint!(F))",
"kind" : "template",
"line" : 610,
"members" : [
{
"name" : "FPTemporary",
"kind" : "alias",
"type" : "real",
"line" : 612}
]
}
,
{
"name" : "secantMethod(alias fun)",
"kind" : "template",
"line" : 631,
"members" : [
{
"name" : "secantMethod(Num)",
"kind" : "template",
"line" : 633,
"members" : [
{
"name" : "secantMethod",
"kind" : "function",
"type" : "Num(Num xn_1, Num xn)",
"line" : 633}
]
}
]
}
,
{
"name" : "oppositeSigns(T)",
"kind" : "template",
"line" : 664,
"members" : [
{
"name" : "oppositeSigns",
"kind" : "function",
"type" : "bool(T a, T b)",
"line" : 664}
]
}
,
{
"name" : "findRoot(T,R)",
"kind" : "template",
"line" : 695,
"members" : [
{
"name" : "findRoot",
"kind" : "function",
"type" : "T(R delegate(T) f, T a, T b)",
"line" : 695}
]
}
,
{
"name" : "findRoot(T,R)",
"kind" : "template",
"line" : 735,
"members" : [
{
"name" : "findRoot",
"kind" : "function",
"type" : "Tuple!(T,T,R,R)(R delegate(T) f, T ax, T bx, R fax, R fbx, bool delegate(T lo, T hi) tolerance)",
"line" : 735}
]
}
,
{
"name" : "euclideanDistance(Range1,Range2) if (isInputRange!(Range1) && isInputRange!(Range2))",
"kind" : "template",
"line" : 1168,
"members" : [
{
"name" : "euclideanDistance",
"kind" : "function",
"type" : "CommonType!(ElementType!(Range1),ElementType!(Range2))(Range1 a, Range2 b)",
"line" : 1168}
]
}
,
{
"name" : "euclideanDistance(Range1,Range2,F) if (isInputRange!(Range1) && isInputRange!(Range2))",
"kind" : "template",
"line" : 1185,
"members" : [
{
"name" : "euclideanDistance",
"kind" : "function",
"type" : "CommonType!(ElementType!(Range1),ElementType!(Range2))(Range1 a, Range2 b, F limit)",
"line" : 1185}
]
}
,
{
"name" : "dotProduct(Range1,Range2) if (isInputRange!(Range1) && isInputRange!(Range2) && !(isArray!(Range1) && isArray!(Range2)))",
"kind" : "template",
"line" : 1223,
"members" : [
{
"name" : "dotProduct",
"kind" : "function",
"type" : "CommonType!(ElementType!(Range1),ElementType!(Range2))(Range1 a, Range2 b)",
"line" : 1223}
]
}
,
{
"name" : "dotProduct(F1,F2)",
"kind" : "template",
"line" : 1240,
"members" : [
{
"name" : "dotProduct",
"kind" : "function",
"type" : "Unqual!(CommonType!(F1,F2))(in F1[] avector, in F2[] bvector)",
"line" : 1240}
]
}
,
{
"name" : "cosineSimilarity(Range1,Range2) if (isInputRange!(Range1) && isInputRange!(Range2))",
"kind" : "template",
"line" : 1302,
"members" : [
{
"name" : "cosineSimilarity",
"kind" : "function",
"type" : "CommonType!(ElementType!(Range1),ElementType!(Range2))(Range1 a, Range2 b)",
"line" : 1302}
]
}
,
{
"name" : "normalize(R) if (isForwardRange!(R))",
"kind" : "template",
"line" : 1341,
"members" : [
{
"name" : "normalize",
"kind" : "function",
"type" : "bool(R range, ElementType!(R) sum = 1)",
"line" : 1341}
]
}
,
{
"name" : "entropy(Range) if (isInputRange!(Range))",
"kind" : "template",
"line" : 1399,
"members" : [
{
"name" : "entropy",
"kind" : "function",
"type" : "ElementType!(Range)(Range r)",
"line" : 1399}
]
}
,
{
"name" : "entropy(Range,F) if (isInputRange!(Range) && !is(CommonType!(ElementType!(Range),F) == void))",
"kind" : "template",
"line" : 1411,
"members" : [
{
"name" : "entropy",
"kind" : "function",
"type" : "ElementType!(Range)(Range r, F max)",
"line" : 1411}
]
}
,
{
"name" : "kullbackLeiblerDivergence(Range1,Range2) if (isInputRange!(Range1) && isInputRange!(Range2))",
"kind" : "template",
"line" : 1447,
"members" : [
{
"name" : "kullbackLeiblerDivergence",
"kind" : "function",
"type" : "CommonType!(ElementType!(Range1),ElementType!(Range2))(Range1 a, Range2 b)",
"line" : 1447}
]
}
,
{
"name" : "jensenShannonDivergence(Range1,Range2) if (isInputRange!(Range1) && isInputRange!(Range2) && is(CommonType!(ElementType!(Range1),ElementType!(Range2))))",
"kind" : "template",
"line" : 1491,
"members" : [
{
"name" : "jensenShannonDivergence",
"kind" : "function",
"type" : "CommonType!(ElementType!(Range1),ElementType!(Range2))(Range1 a, Range2 b)",
"line" : 1491}
]
}
,
{
"name" : "jensenShannonDivergence(Range1,Range2,F) if (isInputRange!(Range1) && isInputRange!(Range2) && is(typeof(CommonType!(ElementType!(Range1),ElementType!(Range2)).init >= F.init) : bool))",
"kind" : "template",
"line" : 1518,
"members" : [
{
"name" : "jensenShannonDivergence",
"kind" : "function",
"type" : "CommonType!(ElementType!(Range1),ElementType!(Range2))(Range1 a, Range2 b, F limit)",
"line" : 1518}
]
}
,
{
"name" : "gapWeightedSimilarity(alias comp = \"a == b\",R1,R2,F) if (isRandomAccessRange!(R1) && hasLength!(R1) && isRandomAccessRange!(R2) && hasLength!(R2))",
"kind" : "template",
"line" : 1676,
"members" : [
{
"name" : "gapWeightedSimilarity",
"kind" : "function",
"type" : "F(R1 s, R2 t, F lambda)",
"line" : 1676}
]
}
,
{
"name" : "gapWeightedSimilarityNormalized(alias comp = \"a == b\",R1,R2,F) if (isRandomAccessRange!(R1) && hasLength!(R1) && isRandomAccessRange!(R2) && hasLength!(R2))",
"kind" : "template",
"line" : 1758,
"members" : [
{
"name" : "gapWeightedSimilarityNormalized",
"kind" : "function",
"type" : "Select!(isFloatingPoint!(F),F,double)(R1 s, R2 t, F lambda, F sSelfSim = F.init, F tSelfSim = F.init)",
"line" : 1758}
]
}
,
{
"name" : "GapWeightedSimilarityIncremental(Range,F = double) if (isRandomAccessRange!(Range) && hasLength!(Range))",
"kind" : "struct",
"line" : 1818,
"members" : [
{
"name" : "GapWeightedSimilarityIncremental",
"kind" : "struct",
"line" : 1818,
"members" : [
{
"name" : "s",
"kind" : "variable",
"type" : "Range",
"line" : 1820}
,
{
"name" : "t",
"kind" : "variable",
"type" : "Range",
"line" : 1820}
,
{
"name" : "currentValue",
"kind" : "variable",
"type" : "F",
"line" : 1821}
,
{
"name" : "kl",
"kind" : "variable",
"type" : "F*",
"line" : 1822}
,
{
"name" : "gram",
"kind" : "variable",
"type" : "size_t",
"line" : 1823}
,
{
"name" : "lambda",
"kind" : "variable",
"type" : "F",
"line" : 1824}
,
{
"name" : "lambda2",
"kind" : "variable",
"type" : "F",
"line" : 1824}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Range s, Range t, F lambda)",
"line" : 1832}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "GapWeightedSimilarityIncremental()",
"line" : 1885}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 1894}
,
{
"name" : "front",
"kind" : "function",
"type" : "F()",
"line" : 1970}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 1975}
]
}
]
}
,
{
"name" : "gapWeightedSimilarityIncremental(R,F)",
"kind" : "template",
"line" : 1988,
"members" : [
{
"name" : "gapWeightedSimilarityIncremental",
"kind" : "function",
"type" : "GapWeightedSimilarityIncremental!(R,F)(R r1, R r2, F penalty)",
"line" : 1988}
]
}
,
{
"name" : "gcd(T)",
"kind" : "template",
"line" : 2067,
"members" : [
{
"name" : "gcd",
"kind" : "function",
"type" : "T(T a, T b)",
"line" : 2067}
]
}
,
{
"name" : "lookup_t",
"kind" : "alias",
"type" : "float",
"line" : 2150}
,
{
"name" : "Fft",
"kind" : "class",
"line" : 2162,
"base" : "Object",
"members" : [
{
"name" : "negSinLookup",
"kind" : "variable",
"type" : "immutable(float[][])",
"line" : 2164}
,
{
"name" : "enforceSize(R)",
"kind" : "template",
"line" : 2166,
"members" : [
{
"name" : "enforceSize",
"kind" : "function",
"type" : "const void(R range)",
"line" : 2166}
]
}
,
{
"name" : "fftImpl(Ret,R)",
"kind" : "template",
"line" : 2171,
"members" : [
{
"name" : "fftImpl",
"kind" : "function",
"type" : "const void(Stride!(R) range, Ret buf)",
"line" : 2171}
]
}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Fft(float[] memSpace)",
"line" : 2256}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Fft(ulong size)",
"line" : 2312}
,
{
"name" : "size",
"kind" : "function",
"type" : "const @property ulong()",
"line" : 2322}
,
{
"name" : "fft(F = double,R) if (isFloatingPoint!(F) && isRandomAccessRange!(R))",
"kind" : "template",
"line" : 2336,
"members" : [
{
"name" : "fft",
"kind" : "function",
"type" : "const Complex!(F)[](R range)",
"line" : 2336}
]
}
,
{
"name" : "fft(Ret,R) if (isRandomAccessRange!(Ret) && isComplexLike!(ElementType!(Ret)) && hasSlicing!(Ret))",
"kind" : "template",
"line" : 2359,
"members" : [
{
"name" : "fft",
"kind" : "function",
"type" : "const void(R range, Ret buf)",
"line" : 2359}
]
}
,
{
"name" : "inverseFft(F = double,R) if (isRandomAccessRange!(R) && isComplexLike!(ElementType!(R)) && isFloatingPoint!(F))",
"kind" : "template",
"line" : 2389,
"members" : [
{
"name" : "inverseFft",
"kind" : "function",
"type" : "const Complex!(F)[](R range)",
"line" : 2389}
]
}
,
{
"name" : "inverseFft(Ret,R) if (isRandomAccessRange!(Ret) && isComplexLike!(ElementType!(Ret)) && hasSlicing!(Ret))",
"kind" : "template",
"line" : 2409,
"members" : [
{
"name" : "inverseFft",
"kind" : "function",
"type" : "const void(R range, Ret buf)",
"line" : 2409}
]
}
]
}
,
{
"name" : "MakeLocalFft",
"kind" : "variable",
"type" : "string",
"line" : 2428}
,
{
"name" : "fft(F = double,R)",
"kind" : "template",
"line" : 2446,
"members" : [
{
"name" : "fft",
"kind" : "function",
"type" : "Complex!(F)[](R range)",
"line" : 2446}
]
}
,
{
"name" : "fft(Ret,R)",
"kind" : "template",
"line" : 2452,
"members" : [
{
"name" : "fft",
"kind" : "function",
"type" : "void(R range, Ret buf)",
"line" : 2452}
]
}
,
{
"name" : "inverseFft(F = double,R)",
"kind" : "template",
"line" : 2458,
"members" : [
{
"name" : "inverseFft",
"kind" : "function",
"type" : "Complex!(F)[](R range)",
"line" : 2458}
]
}
,
{
"name" : "inverseFft(Ret,R)",
"kind" : "template",
"line" : 2464,
"members" : [
{
"name" : "inverseFft",
"kind" : "function",
"type" : "void(R range, Ret buf)",
"line" : 2464}
]
}
,
{
"name" : "swapRealImag(C)",
"kind" : "template",
"line" : 2528,
"members" : [
{
"name" : "swapRealImag",
"kind" : "function",
"type" : "C(C input)",
"line" : 2528}
]
}
,
{
"name" : "Stride(R)",
"kind" : "struct",
"line" : 2536,
"members" : [
{
"name" : "Stride",
"kind" : "struct",
"line" : 2536,
"members" : [
{
"name" : "range",
"kind" : "variable",
"type" : "Unqual!(R)",
"line" : 2537}
,
{
"name" : "_nSteps",
"kind" : "variable",
"type" : "size_t",
"line" : 2538}
,
{
"name" : "_length",
"kind" : "variable",
"type" : "size_t",
"line" : 2539}
,
{
"name" : "E",
"kind" : "alias",
"type" : "ElementType!(R)",
"line" : 2540}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(R range, size_t nStepsIn)",
"line" : 2542}
,
{
"name" : "length",
"kind" : "function",
"type" : "const @property size_t()",
"line" : 2548}
,
{
"name" : "save",
"kind" : "function",
"type" : "@property typeof(this)()",
"line" : 2552}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "E(size_t index)",
"line" : 2558}
,
{
"name" : "front",
"kind" : "function",
"type" : "E()",
"line" : 2562}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 2566}
,
{
"name" : "popHalf",
"kind" : "function",
"type" : "void()",
"line" : 2577}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const @property bool()",
"line" : 2581}
,
{
"name" : "nSteps",
"kind" : "function",
"type" : "const @property size_t()",
"line" : 2585}
,
{
"name" : "doubleSteps",
"kind" : "function",
"type" : "void()",
"line" : 2589}
,
{
"name" : "nSteps",
"kind" : "function",
"type" : "@property size_t(size_t newVal)",
"line" : 2594}
]
}
]
}
,
{
"name" : "slowFourier2(Ret,R)",
"kind" : "template",
"line" : 2606,
"members" : [
{
"name" : "slowFourier2",
"kind" : "function",
"type" : "void(R range, Ret buf)",
"line" : 2606}
]
}
,
{
"name" : "slowFourier4(Ret,R)",
"kind" : "template",
"line" : 2615,
"members" : [
{
"name" : "slowFourier4",
"kind" : "function",
"type" : "void(R range, Ret buf)",
"line" : 2615}
]
}
,
{
"name" : "isPowerOfTwo",
"kind" : "function",
"type" : "bool(ulong num)",
"line" : 2626}
,
{
"name" : "roundDownToPowerOf2",
"kind" : "function",
"type" : "ulong(ulong num)",
"line" : 2630}
,
{
"name" : "isComplexLike(T)",
"kind" : "template",
"line" : 2639,
"members" : [
{
"name" : "isComplexLike",
"kind" : "variable",
"type" : "bool",
"line" : 2640}
]
}
]
}
,
{
"name" : "std.outbuffer",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/outbuffer.d",
"members" : [
{
"name" : "OutBuffer",
"kind" : "class",
"line" : 40,
"base" : "Object",
"members" : [
{
"name" : "data",
"kind" : "variable",
"type" : "ubyte[]",
"line" : 41}
,
{
"name" : "offset",
"kind" : "variable",
"type" : "ulong",
"line" : 42}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "OutBuffer()",
"line" : 50}
,
{
"name" : "toBytes",
"kind" : "function",
"type" : "ubyte[]()",
"line" : 59}
,
{
"name" : "reserve",
"kind" : "function",
"type" : "void(ulong nbytes)",
"line" : 70}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(const(ubyte)[] bytes)",
"line" : 93}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(in const(wchar[]) chars)",
"line" : 100}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(const(dchar)[] chars)",
"line" : 105}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ubyte b)",
"line" : 110}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(byte b)",
"line" : 117}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(char c)",
"line" : 118}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(dchar c)",
"line" : 119}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ushort w)",
"line" : 121}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(short s)",
"line" : 128}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(wchar c)",
"line" : 130}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(uint w)",
"line" : 137}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(int i)",
"line" : 144}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ulong l)",
"line" : 146}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(long l)",
"line" : 153}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(float f)",
"line" : 155}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(double f)",
"line" : 162}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(real f)",
"line" : 169}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(in const(char[]) s)",
"line" : 176}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(OutBuffer buf)",
"line" : 185}
,
{
"name" : "fill0",
"kind" : "function",
"type" : "void(ulong nbytes)",
"line" : 194}
,
{
"name" : "alignSize",
"kind" : "function",
"type" : "void(ulong alignsize)",
"line" : 205}
,
{
"name" : "align2",
"kind" : "function",
"type" : "void()",
"line" : 225}
,
{
"name" : "align4",
"kind" : "function",
"type" : "void()",
"line" : 235}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 247}
,
{
"name" : "vprintf",
"kind" : "function",
"type" : "void(string format, void* args)",
"line" : 257}
,
{
"name" : "printf",
"kind" : "function",
"type" : "voidC (string format,...)",
"line" : 307}
,
{
"name" : "spread",
"kind" : "function",
"type" : "void(ulong index, ulong nbytes)",
"line" : 328}
]
}
]
}
,
{
"name" : "std.parallelism",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/parallelism.d",
"members" : [
{
"name" : "alloca",
"kind" : "function",
"type" : "void*(ulong nBytes)",
"line" : 82}
,
{
"name" : "atomicSetUbyte",
"kind" : "function",
"type" : "void(ref ubyte stuff, ubyte newVal)",
"line" : 166}
,
{
"name" : "atomicReadUbyte",
"kind" : "function",
"type" : "ubyte(ref ubyte val)",
"line" : 171}
,
{
"name" : "atomicCasUbyte",
"kind" : "function",
"type" : "bool(ref ubyte stuff, ubyte testVal, ubyte newVal)",
"line" : 177}
,
{
"name" : "atomicIncUint",
"kind" : "function",
"type" : "void(ref uint num)",
"line" : 184}
,
{
"name" : "MapType(R,functions...)",
"kind" : "template",
"line" : 193,
"members" : [
]
}
,
{
"name" : "ReduceType(alias fun,R,E)",
"kind" : "template",
"line" : 202,
"members" : [
{
"name" : "ReduceType",
"kind" : "alias",
"type" : "typeof(binaryFun!(fun)(E.init,ElementType!(R).init))",
"line" : 203}
]
}
,
{
"name" : "noUnsharedAliasing(T)",
"kind" : "template",
"line" : 206,
"members" : [
{
"name" : "noUnsharedAliasing",
"kind" : "variable",
"type" : "bool",
"line" : 207}
]
}
,
{
"name" : "isSafeTask(F)",
"kind" : "template",
"line" : 213,
"members" : [
{
"name" : "isSafeTask",
"kind" : "variable",
"type" : "bool",
"line" : 214}
]
}
,
{
"name" : "isSafeReturn(T)",
"kind" : "template",
"line" : 245,
"members" : [
]
}
,
{
"name" : "moveToHeap(T)",
"kind" : "template",
"line" : 255,
"members" : [
{
"name" : "moveToHeap",
"kind" : "function",
"type" : "T*(ref T object)",
"line" : 255}
]
}
,
{
"name" : "TaskStatus",
"kind" : "enum",
"line" : 274,
"base" : "ubyte",
"members" : [
{
"name" : "notStarted",
"kind" : "enum member",
"line" : 275}
,
{
"name" : "inProgress",
"kind" : "enum member",
"line" : 276}
,
{
"name" : "done",
"kind" : "enum member",
"line" : 277}
]
}
,
{
"name" : "BaseMixin(ubyte initTaskStatus)",
"kind" : "template",
"line" : 283,
"members" : [
{
"name" : "prev",
"kind" : "variable",
"type" : "AbstractTask*",
"line" : 284}
,
{
"name" : "next",
"kind" : "variable",
"type" : "AbstractTask*",
"line" : 285}
,
{
"name" : "exception",
"kind" : "variable",
"type" : "Throwable",
"line" : 293}
,
{
"name" : "taskStatus",
"kind" : "variable",
"type" : "ubyte",
"line" : 294}
,
{
"name" : "shouldSetDone",
"kind" : "variable",
"type" : "bool",
"line" : 301}
,
{
"name" : "done",
"kind" : "function",
"type" : "@property bool()",
"line" : 303}
]
}
,
{
"name" : "AbstractTask",
"kind" : "struct",
"line" : 317,
"members" : [
{
"name" : "job",
"kind" : "function",
"type" : "void()",
"line" : 320}
]
}
,
{
"name" : "AliasReturn(alias fun,T...)",
"kind" : "template",
"line" : 325,
"members" : [
{
"name" : "AliasReturn",
"kind" : "alias",
"type" : "AliasReturnImpl!(fun,T).ret",
"line" : 326}
]
}
,
{
"name" : "AliasReturnImpl(alias fun,T...)",
"kind" : "template",
"line" : 329,
"members" : [
{
"name" : "args",
"kind" : "variable",
"type" : "T",
"line" : 330}
,
{
"name" : "ret",
"kind" : "alias",
"type" : "typeof(fun(args))",
"line" : 331}
]
}
,
{
"name" : "reduceAdjoin(functions...)",
"kind" : "template",
"line" : 336,
"members" : [
]
}
,
{
"name" : "reduceFinish(functions...)",
"kind" : "template",
"line" : 352,
"members" : [
]
}
,
{
"name" : "ElementsCompatible(R,A)",
"kind" : "template",
"line" : 370,
"members" : [
]
}
,
{
"name" : "Task(alias fun,Args...)",
"kind" : "struct",
"line" : 411,
"members" : [
{
"name" : "Task",
"kind" : "struct",
"line" : 411,
"members" : [
{
"name" : "addressOf(T)",
"kind" : "template",
"line" : 413,
"members" : [
{
"name" : "addressOf",
"kind" : "function",
"type" : "T*(ref T val)",
"line" : 413}
]
}
,
{
"name" : "impl",
"kind" : "function",
"type" : "void(void* myTask)",
"line" : 417}
,
{
"name" : "pool",
"kind" : "variable",
"type" : "TaskPool",
"line" : 429}
,
{
"name" : "isScoped",
"kind" : "variable",
"type" : "bool",
"line" : 430}
,
{
"name" : "_args",
"kind" : "variable",
"type" : "Args",
"line" : 432}
,
{
"name" : "ReturnType",
"kind" : "alias",
"type" : "typeof(fun(_args))",
"line" : 471}
,
{
"name" : "enforcePool",
"kind" : "function",
"type" : "void()",
"line" : 491}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Args args)",
"line" : 495}
,
{
"name" : "spinForce",
"kind" : "function",
"type" : "@trusted ReturnType()",
"line" : 511}
,
{
"name" : "yieldForce",
"kind" : "function",
"type" : "@trusted ReturnType()",
"line" : 536}
,
{
"name" : "workForce",
"kind" : "function",
"type" : "@trusted ReturnType()",
"line" : 573}
,
{
"name" : "done",
"kind" : "function",
"type" : "@trusted bool()",
"line" : 629}
,
{
"name" : "executeInNewThread",
"kind" : "function",
"type" : "@trusted void()",
"line" : 642}
,
{
"name" : "executeInNewThread",
"kind" : "function",
"type" : "@trusted void(int priority)",
"line" : 647}
]
}
]
}
,
{
"name" : "run(F,Args...)",
"kind" : "template",
"line" : 666,
"members" : [
{
"name" : "run",
"kind" : "function",
"type" : "ReturnType!(F)(F fpOrDelegate, ref Args args)",
"line" : 666}
]
}
,
{
"name" : "task(alias fun,Args...)",
"kind" : "template",
"line" : 733,
"members" : [
{
"name" : "task",
"kind" : "function",
"type" : "(Args args)",
"line" : 733}
]
}
,
{
"name" : "task(F,Args...) if (is(typeof(delegateOrFp(args))) && !isSafeTask!(F))",
"kind" : "template",
"line" : 767,
"members" : [
{
"name" : "task",
"kind" : "function",
"type" : "(F delegateOrFp, Args args)",
"line" : 767}
]
}
,
{
"name" : "task(F,Args...) if (is(typeof(fun(args))) && isSafeTask!(F))",
"kind" : "template",
"line" : 794,
"members" : [
{
"name" : "task",
"kind" : "function",
"type" : "@trusted (F fun, Args args)",
"line" : 794}
]
}
,
{
"name" : "scopedTask(alias fun,Args...)",
"kind" : "template",
"line" : 821,
"members" : [
{
"name" : "scopedTask",
"kind" : "function",
"type" : "(Args args)",
"line" : 821}
]
}
,
{
"name" : "scopedTask(F,Args...) if (is(typeof(delegateOrFp(args))) && !isSafeTask!(F))",
"kind" : "template",
"line" : 828,
"members" : [
{
"name" : "scopedTask",
"kind" : "function",
"type" : "(scope F delegateOrFp, Args args)",
"line" : 828}
]
}
,
{
"name" : "scopedTask(F,Args...) if (is(typeof(fun(args))) && isSafeTask!(F))",
"kind" : "template",
"line" : 836,
"members" : [
{
"name" : "scopedTask",
"kind" : "function",
"type" : "@trusted (F fun, Args args)",
"line" : 836}
]
}
,
{
"name" : "totalCPUs",
"kind" : "variable",
"type" : "immutable(uint)",
"line" : 847}
,
{
"name" : "TaskPool",
"kind" : "class",
"line" : 868,
"base" : "Object",
"members" : [
{
"name" : "isSingleTask",
"kind" : "variable",
"type" : "bool",
"line" : 874}
,
{
"name" : "pool",
"kind" : "variable",
"type" : "Thread[]",
"line" : 876}
,
{
"name" : "singleTaskThread",
"kind" : "variable",
"type" : "core.thread.Thread",
"line" : 877}
,
{
"name" : "head",
"kind" : "variable",
"type" : "AbstractTask*",
"line" : 879}
,
{
"name" : "tail",
"kind" : "variable",
"type" : "AbstractTask*",
"line" : 880}
,
{
"name" : "status",
"kind" : "variable",
"type" : "PoolState",
"line" : 881}
,
{
"name" : "workerCondition",
"kind" : "variable",
"type" : "core.sync.condition.Condition",
"line" : 882}
,
{
"name" : "waiterCondition",
"kind" : "variable",
"type" : "core.sync.condition.Condition",
"line" : 883}
,
{
"name" : "queueMutex",
"kind" : "variable",
"type" : "core.sync.mutex.Mutex",
"line" : 884}
,
{
"name" : "waiterMutex",
"kind" : "variable",
"type" : "core.sync.mutex.Mutex",
"line" : 885}
,
{
"name" : "nextInstanceIndex",
"kind" : "variable",
"type" : "ulong",
"line" : 888}
,
{
"name" : "threadIndex",
"kind" : "variable",
"type" : "ulong",
"line" : 891}
,
{
"name" : "instanceStartIndex",
"kind" : "variable",
"type" : "immutable(ulong)",
"line" : 894}
,
{
"name" : "nextThreadIndex",
"kind" : "variable",
"type" : "ulong",
"line" : 897}
,
{
"name" : "PoolState",
"kind" : "enum",
"line" : 899,
"base" : "ubyte",
"members" : [
{
"name" : "running",
"kind" : "enum member",
"line" : 900}
,
{
"name" : "finishing",
"kind" : "enum member",
"line" : 901}
,
{
"name" : "stopNow",
"kind" : "enum member",
"line" : 902}
]
}
,
{
"name" : "doJob",
"kind" : "function",
"type" : "void(AbstractTask* job)",
"line" : 905}
,
{
"name" : "doSingleTask",
"kind" : "function",
"type" : "void()",
"line" : 930}
,
{
"name" : "workLoop",
"kind" : "function",
"type" : "void()",
"line" : 941}
,
{
"name" : "pop",
"kind" : "function",
"type" : "AbstractTask*()",
"line" : 964}
,
{
"name" : "popNoSync",
"kind" : "function",
"type" : "AbstractTask*()",
"line" : 975}
,
{
"name" : "abstractPut",
"kind" : "function",
"type" : "void(AbstractTask* task)",
"line" : 1003}
,
{
"name" : "abstractPutNoSync",
"kind" : "function",
"type" : "void(AbstractTask* task)",
"line" : 1009}
,
{
"name" : "abstractPutGroupNoSync",
"kind" : "function",
"type" : "void(AbstractTask* h, AbstractTask* t)",
"line" : 1030}
,
{
"name" : "tryDeleteExecute",
"kind" : "function",
"type" : "void(AbstractTask* toExecute)",
"line" : 1043}
,
{
"name" : "deleteItem",
"kind" : "function",
"type" : "bool(AbstractTask* item)",
"line" : 1063}
,
{
"name" : "deleteItemNoSync",
"kind" : "function",
"type" : "bool(AbstractTask* item)",
"line" : 1069}
,
{
"name" : "queueLock",
"kind" : "function",
"type" : "void()",
"line" : 1102}
,
{
"name" : "queueUnlock",
"kind" : "function",
"type" : "void()",
"line" : 1106}
,
{
"name" : "waiterLock",
"kind" : "function",
"type" : "void()",
"line" : 1110}
,
{
"name" : "waiterUnlock",
"kind" : "function",
"type" : "void()",
"line" : 1114}
,
{
"name" : "wait",
"kind" : "function",
"type" : "void()",
"line" : 1118}
,
{
"name" : "notify",
"kind" : "function",
"type" : "void()",
"line" : 1122}
,
{
"name" : "notifyAll",
"kind" : "function",
"type" : "void()",
"line" : 1126}
,
{
"name" : "waitUntilCompletion",
"kind" : "function",
"type" : "void()",
"line" : 1130}
,
{
"name" : "notifyWaiters",
"kind" : "function",
"type" : "void()",
"line" : 1138}
,
{
"name" : "workerIndex",
"kind" : "function",
"type" : "ulong()",
"line" : 1149}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "TaskPool(AbstractTask* task, int priority = 2147483647)",
"line" : 1159}
,
{
"name" : "defaultWorkUnitSize",
"kind" : "function",
"type" : "const pure nothrow @safe ulong(ulong rangeLen)",
"line" : 1180}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "@trusted TaskPool()",
"line" : 1197}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "@trusted TaskPool(ulong nWorkers)",
"line" : 1204}
,
{
"name" : "parallel(R)",
"kind" : "template",
"line" : 1292,
"members" : [
{
"name" : "parallel",
"kind" : "function",
"type" : "ParallelForeach!(R)(R range, size_t workUnitSize)",
"line" : 1292}
]
}
,
{
"name" : "parallel(R)",
"kind" : "template",
"line" : 1300,
"members" : [
{
"name" : "parallel",
"kind" : "function",
"type" : "ParallelForeach!(R)(R range)",
"line" : 1300}
]
}
,
{
"name" : "amap(functions...)",
"kind" : "template",
"line" : 1375,
"members" : [
{
"name" : "amap(Args...)",
"kind" : "template",
"line" : 1377,
"members" : [
{
"name" : "amap",
"kind" : "function",
"type" : "(Args args)",
"line" : 1377}
]
}
]
}
,
{
"name" : "map(functions...)",
"kind" : "template",
"line" : 1512,
"members" : [
{
"name" : "map(R) if (isInputRange!(R))",
"kind" : "template",
"line" : 1516,
"members" : [
{
"name" : "map",
"kind" : "function",
"type" : "(R range, size_t bufSize = 100, size_t workUnitSize = size_t.max)",
"line" : 1516}
]
}
]
}
,
{
"name" : "asyncBuf(R)",
"kind" : "template",
"line" : 1767,
"members" : [
{
"name" : "asyncBuf",
"kind" : "function",
"type" : "(R range, size_t bufSize = 100)",
"line" : 1767}
]
}
,
{
"name" : "reduce(functions...)",
"kind" : "template",
"line" : 1962,
"members" : [
{
"name" : "reduce(Args...)",
"kind" : "template",
"line" : 1965,
"members" : [
{
"name" : "reduce",
"kind" : "function",
"type" : "(Args args)",
"line" : 1965}
]
}
]
}
,
{
"name" : "WorkerLocalStorage(T)",
"kind" : "struct",
"line" : 2234,
"members" : [
{
"name" : "WorkerLocalStorage",
"kind" : "struct",
"line" : 2234,
"members" : [
{
"name" : "pool",
"kind" : "variable",
"type" : "TaskPool",
"line" : 2236}
,
{
"name" : "size",
"kind" : "variable",
"type" : "size_t",
"line" : 2237}
,
{
"name" : "cacheLineSize",
"kind" : "variable",
"type" : "size_t",
"line" : 2239}
,
{
"name" : "elemSize",
"kind" : "variable",
"type" : "size_t",
"line" : 2240}
,
{
"name" : "stillThreadLocal",
"kind" : "variable",
"type" : "bool*",
"line" : 2241}
,
{
"name" : "roundToLine",
"kind" : "function",
"type" : "pure nothrow size_t(size_t num)",
"line" : 2254}
,
{
"name" : "data",
"kind" : "variable",
"type" : "void*",
"line" : 2262}
,
{
"name" : "initialize",
"kind" : "function",
"type" : "void(TaskPool pool)",
"line" : 2264}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "T(size_t index)",
"line" : 2292}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "void(T val, size_t index)",
"line" : 2297}
,
{
"name" : "get",
"kind" : "function",
"type" : "@property T()",
"line" : 2316}
,
{
"name" : "get",
"kind" : "function",
"type" : "@property void(T val)",
"line" : 2328}
,
{
"name" : "toRange",
"kind" : "function",
"type" : "@property WorkerLocalStorageRange!(T)()",
"line" : 2347}
]
}
]
}
,
{
"name" : "WorkerLocalStorageRange(T)",
"kind" : "struct",
"line" : 2377,
"members" : [
{
"name" : "WorkerLocalStorageRange",
"kind" : "struct",
"line" : 2377,
"members" : [
{
"name" : "workerLocalStorage",
"kind" : "variable",
"type" : "WorkerLocalStorage!(T)",
"line" : 2379}
,
{
"name" : "_length",
"kind" : "variable",
"type" : "size_t",
"line" : 2381}
,
{
"name" : "beginOffset",
"kind" : "variable",
"type" : "size_t",
"line" : 2382}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(WorkerLocalStorage!(T) wl)",
"line" : 2384}
,
{
"name" : "front",
"kind" : "function",
"type" : "@property T()",
"line" : 2390}
,
{
"name" : "back",
"kind" : "function",
"type" : "@property T()",
"line" : 2394}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 2398}
,
{
"name" : "popBack",
"kind" : "function",
"type" : "void()",
"line" : 2405}
,
{
"name" : "save",
"kind" : "function",
"type" : "@property typeof(this)()",
"line" : 2411}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "T(size_t index)",
"line" : 2415}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "void(T val, size_t index)",
"line" : 2420}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "typeof(this)(size_t lower, size_t upper)",
"line" : 2425}
,
{
"name" : "empty",
"kind" : "function",
"type" : "@property bool()",
"line" : 2433}
,
{
"name" : "length",
"kind" : "function",
"type" : "@property size_t()",
"line" : 2437}
]
}
]
}
,
{
"name" : "workerLocalStorage(T)",
"kind" : "template",
"line" : 2448,
"members" : [
{
"name" : "workerLocalStorage",
"kind" : "function",
"type" : "WorkerLocalStorage!(T)(lazy T initialVal = T.init)",
"line" : 2448}
]
}
,
{
"name" : "stop",
"kind" : "function",
"type" : "@trusted void()",
"line" : 2474}
,
{
"name" : "finish",
"kind" : "function",
"type" : "@trusted void()",
"line" : 2522}
,
{
"name" : "size",
"kind" : "function",
"type" : "const pure nothrow @property @safe ulong()",
"line" : 2530}
,
{
"name" : "put(alias fun,Args...) if (!isSafeReturn!(typeof(task)))",
"kind" : "template",
"line" : 2566,
"members" : [
{
"name" : "put",
"kind" : "function",
"type" : "void(ref Task!(fun,Args) task)",
"line" : 2566}
]
}
,
{
"name" : "put(alias fun,Args...) if (!isSafeReturn!(typeof(*task)))",
"kind" : "template",
"line" : 2573,
"members" : [
{
"name" : "put",
"kind" : "function",
"type" : "void(Task!(fun,Args)* task)",
"line" : 2573}
]
}
,
{
"name" : "put(alias fun,Args...) if (isSafeReturn!(typeof(task)))",
"kind" : "template",
"line" : 2579,
"members" : [
{
"name" : "put",
"kind" : "function",
"type" : "void(ref Task!(fun,Args) task)",
"line" : 2579}
]
}
,
{
"name" : "put(alias fun,Args...) if (isSafeReturn!(typeof(*task)))",
"kind" : "template",
"line" : 2585,
"members" : [
{
"name" : "put",
"kind" : "function",
"type" : "void(Task!(fun,Args)* task)",
"line" : 2585}
]
}
,
{
"name" : "isDaemon",
"kind" : "function",
"type" : "@property @trusted bool()",
"line" : 2607}
,
{
"name" : "isDaemon",
"kind" : "function",
"type" : "@property @trusted void(bool newVal)",
"line" : 2614}
,
{
"name" : "priority",
"kind" : "function",
"type" : "@property @trusted int()",
"line" : 2631}
,
{
"name" : "priority",
"kind" : "function",
"type" : "@property @trusted void(int newPriority)",
"line" : 2637}
]
}
,
{
"name" : "taskPool",
"kind" : "function",
"type" : "@property @trusted TaskPool()",
"line" : 2653}
,
{
"name" : "_defaultPoolThreads",
"kind" : "variable",
"type" : "shared(uint)",
"line" : 2671}
,
{
"name" : "defaultPoolThreads",
"kind" : "function",
"type" : "@property @trusted uint()",
"line" : 2682}
,
{
"name" : "defaultPoolThreads",
"kind" : "function",
"type" : "@property @trusted void(uint newVal)",
"line" : 2689}
,
{
"name" : "parallel(R)",
"kind" : "template",
"line" : 2711,
"members" : [
{
"name" : "parallel",
"kind" : "function",
"type" : "ParallelForeach!(R)(R range)",
"line" : 2711}
]
}
,
{
"name" : "parallel(R)",
"kind" : "template",
"line" : 2716,
"members" : [
{
"name" : "parallel",
"kind" : "function",
"type" : "ParallelForeach!(R)(R range, size_t workUnitSize)",
"line" : 2716}
]
}
,
{
"name" : "ParallelForeachError",
"kind" : "class",
"line" : 2721,
"base" : "Error",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ParallelForeachError()",
"line" : 2722}
]
}
,
{
"name" : "foreachErr",
"kind" : "function",
"type" : "void()",
"line" : 2728}
,
{
"name" : "ParallelForeachTask(R,Delegate) if (isRandomAccessRange!(R) && hasLength!(R))",
"kind" : "struct",
"line" : 2731,
"members" : [
{
"name" : "ParallelForeachTask",
"kind" : "struct",
"line" : 2731,
"members" : [
{
"name" : "withIndex",
"kind" : "variable",
"line" : 2732}
,
{
"name" : "impl",
"kind" : "function",
"type" : "void(void* myTask)",
"line" : 2734}
,
{
"name" : "pool",
"kind" : "variable",
"type" : "TaskPool",
"line" : 2761}
,
{
"name" : "lowerBound",
"kind" : "variable",
"type" : "size_t",
"line" : 2764}
,
{
"name" : "upperBound",
"kind" : "variable",
"type" : "size_t",
"line" : 2765}
,
{
"name" : "myRange",
"kind" : "variable",
"type" : "R",
"line" : 2766}
,
{
"name" : "runMe",
"kind" : "variable",
"type" : "Delegate",
"line" : 2767}
,
{
"name" : "force",
"kind" : "function",
"type" : "void()",
"line" : 2769}
]
}
]
}
,
{
"name" : "ParallelForeachTask(R,Delegate) if (!isRandomAccessRange!(R) || !hasLength!(R))",
"kind" : "struct",
"line" : 2791,
"members" : [
{
"name" : "ParallelForeachTask",
"kind" : "struct",
"line" : 2791,
"members" : [
{
"name" : "withIndex",
"kind" : "variable",
"line" : 2792}
,
{
"name" : "impl",
"kind" : "function",
"type" : "void(void* myTask)",
"line" : 2794}
,
{
"name" : "pool",
"kind" : "variable",
"type" : "TaskPool",
"line" : 2820}
,
{
"name" : "E",
"kind" : "alias",
"type" : "ElementType!(R)",
"line" : 2823}
,
{
"name" : "runMe",
"kind" : "variable",
"type" : "Delegate",
"line" : 2824}
,
{
"name" : "startIndex",
"kind" : "variable",
"type" : "size_t",
"line" : 2831}
,
{
"name" : "force",
"kind" : "function",
"type" : "void()",
"line" : 2833}
]
}
]
}
,
{
"name" : "AmapTask(alias fun,R,ReturnType) if (isRandomAccessRange!(R) && hasLength!(R))",
"kind" : "struct",
"line" : 2856,
"members" : [
{
"name" : "AmapTask",
"kind" : "struct",
"line" : 2856,
"members" : [
{
"name" : "impl",
"kind" : "function",
"type" : "void(void* myTask)",
"line" : 2857}
,
{
"name" : "pool",
"kind" : "variable",
"type" : "TaskPool",
"line" : 2871}
,
{
"name" : "range",
"kind" : "variable",
"type" : "R",
"line" : 2874}
,
{
"name" : "E",
"kind" : "alias",
"type" : "ElementType!(R)",
"line" : 2875}
,
{
"name" : "results",
"kind" : "variable",
"type" : "ReturnType",
"line" : 2876}
,
{
"name" : "lowerBound",
"kind" : "variable",
"type" : "size_t",
"line" : 2877}
,
{
"name" : "upperBound",
"kind" : "variable",
"type" : "size_t",
"line" : 2878}
,
{
"name" : "force",
"kind" : "function",
"type" : "void()",
"line" : 2880}
]
}
]
}
,
{
"name" : "randLen(R)",
"kind" : "template",
"line" : 2900,
"members" : [
{
"name" : "randLen",
"kind" : "variable",
"line" : 2901}
]
}
,
{
"name" : "ResubmittingTasks()",
"kind" : "template",
"line" : 2913,
"members" : [
{
"name" : "submitNextBatch",
"kind" : "variable",
"type" : "Task!(run,void delegate())",
"line" : 2914}
,
{
"name" : "pool",
"kind" : "variable",
"type" : "TaskPool",
"line" : 2915}
,
{
"name" : "workUnitSize",
"kind" : "variable",
"type" : "size_t",
"line" : 2916}
,
{
"name" : "firstException",
"kind" : "variable",
"type" : "Throwable",
"line" : 2917}
,
{
"name" : "lastException",
"kind" : "variable",
"type" : "Throwable",
"line" : 2917}
,
{
"name" : "doneSubmitting",
"kind" : "variable",
"type" : "ubyte",
"line" : 2918}
,
{
"name" : "slotsPerThread",
"kind" : "variable",
"line" : 2923}
,
{
"name" : "submitResubmittingTask",
"kind" : "function",
"type" : "void(AbstractTask* toSubmit)",
"line" : 2925}
,
{
"name" : "submitJobs",
"kind" : "function",
"type" : "void()",
"line" : 2934}
,
{
"name" : "submitAndExecute",
"kind" : "function",
"type" : "void()",
"line" : 2994}
]
}
,
{
"name" : "AmapImpl(alias fun,Range,Buf)",
"kind" : "struct",
"line" : 3037,
"members" : [
{
"name" : "AmapImpl",
"kind" : "struct",
"line" : 3037,
"members" : [
{
"name" : "range",
"kind" : "variable",
"type" : "Range",
"line" : 3040}
,
{
"name" : "buf",
"kind" : "variable",
"type" : "Buf",
"line" : 3041}
,
{
"name" : "curPos",
"kind" : "variable",
"type" : "size_t",
"line" : 3042}
,
{
"name" : "len",
"kind" : "variable",
"type" : "size_t",
"line" : 3043}
,
{
"name" : "MTask",
"kind" : "alias",
"type" : "AmapTask!(fun,Range,typeof(buf))",
"line" : 3044}
,
{
"name" : "tasks",
"kind" : "variable",
"type" : "MTask[]",
"line" : 3045}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(TaskPool pool, size_t workUnitSize, Range range, Buf buf)",
"line" : 3047}
,
{
"name" : "reuse",
"kind" : "function",
"type" : "void(Range range, Buf buf)",
"line" : 3065}
,
{
"name" : "emptyCheck",
"kind" : "function",
"type" : "bool()",
"line" : 3082}
,
{
"name" : "useTask",
"kind" : "function",
"type" : "void(ref MTask task)",
"line" : 3086}
]
}
]
}
,
{
"name" : "ParallelForeachImpl(Range,Delegate) if (randLen!(Range))",
"kind" : "struct",
"line" : 3098,
"members" : [
{
"name" : "ParallelForeachImpl",
"kind" : "struct",
"line" : 3098,
"members" : [
{
"name" : "range",
"kind" : "variable",
"type" : "Range",
"line" : 3101}
,
{
"name" : "dg",
"kind" : "variable",
"type" : "Delegate",
"line" : 3102}
,
{
"name" : "curPos",
"kind" : "variable",
"type" : "size_t",
"line" : 3103}
,
{
"name" : "len",
"kind" : "variable",
"type" : "size_t",
"line" : 3104}
,
{
"name" : "PTask",
"kind" : "alias",
"type" : "ParallelForeachTask!(Range,Delegate)",
"line" : 3105}
,
{
"name" : "tasks",
"kind" : "variable",
"type" : "PTask[]",
"line" : 3106}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(TaskPool pool, size_t workUnitSize, Range range, Delegate dg)",
"line" : 3108}
,
{
"name" : "useTask",
"kind" : "function",
"type" : "void(ref PTask task)",
"line" : 3126}
,
{
"name" : "emptyCheck",
"kind" : "function",
"type" : "bool()",
"line" : 3136}
]
}
]
}
,
{
"name" : "ParallelForeachImpl(Range,Delegate) if (!randLen!(Range))",
"kind" : "struct",
"line" : 3142,
"members" : [
{
"name" : "ParallelForeachImpl",
"kind" : "struct",
"line" : 3142,
"members" : [
{
"name" : "range",
"kind" : "variable",
"type" : "Range",
"line" : 3145}
,
{
"name" : "dg",
"kind" : "variable",
"type" : "Delegate",
"line" : 3146}
,
{
"name" : "startIndex",
"kind" : "variable",
"type" : "size_t",
"line" : 3147}
,
{
"name" : "PTask",
"kind" : "alias",
"type" : "ParallelForeachTask!(Range,Delegate)",
"line" : 3148}
,
{
"name" : "tasks",
"kind" : "variable",
"type" : "PTask[]",
"line" : 3149}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(TaskPool pool, size_t workUnitSize, Range range, Delegate dg)",
"line" : 3158}
,
{
"name" : "useTask",
"kind" : "function",
"type" : "void(ref PTask task)",
"line" : 3167}
,
{
"name" : "emptyCheck",
"kind" : "function",
"type" : "bool()",
"line" : 3212}
]
}
]
}
,
{
"name" : "parallelApplyMixin",
"kind" : "variable",
"type" : "string",
"line" : 3255}
,
{
"name" : "findLastException",
"kind" : "function",
"type" : "pure nothrow Throwable(Throwable e)",
"line" : 3258}
,
{
"name" : "addToChain",
"kind" : "function",
"type" : "pure nothrow void(Throwable e, ref Throwable firstException, ref Throwable lastException)",
"line" : 3269}
,
{
"name" : "ParallelForeach(R)",
"kind" : "struct",
"line" : 3284,
"members" : [
{
"name" : "ParallelForeach",
"kind" : "struct",
"line" : 3284,
"members" : [
{
"name" : "pool",
"kind" : "variable",
"type" : "TaskPool",
"line" : 3285}
,
{
"name" : "range",
"kind" : "variable",
"type" : "R",
"line" : 3286}
,
{
"name" : "workUnitSize",
"kind" : "variable",
"type" : "size_t",
"line" : 3287}
,
{
"name" : "startIndex",
"kind" : "variable",
"type" : "size_t",
"line" : 3288}
,
{
"name" : "doneSubmitting",
"kind" : "variable",
"type" : "ubyte",
"line" : 3289}
,
{
"name" : "E",
"kind" : "alias",
"type" : "ElementType!(R)",
"line" : 3291}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref E) dg)",
"line" : 3293}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref size_t, ref E) dg)",
"line" : 3297}
]
}
]
}
]
}
,
{
"name" : "std.path",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/path.d",
"members" : [
{
"name" : "sep",
"kind" : "variable",
"type" : "string",
"line" : 67}
,
{
"name" : "altsep",
"kind" : "variable",
"type" : "string",
"line" : 70}
,
{
"name" : "pathsep",
"kind" : "variable",
"type" : "string",
"line" : 73}
,
{
"name" : "linesep",
"kind" : "variable",
"type" : "string",
"line" : 76}
,
{
"name" : "curdir",
"kind" : "variable",
"type" : "string",
"line" : 77}
,
{
"name" : "pardir",
"kind" : "variable",
"type" : "string",
"line" : 78}
,
{
"name" : "isSep",
"kind" : "function",
"type" : "bool(dchar ch)",
"line" : 81}
,
{
"name" : "fcmp",
"kind" : "alias",
"line" : 98}
,
{
"name" : "getExt",
"kind" : "function",
"type" : "string(string fullname)",
"line" : 130}
,
{
"name" : "getName",
"kind" : "function",
"type" : "string(string fullname)",
"line" : 225}
,
{
"name" : "basename(Char,ExtChar = immutable(char)) if (isSomeChar!(Char) && isSomeChar!(ExtChar))",
"kind" : "template",
"line" : 300,
"members" : [
{
"name" : "basename",
"kind" : "function",
"type" : "Char[](Char[] fullname, ExtChar[] extension = null)",
"line" : 300}
]
}
,
{
"name" : "getBaseName",
"kind" : "alias",
"line" : 333}
,
{
"name" : "dirname(Char) if (isSomeChar!(Char))",
"kind" : "template",
"line" : 407,
"members" : [
{
"name" : "dirname",
"kind" : "function",
"type" : "Char[](Char[] fullname)",
"line" : 407}
]
}
,
{
"name" : "getDirName",
"kind" : "alias",
"line" : 526}
,
{
"name" : "getDrive(Char) if (isSomeChar!(Char))",
"kind" : "template",
"line" : 623,
"members" : [
{
"name" : "getDrive",
"kind" : "function",
"type" : "Char[](Char[] fullname)",
"line" : 623}
]
}
,
{
"name" : "defaultExt",
"kind" : "function",
"type" : "string(string filename, string ext)",
"line" : 670}
,
{
"name" : "addExt",
"kind" : "function",
"type" : "string(string filename, string ext)",
"line" : 710}
,
{
"name" : "isabs",
"kind" : "function",
"type" : "bool(in const(char[]) path)",
"line" : 756}
,
{
"name" : "rel2abs",
"kind" : "function",
"type" : "string(string path)",
"line" : 793}
,
{
"name" : "join",
"kind" : "function",
"type" : "string(const(char)[] p1, const(char)[] p2, const(char)[][] more...)",
"line" : 856}
,
{
"name" : "fncharmatch",
"kind" : "function",
"type" : "bool(dchar c1, dchar c2)",
"line" : 1032}
,
{
"name" : "fnmatch",
"kind" : "function",
"type" : "bool(const(char)[] filename, const(char)[] pattern)",
"line" : 1102}
,
{
"name" : "expandTilde",
"kind" : "function",
"type" : "string(string inputPath)",
"line" : 1324}
,
{
"name" : "expandFromEnvironment",
"kind" : "function",
"type" : "string(string path)",
"line" : 1400}
,
{
"name" : "combineCPathWithDPath",
"kind" : "function",
"type" : "string(char* c_path, string path, ulong char_pos)",
"line" : 1421}
,
{
"name" : "expandFromDatabase",
"kind" : "function",
"type" : "string(string path)",
"line" : 1448}
]
}
,
{
"name" : "std.perf",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/perf.d",
"members" : [
{
"name" : "timeval",
"kind" : "struct",
"line" : 791,
"members" : [
{
"name" : "tv_sec",
"kind" : "variable",
"type" : "int",
"line" : 792}
,
{
"name" : "tv_usec",
"kind" : "variable",
"type" : "int",
"line" : 793}
]
}
,
{
"name" : "timezone",
"kind" : "struct",
"line" : 796,
"members" : [
{
"name" : "tz_minuteswest",
"kind" : "variable",
"type" : "int",
"line" : 797}
,
{
"name" : "tz_dsttime",
"kind" : "variable",
"type" : "int",
"line" : 798}
]
}
,
{
"name" : "gettimeofday",
"kind" : "function",
"type" : "voidC (timeval* tv, timezone* tz)",
"line" : 800}
,
{
"name" : "PerformanceCounter",
"kind" : "class",
"line" : 806,
"base" : "Object",
"members" : [
{
"name" : "epoch_type",
"kind" : "alias",
"type" : "timeval",
"line" : 811}
,
{
"name" : "interval_t",
"kind" : "alias",
"type" : "long",
"line" : 813}
,
{
"name" : "start",
"kind" : "function",
"type" : "void()",
"line" : 816}
,
{
"name" : "stop",
"kind" : "function",
"type" : "void()",
"line" : 823}
,
{
"name" : "periodCount",
"kind" : "function",
"type" : "const long()",
"line" : 831}
,
{
"name" : "seconds",
"kind" : "function",
"type" : "const long()",
"line" : 836}
,
{
"name" : "milliseconds",
"kind" : "function",
"type" : "const long()",
"line" : 844}
,
{
"name" : "microseconds",
"kind" : "function",
"type" : "const long()",
"line" : 852}
,
{
"name" : "m_start",
"kind" : "variable",
"type" : "timeval",
"line" : 861}
,
{
"name" : "m_end",
"kind" : "variable",
"type" : "timeval",
"line" : 862}
]
}
]
}
,
{
"name" : "std.process",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/process.d",
"members" : [
{
"name" : "environ",
"kind" : "variable",
"type" : "const(char**)",
"line" : 59}
,
{
"name" : "system",
"kind" : "function",
"type" : "int(string command)",
"line" : 96}
,
{
"name" : "toAStringz",
"kind" : "function",
"type" : "void(in const(immutable(char)[][]) a, const(char)** az)",
"line" : 108}
,
{
"name" : "P_WAIT",
"kind" : "alias",
"line" : 134}
,
{
"name" : "P_NOWAIT",
"kind" : "alias",
"line" : 135}
,
{
"name" : "spawnvp",
"kind" : "function",
"type" : "int(int mode, string pathname, string[] argv)",
"line" : 137}
,
{
"name" : "_spawnvp",
"kind" : "function",
"type" : "int(int mode, in const(char*) pathname, in const(char**) argv)",
"line" : 157}
,
{
"name" : "stopped",
"kind" : "function",
"type" : "bool(int status)",
"line" : 209}
,
{
"name" : "signaled",
"kind" : "function",
"type" : "bool(int status)",
"line" : 210}
,
{
"name" : "termsig",
"kind" : "function",
"type" : "int(int status)",
"line" : 211}
,
{
"name" : "exited",
"kind" : "function",
"type" : "bool(int status)",
"line" : 212}
,
{
"name" : "exitstatus",
"kind" : "function",
"type" : "int(int status)",
"line" : 213}
,
{
"name" : "execv",
"kind" : "function",
"type" : "int(in const(immutable(char)[]) pathname, in const(immutable(char)[][]) argv)",
"line" : 226}
,
{
"name" : "execve",
"kind" : "function",
"type" : "int(in const(immutable(char)[]) pathname, in const(immutable(char)[][]) argv, in const(immutable(char)[][]) envp)",
"line" : 236}
,
{
"name" : "execvp",
"kind" : "function",
"type" : "int(in const(immutable(char)[]) pathname, in const(immutable(char)[][]) argv)",
"line" : 248}
,
{
"name" : "execvpe",
"kind" : "function",
"type" : "int(in const(immutable(char)[]) pathname, in const(immutable(char)[][]) argv, in const(immutable(char)[][]) envp)",
"line" : 258}
,
{
"name" : "getpid",
"kind" : "alias",
"line" : 320}
,
{
"name" : "shell",
"kind" : "function",
"type" : "string(string cmd)",
"line" : 360}
,
{
"name" : "getenv",
"kind" : "function",
"type" : "string(in const(char[]) name)",
"line" : 386}
,
{
"name" : "setenv",
"kind" : "function",
"type" : "void(in const(char[]) name, in const(char[]) value, bool overwrite)",
"line" : 404}
,
{
"name" : "unsetenv",
"kind" : "function",
"type" : "void(in const(char[]) name)",
"line" : 414}
,
{
"name" : "environment",
"kind" : "alias",
"type" : "std.process.Environment",
"line" : 496}
,
{
"name" : "Environment",
"kind" : "class",
"line" : 499,
"base" : "Object",
"members" : [
{
"name" : "getImpl",
"kind" : "function",
"type" : "bool(string name, out string value)",
"line" : 522}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "string(string name)",
"line" : 557}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "string(string value, string name)",
"line" : 568}
,
{
"name" : "remove",
"kind" : "function",
"type" : "void(string name)",
"line" : 603}
,
{
"name" : "get",
"kind" : "function",
"type" : "string(string name, string defaultValue = null)",
"line" : 622}
,
{
"name" : "toAA",
"kind" : "function",
"type" : "string[string]()",
"line" : 632}
]
}
]
}
,
{
"name" : "std.random",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/random.d",
"members" : [
{
"name" : "LinearCongruentialEngine(UIntType,UIntType a,UIntType c,UIntType m)",
"kind" : "struct",
"line" : 130,
"members" : [
{
"name" : "LinearCongruentialEngine",
"kind" : "struct",
"line" : 130,
"members" : [
{
"name" : "hasFixedRange",
"kind" : "variable",
"type" : "bool",
"line" : 132}
,
{
"name" : "min",
"kind" : "variable",
"type" : "UIntType",
"line" : 134}
,
{
"name" : "max",
"kind" : "variable",
"type" : "UIntType",
"line" : 136}
,
{
"name" : "multiplier",
"kind" : "variable",
"type" : "UIntType",
"line" : 141}
,
{
"name" : "increment",
"kind" : "variable",
"type" : "UIntType",
"line" : 143}
,
{
"name" : "modulus",
"kind" : "variable",
"type" : "UIntType",
"line" : 145}
,
{
"name" : "gcd",
"kind" : "function",
"type" : "ulong(ulong a, ulong b)",
"line" : 154}
,
{
"name" : "primeFactorsOnly",
"kind" : "function",
"type" : "ulong(ulong n)",
"line" : 163}
,
{
"name" : "properLinearCongruentialParameters",
"kind" : "function",
"type" : "bool(ulong m, ulong a, ulong c)",
"line" : 186}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(UIntType x0)",
"line" : 220}
,
{
"name" : "seed",
"kind" : "function",
"type" : "void(UIntType x0 = 1)",
"line" : 228}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 242}
,
{
"name" : "front",
"kind" : "function",
"type" : "UIntType()",
"line" : 278}
,
{
"name" : "save",
"kind" : "function",
"type" : "typeof(this)()",
"line" : 284}
,
{
"name" : "empty",
"kind" : "variable",
"type" : "bool",
"line" : 292}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(ref const LinearCongruentialEngine rhs)",
"line" : 297}
,
{
"name" : "_x",
"kind" : "variable",
"type" : "UIntType",
"line" : 302}
]
}
]
}
,
{
"name" : "MinstdRand0",
"kind" : "alias",
"line" : 325}
,
{
"name" : "MinstdRand",
"kind" : "alias",
"type" : "LinearCongruentialEngine!(uint,48271,0,2147483647)",
"line" : 327}
,
{
"name" : "MersenneTwisterEngine(UIntType,ulong w,ulong n,ulong m,ulong r,UIntType a,ulong u,ulong s,UIntType b,ulong t,UIntType c,ulong l)",
"kind" : "struct",
"line" : 382,
"members" : [
{
"name" : "MersenneTwisterEngine",
"kind" : "struct",
"line" : 382,
"members" : [
{
"name" : "wordSize",
"kind" : "variable",
"type" : "size_t",
"line" : 387}
,
{
"name" : "stateSize",
"kind" : "variable",
"type" : "size_t",
"line" : 388}
,
{
"name" : "shiftSize",
"kind" : "variable",
"type" : "size_t",
"line" : 389}
,
{
"name" : "maskBits",
"kind" : "variable",
"type" : "size_t",
"line" : 390}
,
{
"name" : "xorMask",
"kind" : "variable",
"type" : "UIntType",
"line" : 391}
,
{
"name" : "temperingU",
"kind" : "variable",
"type" : "UIntType",
"line" : 392}
,
{
"name" : "temperingS",
"kind" : "variable",
"type" : "size_t",
"line" : 393}
,
{
"name" : "temperingB",
"kind" : "variable",
"type" : "UIntType",
"line" : 394}
,
{
"name" : "temperingT",
"kind" : "variable",
"type" : "size_t",
"line" : 395}
,
{
"name" : "temperingC",
"kind" : "variable",
"type" : "UIntType",
"line" : 396}
,
{
"name" : "temperingL",
"kind" : "variable",
"type" : "size_t",
"line" : 397}
,
{
"name" : "min",
"kind" : "variable",
"type" : "UIntType",
"line" : 400}
,
{
"name" : "max",
"kind" : "variable",
"type" : "UIntType",
"line" : 402}
,
{
"name" : "defaultSeed",
"kind" : "variable",
"type" : "UIntType",
"line" : 405}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(UIntType value)",
"line" : 416}
,
{
"name" : "seed",
"kind" : "function",
"type" : "void(UIntType value = defaultSeed)",
"line" : 424}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 452}
,
{
"name" : "front",
"kind" : "function",
"type" : "UIntType()",
"line" : 503}
,
{
"name" : "save",
"kind" : "function",
"type" : "typeof(this)()",
"line" : 510}
,
{
"name" : "empty",
"kind" : "variable",
"type" : "bool",
"line" : 518}
,
{
"name" : "mt",
"kind" : "variable",
"type" : "UIntType[n]",
"line" : 520}
,
{
"name" : "mti",
"kind" : "variable",
"type" : "size_t",
"line" : 521}
,
{
"name" : "_y",
"kind" : "variable",
"type" : "UIntType",
"line" : 522}
]
}
]
}
,
{
"name" : "Mt19937",
"kind" : "alias",
"line" : 546}
,
{
"name" : "XorshiftEngine(UIntType,UIntType bits,UIntType a,UIntType b,UIntType c)",
"kind" : "struct",
"line" : 588,
"members" : [
{
"name" : "XorshiftEngine",
"kind" : "struct",
"line" : 588,
"members" : [
{
"name" : "empty",
"kind" : "variable",
"line" : 595}
,
{
"name" : "min",
"kind" : "variable",
"type" : "UIntType",
"line" : 597}
,
{
"name" : "max",
"kind" : "variable",
"type" : "UIntType",
"line" : 599}
,
{
"name" : "Size",
"kind" : "variable",
"line" : 603}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(UIntType x0)",
"line" : 626}
,
{
"name" : "seed",
"kind" : "function",
"type" : "void(UIntType x0)",
"line" : 636}
,
{
"name" : "front",
"kind" : "function",
"type" : "UIntType()",
"line" : 653}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 667}
,
{
"name" : "save",
"kind" : "function",
"type" : "typeof(this)()",
"line" : 713}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(ref const XorshiftEngine rhs)",
"line" : 723}
,
{
"name" : "sanitizeSeeds",
"kind" : "function",
"type" : "void(ref UIntType[Size] seeds)",
"line" : 731}
]
}
]
}
,
{
"name" : "Xorshift32",
"kind" : "alias",
"type" : "XorshiftEngine!(uint,32,13,17,5)",
"line" : 769}
,
{
"name" : "Xorshift64",
"kind" : "alias",
"type" : "XorshiftEngine!(uint,64,10,13,10)",
"line" : 770}
,
{
"name" : "Xorshift96",
"kind" : "alias",
"type" : "XorshiftEngine!(uint,96,10,5,26)",
"line" : 771}
,
{
"name" : "Xorshift128",
"kind" : "alias",
"line" : 772}
,
{
"name" : "Xorshift160",
"kind" : "alias",
"type" : "XorshiftEngine!(uint,160,2,1,4)",
"line" : 773}
,
{
"name" : "Xorshift192",
"kind" : "alias",
"type" : "XorshiftEngine!(uint,192,2,1,4)",
"line" : 774}
,
{
"name" : "Xorshift",
"kind" : "alias",
"type" : "XorshiftEngine!(uint,128,11,8,19)",
"line" : 775}
,
{
"name" : "unpredictableSeed",
"kind" : "function",
"type" : "uint()",
"line" : 817}
,
{
"name" : "Random",
"kind" : "alias",
"line" : 845}
,
{
"name" : "rndGen",
"kind" : "function",
"type" : "ref MersenneTwisterEngine!(uint,32,624,397,31,-1727483681u,11,7,-1658038656u,15,-272236544u,18)()",
"line" : 852}
,
{
"name" : "uniform(string boundaries = \"[)\",T1,T2) if (!is(CommonType!(T1,T2) == void))",
"kind" : "template",
"line" : 883,
"members" : [
{
"name" : "uniform",
"kind" : "function",
"type" : "(T1 a, T2 b)",
"line" : 883}
]
}
,
{
"name" : "uniform(string boundaries = \"[)\",T1,T2,UniformRandomNumberGenerator) if (isFloatingPoint!(CommonType!(T1,T2)))",
"kind" : "template",
"line" : 920,
"members" : [
{
"name" : "uniform",
"kind" : "function",
"type" : "(T1 a, T2 b, ref UniformRandomNumberGenerator urng)",
"line" : 920}
]
}
,
{
"name" : "uniform(string boundaries = \"[)\",T1,T2,UniformRandomNumberGenerator) if (isIntegral!(CommonType!(T1,T2)) || isSomeChar!(CommonType!(T1,T2)))",
"kind" : "template",
"line" : 953,
"members" : [
{
"name" : "uniform",
"kind" : "function",
"type" : "(T1 a, T2 b, ref UniformRandomNumberGenerator urng)",
"line" : 953}
]
}
,
{
"name" : "uniform(T,UniformRandomNumberGenerator) if (isIntegral!(T) || isSomeChar!(T))",
"kind" : "template",
"line" : 1033,
"members" : [
{
"name" : "uniform",
"kind" : "function",
"type" : "(ref UniformRandomNumberGenerator urng)",
"line" : 1033}
]
}
,
{
"name" : "uniform(T) if (isIntegral!(T) || isSomeChar!(T))",
"kind" : "template",
"line" : 1052,
"members" : [
{
"name" : "uniform",
"kind" : "function",
"type" : "()",
"line" : 1052}
]
}
,
{
"name" : "uniformDistribution(F = double)",
"kind" : "template",
"line" : 1075,
"members" : [
{
"name" : "uniformDistribution",
"kind" : "function",
"type" : "F[](size_t n, F[] useThis = null)",
"line" : 1075}
]
}
,
{
"name" : "randomShuffle(Range,RandomGen = Random)",
"kind" : "template",
"line" : 1102,
"members" : [
{
"name" : "randomShuffle",
"kind" : "function",
"type" : "void(Range r, ref RandomGen gen = rndGen)",
"line" : 1102}
]
}
,
{
"name" : "dice(Rng,Num) if (isNumeric!(Num) && isForwardRange!(Rng))",
"kind" : "template",
"line" : 1135,
"members" : [
{
"name" : "dice",
"kind" : "function",
"type" : "size_t(ref Rng rnd, Num[] proportions...)",
"line" : 1135}
]
}
,
{
"name" : "dice(R,Range) if (isForwardRange!(Range) && isNumeric!(ElementType!(Range)) && !isArray!(Range))",
"kind" : "template",
"line" : 1142,
"members" : [
{
"name" : "dice",
"kind" : "function",
"type" : "size_t(ref R rnd, Range proportions)",
"line" : 1142}
]
}
,
{
"name" : "dice(Range) if (isForwardRange!(Range) && isNumeric!(ElementType!(Range)) && !isArray!(Range))",
"kind" : "template",
"line" : 1149,
"members" : [
{
"name" : "dice",
"kind" : "function",
"type" : "size_t(Range proportions)",
"line" : 1149}
]
}
,
{
"name" : "dice(Num) if (isNumeric!(Num))",
"kind" : "template",
"line" : 1156,
"members" : [
{
"name" : "dice",
"kind" : "function",
"type" : "size_t(Num[] proportions...)",
"line" : 1156}
]
}
,
{
"name" : "diceImpl(Rng,Range) if (isForwardRange!(Range) && isNumeric!(ElementType!(Range)) && isForwardRange!(Rng))",
"kind" : "template",
"line" : 1162,
"members" : [
{
"name" : "diceImpl",
"kind" : "function",
"type" : "size_t(ref Rng rng, Range proportions)",
"line" : 1162}
]
}
,
{
"name" : "RandomCover(Range,Random)",
"kind" : "struct",
"line" : 1208,
"members" : [
{
"name" : "RandomCover",
"kind" : "struct",
"line" : 1208,
"members" : [
{
"name" : "_input",
"kind" : "variable",
"type" : "Range",
"line" : 1209}
,
{
"name" : "_rnd",
"kind" : "variable",
"type" : "Random",
"line" : 1210}
,
{
"name" : "_chosen",
"kind" : "variable",
"type" : "bool[]",
"line" : 1211}
,
{
"name" : "_current",
"kind" : "variable",
"type" : "uint",
"line" : 1212}
,
{
"name" : "_alreadyChosen",
"kind" : "variable",
"type" : "uint",
"line" : 1213}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Range input, Random rnd)",
"line" : 1215}
,
{
"name" : "front",
"kind" : "function",
"type" : "@property ()",
"line" : 1230}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 1234}
,
{
"name" : "save",
"kind" : "function",
"type" : "typeof(this)()",
"line" : 1263}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 1271}
]
}
]
}
,
{
"name" : "randomCover(Range,Random)",
"kind" : "template",
"line" : 1275,
"members" : [
{
"name" : "randomCover",
"kind" : "function",
"type" : "RandomCover!(Range,Random)(Range r, Random rnd)",
"line" : 1275}
]
}
,
{
"name" : "RandomSample(R)",
"kind" : "struct",
"line" : 1322,
"members" : [
{
"name" : "RandomSample",
"kind" : "struct",
"line" : 1322,
"members" : [
{
"name" : "_available",
"kind" : "variable",
"type" : "size_t",
"line" : 1323}
,
{
"name" : "_toSelect",
"kind" : "variable",
"type" : "size_t",
"line" : 1323}
,
{
"name" : "_input",
"kind" : "variable",
"type" : "R",
"line" : 1324}
,
{
"name" : "_index",
"kind" : "variable",
"type" : "size_t",
"line" : 1325}
,
{
"name" : "byRef",
"kind" : "variable",
"type" : "bool",
"line" : 1326}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(R input, size_t howMany, size_t total)",
"line" : 1338}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 1352}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 1365}
,
{
"name" : "save",
"kind" : "function",
"type" : "typeof(this)()",
"line" : 1375}
,
{
"name" : "length",
"kind" : "function",
"type" : "size_t()",
"line" : 1383}
,
{
"name" : "index",
"kind" : "function",
"type" : "size_t()",
"line" : 1391}
,
{
"name" : "prime",
"kind" : "function",
"type" : "void()",
"line" : 1396}
]
}
]
}
,
{
"name" : "randomSample(R)",
"kind" : "template",
"line" : 1419,
"members" : [
{
"name" : "randomSample",
"kind" : "function",
"type" : "RandomSample!(R)(R r, size_t n, size_t total)",
"line" : 1419}
]
}
,
{
"name" : "randomSample(R)",
"kind" : "template",
"line" : 1425,
"members" : [
{
"name" : "randomSample",
"kind" : "function",
"type" : "RandomSample!(R)(R r, size_t n)",
"line" : 1425}
]
}
,
{
"name" : "seed",
"kind" : "variable",
"type" : "uint",
"line" : 1451}
,
{
"name" : "index",
"kind" : "variable",
"type" : "uint",
"line" : 1452}
,
{
"name" : "rand_seed",
"kind" : "function",
"type" : "void(uint seed, uint index)",
"line" : 1471}
,
{
"name" : "rand",
"kind" : "function",
"type" : "uint()",
"line" : 1483}
]
}
,
{
"name" : "std.range",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/range.d",
"members" : [
{
"name" : "dummyRanges",
"kind" : "variable",
"type" : "string",
"line" : 165}
,
{
"name" : "isInputRange(R)",
"kind" : "template",
"line" : 221,
"members" : [
{
"name" : "isInputRange",
"kind" : "variable",
"type" : "bool",
"line" : 223}
]
}
,
{
"name" : "put(R,E)",
"kind" : "template",
"line" : 278,
"members" : [
{
"name" : "put",
"kind" : "function",
"type" : "void(ref R r, E e)",
"line" : 278}
]
}
,
{
"name" : "isOutputRange(R,E)",
"kind" : "template",
"line" : 404,
"members" : [
{
"name" : "isOutputRange",
"kind" : "variable",
"type" : "bool",
"line" : 406}
]
}
,
{
"name" : "isForwardRange(R)",
"kind" : "template",
"line" : 453,
"members" : [
{
"name" : "isForwardRange",
"kind" : "variable",
"type" : "bool",
"line" : 455}
]
}
,
{
"name" : "isBidirectionalRange(R)",
"kind" : "template",
"line" : 491,
"members" : [
{
"name" : "isBidirectionalRange",
"kind" : "variable",
"type" : "bool",
"line" : 493}
]
}
,
{
"name" : "isRandomAccessRange(R)",
"kind" : "template",
"line" : 551,
"members" : [
{
"name" : "isRandomAccessRange",
"kind" : "variable",
"type" : "bool",
"line" : 553}
]
}
,
{
"name" : "hasMobileElements(R)",
"kind" : "template",
"line" : 603,
"members" : [
{
"name" : "hasMobileElements",
"kind" : "variable",
"type" : "bool",
"line" : 605}
]
}
,
{
"name" : "ElementType(R)",
"kind" : "template",
"line" : 634,
"members" : [
]
}
,
{
"name" : "ElementEncodingType(R)",
"kind" : "template",
"line" : 662,
"members" : [
]
}
,
{
"name" : "hasSwappableElements(R)",
"kind" : "template",
"line" : 697,
"members" : [
{
"name" : "hasSwappableElements",
"kind" : "variable",
"type" : "bool",
"line" : 699}
]
}
,
{
"name" : "hasAssignableElements(R)",
"kind" : "template",
"line" : 726,
"members" : [
{
"name" : "hasAssignableElements",
"kind" : "variable",
"type" : "bool",
"line" : 728}
]
}
,
{
"name" : "hasLvalueElements(R)",
"kind" : "template",
"line" : 748,
"members" : [
{
"name" : "hasLvalueElements",
"kind" : "variable",
"type" : "bool",
"line" : 750}
]
}
,
{
"name" : "hasLength(R)",
"kind" : "template",
"line" : 774,
"members" : [
{
"name" : "hasLength",
"kind" : "variable",
"type" : "bool",
"line" : 776}
]
}
,
{
"name" : "isInfinite(Range)",
"kind" : "template",
"line" : 807,
"members" : [
]
}
,
{
"name" : "hasSlicing(Range)",
"kind" : "template",
"line" : 832,
"members" : [
{
"name" : "hasSlicing",
"kind" : "variable",
"type" : "bool",
"line" : 834}
]
}
,
{
"name" : "walkLength(Range) if (isInputRange!(Range))",
"kind" : "template",
"line" : 867,
"members" : [
{
"name" : "walkLength",
"kind" : "function",
"type" : "(Range range, const size_t upTo = size_t.max)",
"line" : 867}
]
}
,
{
"name" : "retro(Range) if (isBidirectionalRange!(Unqual!(Range)))",
"kind" : "template",
"line" : 907,
"members" : [
{
"name" : "retro",
"kind" : "function",
"type" : "(Range r)",
"line" : 907}
]
}
,
{
"name" : "stride(Range) if (isInputRange!(Unqual!(Range)))",
"kind" : "template",
"line" : 1105,
"members" : [
{
"name" : "stride",
"kind" : "function",
"type" : "(Range r, size_t n)",
"line" : 1105}
]
}
,
{
"name" : "chain(Ranges...) if (Ranges.length > 0 && allSatisfy!(isInputRange,staticMap!(Unqual,Ranges)))",
"kind" : "template",
"line" : 1444,
"members" : [
{
"name" : "chain",
"kind" : "function",
"type" : "(Ranges rs)",
"line" : 1444}
]
}
,
{
"name" : "roundRobin(Rs...) if (Rs.length > 1 && allSatisfy!(isInputRange,staticMap!(Unqual,Rs)))",
"kind" : "template",
"line" : 1861,
"members" : [
{
"name" : "roundRobin",
"kind" : "function",
"type" : "(Rs rs)",
"line" : 1861}
]
}
,
{
"name" : "radial(Range) if (isRandomAccessRange!(Unqual!(Range)) && hasLength!(Unqual!(Range)))",
"kind" : "template",
"line" : 1981,
"members" : [
{
"name" : "radial",
"kind" : "function",
"type" : "(Range r, size_t startingIndex)",
"line" : 1981}
]
}
,
{
"name" : "radial(R) if (isRandomAccessRange!(Unqual!(R)) && hasLength!(Unqual!(R)))",
"kind" : "template",
"line" : 1988,
"members" : [
{
"name" : "radial",
"kind" : "function",
"type" : "(R r)",
"line" : 1988}
]
}
,
{
"name" : "Take(Range) if (isInputRange!(Unqual!(Range)) && !(hasSlicing!(Unqual!(Range)) || is(Range T == Take!(T))))",
"kind" : "struct",
"line" : 2046,
"members" : [
{
"name" : "Take",
"kind" : "struct",
"line" : 2046,
"members" : [
{
"name" : "R",
"kind" : "alias",
"type" : "Unqual!(Range)",
"line" : 2047}
,
{
"name" : "source",
"kind" : "variable",
"type" : "R",
"line" : 2050}
,
{
"name" : "_maxAvailable",
"kind" : "variable",
"type" : "size_t",
"line" : 2052}
,
{
"name" : "byRef",
"kind" : "variable",
"type" : "bool",
"line" : 2053}
,
{
"name" : "Source",
"kind" : "alias",
"type" : "R",
"line" : 2055}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 2057}
,
{
"name" : "front",
"kind" : "function",
"type" : "@property ()",
"line" : 2063}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 2069}
,
{
"name" : "maxLength",
"kind" : "function",
"type" : "const size_t()",
"line" : 2177}
]
}
]
}
,
{
"name" : "Take(R) if (isInputRange!(Unqual!(R)) && (hasSlicing!(Unqual!(R)) || is(R T == Take!(T))))",
"kind" : "template",
"line" : 2185,
"members" : [
{
"name" : "Take",
"kind" : "alias",
"type" : "R",
"line" : 2188}
]
}
,
{
"name" : "take(R) if (isInputRange!(Unqual!(R)) && hasSlicing!(Unqual!(R)))",
"kind" : "template",
"line" : 2192,
"members" : [
{
"name" : "take",
"kind" : "function",
"type" : "Take!(R)(R input, size_t n)",
"line" : 2192}
]
}
,
{
"name" : "take(R) if (is(R T == Take!(T)))",
"kind" : "template",
"line" : 2210,
"members" : [
{
"name" : "take",
"kind" : "function",
"type" : "Take!(R)(R input, size_t n)",
"line" : 2210}
]
}
,
{
"name" : "take(R) if (isInputRange!(Unqual!(R)) && !hasSlicing!(Unqual!(R)) && !is(R T == Take!(T)))",
"kind" : "template",
"line" : 2217,
"members" : [
{
"name" : "take",
"kind" : "function",
"type" : "Take!(R)(R input, size_t n)",
"line" : 2217}
]
}
,
{
"name" : "takeExactly(R) if (isInputRange!(R) && !isRandomAccessRange!(R))",
"kind" : "template",
"line" : 2309,
"members" : [
{
"name" : "takeExactly",
"kind" : "function",
"type" : "(R range, size_t n)",
"line" : 2309}
]
}
,
{
"name" : "takeExactly(R) if (isRandomAccessRange!(R))",
"kind" : "template",
"line" : 2343,
"members" : [
{
"name" : "takeExactly",
"kind" : "function",
"type" : "(R range, size_t n)",
"line" : 2343}
]
}
,
{
"name" : "takeOne(R) if (isInputRange!(R))",
"kind" : "template",
"line" : 2401,
"members" : [
{
"name" : "takeOne",
"kind" : "function",
"type" : "(R source)",
"line" : 2401}
]
}
,
{
"name" : "takeNone(R) if (isInputRange!(R))",
"kind" : "template",
"line" : 2435,
"members" : [
{
"name" : "takeNone",
"kind" : "function",
"type" : "()",
"line" : 2435}
]
}
,
{
"name" : "popFrontN(Range) if (isInputRange!(Range))",
"kind" : "template",
"line" : 2473,
"members" : [
{
"name" : "popFrontN",
"kind" : "function",
"type" : "size_t(ref Range r, size_t n)",
"line" : 2473}
]
}
,
{
"name" : "popBackN(Range) if (isInputRange!(Range))",
"kind" : "template",
"line" : 2523,
"members" : [
{
"name" : "popBackN",
"kind" : "function",
"type" : "size_t(ref Range r, size_t n)",
"line" : 2523}
]
}
,
{
"name" : "Repeat(T)",
"kind" : "struct",
"line" : 2558,
"members" : [
{
"name" : "Repeat",
"kind" : "struct",
"line" : 2558,
"members" : [
{
"name" : "_value",
"kind" : "variable",
"type" : "T",
"line" : 2559}
,
{
"name" : "front",
"kind" : "function",
"type" : "T()",
"line" : 2561}
,
{
"name" : "back",
"kind" : "function",
"type" : "T()",
"line" : 2563}
,
{
"name" : "empty",
"kind" : "variable",
"type" : "bool",
"line" : 2565}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 2567}
,
{
"name" : "popBack",
"kind" : "function",
"type" : "void()",
"line" : 2569}
,
{
"name" : "save",
"kind" : "function",
"type" : "Repeat!(T)()",
"line" : 2571}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "T(size_t)",
"line" : 2573}
]
}
]
}
,
{
"name" : "repeat(T)",
"kind" : "template",
"line" : 2577,
"members" : [
{
"name" : "repeat",
"kind" : "function",
"type" : "Repeat!(T)(T value)",
"line" : 2577}
]
}
,
{
"name" : "repeat(T)",
"kind" : "template",
"line" : 2589,
"members" : [
{
"name" : "repeat",
"kind" : "function",
"type" : "Take!(Repeat!(T))(T value, size_t n)",
"line" : 2589}
]
}
,
{
"name" : "replicate(T)",
"kind" : "template",
"line" : 2595,
"members" : [
{
"name" : "replicate",
"kind" : "function",
"type" : "Take!(Repeat!(T))(T value, size_t n)",
"line" : 2595}
]
}
,
{
"name" : "Cycle(Range) if (isForwardRange!(Unqual!(Range)) && !isInfinite!(Unqual!(Range)))",
"kind" : "struct",
"line" : 2623,
"members" : [
{
"name" : "Cycle",
"kind" : "struct",
"line" : 2623,
"members" : [
{
"name" : "R",
"kind" : "alias",
"type" : "Unqual!(Range)",
"line" : 2624}
]
}
]
}
,
{
"name" : "Cycle(R) if (isInfinite!(R))",
"kind" : "template",
"line" : 2701,
"members" : [
{
"name" : "Cycle",
"kind" : "alias",
"type" : "R",
"line" : 2703}
]
}
,
{
"name" : "Cycle(R) if (isStaticArray!(R))",
"kind" : "struct",
"line" : 2708,
"members" : [
{
"name" : "Cycle",
"kind" : "struct",
"line" : 2708,
"members" : [
{
"name" : "ElementType",
"kind" : "alias",
"type" : "typeof(R[0])",
"line" : 2709}
,
{
"name" : "_ptr",
"kind" : "variable",
"type" : "ElementType*",
"line" : 2710}
,
{
"name" : "_index",
"kind" : "variable",
"type" : "size_t",
"line" : 2711}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(ref R input, size_t index = 0)",
"line" : 2713}
,
{
"name" : "front",
"kind" : "function",
"type" : "ElementType()",
"line" : 2719}
,
{
"name" : "empty",
"kind" : "variable",
"type" : "bool",
"line" : 2724}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 2726}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "ElementType(size_t n)",
"line" : 2727}
,
{
"name" : "save",
"kind" : "function",
"type" : "Cycle!(R)()",
"line" : 2732}
]
}
]
}
,
{
"name" : "cycle(R) if (isForwardRange!(Unqual!(R)) && !isInfinite!(Unqual!(R)))",
"kind" : "template",
"line" : 2738,
"members" : [
{
"name" : "cycle",
"kind" : "function",
"type" : "Cycle!(R)(R input)",
"line" : 2738}
]
}
,
{
"name" : "cycle(R) if (isRandomAccessRange!(Unqual!(R)) && !isInfinite!(Unqual!(R)))",
"kind" : "template",
"line" : 2745,
"members" : [
{
"name" : "cycle",
"kind" : "function",
"type" : "Cycle!(R)(R input, size_t index)",
"line" : 2745}
]
}
,
{
"name" : "cycle(R) if (isInfinite!(R))",
"kind" : "template",
"line" : 2752,
"members" : [
{
"name" : "cycle",
"kind" : "function",
"type" : "Cycle!(R)(R input)",
"line" : 2752}
]
}
,
{
"name" : "cycle(R) if (isStaticArray!(R))",
"kind" : "template",
"line" : 2758,
"members" : [
{
"name" : "cycle",
"kind" : "function",
"type" : "Cycle!(R)(ref R input, size_t index = 0)",
"line" : 2758}
]
}
,
{
"name" : "Zip(Ranges...) if (Ranges.length && allSatisfy!(isInputRange,staticMap!(Unqual,Ranges)))",
"kind" : "struct",
"line" : 2859,
"members" : [
{
"name" : "Zip",
"kind" : "struct",
"line" : 2859,
"members" : [
{
"name" : "R",
"kind" : "alias",
"type" : "staticMap!(Unqual,Ranges)",
"line" : 2860}
,
{
"name" : "ranges",
"kind" : "variable",
"type" : "Tuple!(R)",
"line" : 2861}
,
{
"name" : "ElementType",
"kind" : "alias",
"type" : "Tuple!(staticMap!(.ElementType,R))",
"line" : 2862}
,
{
"name" : "stoppingPolicy",
"kind" : "variable",
"type" : "StoppingPolicy",
"line" : 2863}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(R rs, StoppingPolicy s = StoppingPolicy.shortest)",
"line" : 2869}
,
{
"name" : "front",
"kind" : "function",
"type" : "ElementType()",
"line" : 2935}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 3062}
]
}
]
}
,
{
"name" : "zip(R...) if (allSatisfy!(isInputRange,staticMap!(Unqual,R)))",
"kind" : "template",
"line" : 3214,
"members" : [
{
"name" : "zip",
"kind" : "function",
"type" : "(R ranges)",
"line" : 3214}
]
}
,
{
"name" : "zip(R...) if (allSatisfy!(isInputRange,staticMap!(Unqual,R)))",
"kind" : "template",
"line" : 3221,
"members" : [
{
"name" : "zip",
"kind" : "function",
"type" : "(StoppingPolicy sp, R ranges)",
"line" : 3221}
]
}
,
{
"name" : "StoppingPolicy",
"kind" : "enum",
"line" : 3232,
"base" : "int",
"members" : [
{
"name" : "shortest",
"kind" : "enum member",
"line" : 3234}
,
{
"name" : "longest",
"kind" : "enum member",
"line" : 3236}
,
{
"name" : "requireSameLength",
"kind" : "enum member",
"line" : 3238}
]
}
,
{
"name" : "lockstepApply(Ranges...) if (Ranges.length > 0)",
"kind" : "template",
"line" : 3343,
"members" : [
{
"name" : "lockstepApply",
"kind" : "function",
"type" : "string(bool withIndex)",
"line" : 3343}
]
}
,
{
"name" : "Lockstep(Ranges...) if (Ranges.length > 1 && allSatisfy!(isInputRange,staticMap!(Unqual,Ranges)))",
"kind" : "struct",
"line" : 3480,
"members" : [
{
"name" : "Lockstep",
"kind" : "struct",
"line" : 3480,
"members" : [
{
"name" : "R",
"kind" : "alias",
"type" : "staticMap!(Unqual,Ranges)",
"line" : 3482}
,
{
"name" : "_ranges",
"kind" : "variable",
"type" : "R",
"line" : 3483}
,
{
"name" : "_s",
"kind" : "variable",
"type" : "StoppingPolicy",
"line" : 3484}
,
{
"name" : "enforceAllEmpty",
"kind" : "function",
"type" : "void()",
"line" : 3486}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(R ranges, StoppingPolicy s = StoppingPolicy.shortest)",
"line" : 3493}
]
}
]
}
,
{
"name" : "Lockstep(Range)",
"kind" : "template",
"line" : 3507,
"members" : [
{
"name" : "Lockstep",
"kind" : "alias",
"type" : "Range",
"line" : 3509}
]
}
,
{
"name" : "lockstep(Args...) if (allSatisfy!(isInputRange,staticMap!(Unqual,Args)) || allSatisfy!(isInputRange,staticMap!(Unqual,Args[0 .. __dollar - 1])) && is(Args[__dollar - 1] == StoppingPolicy))",
"kind" : "template",
"line" : 3525,
"members" : [
{
"name" : "lockstep",
"kind" : "function",
"type" : "(Args args)",
"line" : 3525}
]
}
,
{
"name" : "Recurrence(alias fun,StateType,ulong stateSize)",
"kind" : "struct",
"line" : 3655,
"members" : [
{
"name" : "Recurrence",
"kind" : "struct",
"line" : 3655,
"members" : [
{
"name" : "_state",
"kind" : "variable",
"type" : "StateType[stateSize]",
"line" : 3656}
,
{
"name" : "_n",
"kind" : "variable",
"type" : "size_t",
"line" : 3657}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(StateType[stateSize] initial)",
"line" : 3659}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 3661}
,
{
"name" : "front",
"kind" : "function",
"type" : "StateType()",
"line" : 3671}
,
{
"name" : "save",
"kind" : "function",
"type" : "typeof(this)()",
"line" : 3676}
,
{
"name" : "empty",
"kind" : "variable",
"type" : "bool",
"line" : 3681}
]
}
]
}
,
{
"name" : "recurrence(alias fun,State...)",
"kind" : "template",
"line" : 3686,
"members" : [
{
"name" : "recurrence",
"kind" : "function",
"type" : "Recurrence!(fun,CommonType!(State),State.length)(State initial)",
"line" : 3686}
]
}
,
{
"name" : "Sequence(alias fun,State)",
"kind" : "struct",
"line" : 3734,
"members" : [
{
"name" : "Sequence",
"kind" : "struct",
"line" : 3734,
"members" : [
{
"name" : "compute",
"kind" : "alias",
"type" : "binaryFun!(fun,\"a\",\"n\")",
"line" : 3736}
,
{
"name" : "ElementType",
"kind" : "alias",
"type" : "typeof(compute(State.init,cast(size_t)1))",
"line" : 3737}
,
{
"name" : "_state",
"kind" : "variable",
"type" : "State",
"line" : 3738}
,
{
"name" : "_n",
"kind" : "variable",
"type" : "size_t",
"line" : 3739}
,
{
"name" : "_cache",
"kind" : "variable",
"type" : "ElementType",
"line" : 3740}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(State initial, size_t n = 0)",
"line" : 3743}
,
{
"name" : "front",
"kind" : "function",
"type" : "ElementType()",
"line" : 3750}
,
{
"name" : "moveFront",
"kind" : "function",
"type" : "ElementType()",
"line" : 3756}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 3761}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "ElementType(size_t n)",
"line" : 3768}
,
{
"name" : "empty",
"kind" : "variable",
"type" : "bool",
"line" : 3774}
,
{
"name" : "save",
"kind" : "function",
"type" : "Sequence()",
"line" : 3776}
]
}
]
}
,
{
"name" : "sequence(alias fun,State...)",
"kind" : "template",
"line" : 3780,
"members" : [
{
"name" : "sequence",
"kind" : "function",
"type" : "Sequence!(fun,Tuple!(State))(State args)",
"line" : 3780}
]
}
,
{
"name" : "iota(B,E,S) if ((isIntegral!(CommonType!(B,E)) || isPointer!(CommonType!(B,E))) && isIntegral!(S))",
"kind" : "template",
"line" : 3838,
"members" : [
{
"name" : "iota",
"kind" : "function",
"type" : "(B begin, E end, S step)",
"line" : 3838}
]
}
,
{
"name" : "iota(B,E) if (isFloatingPoint!(CommonType!(B,E)))",
"kind" : "template",
"line" : 3911,
"members" : [
{
"name" : "iota",
"kind" : "function",
"type" : "(B begin, E end)",
"line" : 3911}
]
}
,
{
"name" : "iota(B,E) if (isIntegral!(CommonType!(B,E)) || isPointer!(CommonType!(B,E)))",
"kind" : "template",
"line" : 3918,
"members" : [
{
"name" : "iota",
"kind" : "function",
"type" : "(B begin, E end)",
"line" : 3918}
]
}
,
{
"name" : "iota(E)",
"kind" : "template",
"line" : 3974,
"members" : [
{
"name" : "iota",
"kind" : "function",
"type" : "(E end)",
"line" : 3974}
]
}
,
{
"name" : "iota(B,E,S) if (isFloatingPoint!(CommonType!(B,E,S)))",
"kind" : "template",
"line" : 3981,
"members" : [
{
"name" : "iota",
"kind" : "function",
"type" : "(B begin, E end, S step)",
"line" : 3981}
]
}
,
{
"name" : "TransverseOptions",
"kind" : "enum",
"line" : 4155,
"base" : "int",
"members" : [
{
"name" : "assumeJagged",
"kind" : "enum member",
"line" : 4160}
,
{
"name" : "enforceNotJagged",
"kind" : "enum member",
"line" : 4167}
,
{
"name" : "assumeNotJagged",
"kind" : "enum member",
"line" : 4173}
]
}
,
{
"name" : "FrontTransversal(Ror,TransverseOptions opt = TransverseOptions.assumeJagged)",
"kind" : "struct",
"line" : 4191,
"members" : [
{
"name" : "FrontTransversal",
"kind" : "struct",
"line" : 4191,
"members" : [
{
"name" : "RangeOfRanges",
"kind" : "alias",
"type" : "Unqual!(Ror)",
"line" : 4192}
,
{
"name" : "ElementType",
"kind" : "alias",
"type" : "typeof(RangeOfRanges.init.front().front())",
"line" : 4193}
,
{
"name" : "prime",
"kind" : "function",
"type" : "void()",
"line" : 4195}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(RangeOfRanges input)",
"line" : 4216}
,
{
"name" : "front",
"kind" : "function",
"type" : "@property ()",
"line" : 4250}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 4273}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "()",
"line" : 4373}
,
{
"name" : "_input",
"kind" : "variable",
"type" : "RangeOfRanges",
"line" : 4376}
]
}
]
}
,
{
"name" : "frontTransversal(TransverseOptions opt = TransverseOptions.assumeJagged,RangeOfRanges)",
"kind" : "template",
"line" : 4380,
"members" : [
{
"name" : "frontTransversal",
"kind" : "function",
"type" : "FrontTransversal!(RangeOfRanges,opt)(RangeOfRanges rr)",
"line" : 4380}
]
}
,
{
"name" : "Transversal(Ror,TransverseOptions opt = TransverseOptions.assumeJagged)",
"kind" : "struct",
"line" : 4463,
"members" : [
{
"name" : "Transversal",
"kind" : "struct",
"line" : 4463,
"members" : [
{
"name" : "RangeOfRanges",
"kind" : "alias",
"type" : "Unqual!(Ror)",
"line" : 4464}
,
{
"name" : "InnerRange",
"kind" : "alias",
"type" : "ElementType!(RangeOfRanges)",
"line" : 4465}
,
{
"name" : "E",
"kind" : "alias",
"type" : "ElementType!(InnerRange)",
"line" : 4466}
,
{
"name" : "prime",
"kind" : "function",
"type" : "void()",
"line" : 4468}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(RangeOfRanges input, size_t n)",
"line" : 4489}
,
{
"name" : "front",
"kind" : "function",
"type" : "@property ()",
"line" : 4522}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 4547}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "()",
"line" : 4650}
,
{
"name" : "_input",
"kind" : "variable",
"type" : "RangeOfRanges",
"line" : 4653}
,
{
"name" : "_n",
"kind" : "variable",
"type" : "size_t",
"line" : 4654}
]
}
]
}
,
{
"name" : "transversal(TransverseOptions opt = TransverseOptions.assumeJagged,RangeOfRanges)",
"kind" : "template",
"line" : 4658,
"members" : [
{
"name" : "transversal",
"kind" : "function",
"type" : "Transversal!(RangeOfRanges,opt)(RangeOfRanges rr, size_t n)",
"line" : 4658}
]
}
,
{
"name" : "Transposed(RangeOfRanges)",
"kind" : "struct",
"line" : 4722,
"members" : [
{
"name" : "Transposed",
"kind" : "struct",
"line" : 4722,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(RangeOfRanges input)",
"line" : 4725}
,
{
"name" : "front",
"kind" : "function",
"type" : "@property ()",
"line" : 4731}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 4735}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 4749}
,
{
"name" : "save",
"kind" : "function",
"type" : "Transposed()",
"line" : 4756}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "()",
"line" : 4761}
,
{
"name" : "_input",
"kind" : "variable",
"type" : "RangeOfRanges",
"line" : 4764}
]
}
]
}
,
{
"name" : "transposed(RangeOfRanges)",
"kind" : "template",
"line" : 4767,
"members" : [
{
"name" : "transposed",
"kind" : "function",
"type" : "(RangeOfRanges rr)",
"line" : 4767}
]
}
,
{
"name" : "moveFront(R)",
"kind" : "template",
"line" : 4792,
"members" : [
{
"name" : "moveFront",
"kind" : "function",
"type" : "ElementType!(R)(R r)",
"line" : 4792}
]
}
,
{
"name" : "moveBack(R)",
"kind" : "template",
"line" : 4822,
"members" : [
{
"name" : "moveBack",
"kind" : "function",
"type" : "ElementType!(R)(R r)",
"line" : 4822}
]
}
,
{
"name" : "moveAt(R)",
"kind" : "template",
"line" : 4858,
"members" : [
{
"name" : "moveAt",
"kind" : "function",
"type" : "ElementType!(R)(R r, size_t i)",
"line" : 4858}
]
}
,
{
"name" : "InputRange(E)",
"kind" : "interface",
"line" : 4936,
"members" : [
{
"name" : "InputRange",
"kind" : "interface",
"line" : 4936,
"members" : [
{
"name" : "front",
"kind" : "function",
"type" : "E()",
"line" : 4938}
,
{
"name" : "moveFront",
"kind" : "function",
"type" : "E()",
"line" : 4941}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 4944}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 4947}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(int delegate(ref E))",
"line" : 4966}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(int delegate(ref size_t, ref E))",
"line" : 4969}
]
}
]
}
,
{
"name" : "ForwardRange(E)",
"kind" : "interface",
"line" : 4974,
"members" : [
{
"name" : "ForwardRange",
"kind" : "interface",
"line" : 4974,
"members" : [
{
"name" : "save",
"kind" : "function",
"type" : "ForwardRange!(E)()",
"line" : 4976}
]
}
]
}
,
{
"name" : "BidirectionalRange(E)",
"kind" : "interface",
"line" : 4980,
"members" : [
{
"name" : "BidirectionalRange",
"kind" : "interface",
"line" : 4980,
"members" : [
{
"name" : "save",
"kind" : "function",
"type" : "BidirectionalRange!(E)()",
"line" : 4982}
,
{
"name" : "back",
"kind" : "function",
"type" : "E()",
"line" : 4985}
,
{
"name" : "moveBack",
"kind" : "function",
"type" : "E()",
"line" : 4988}
,
{
"name" : "popBack",
"kind" : "function",
"type" : "void()",
"line" : 4991}
]
}
]
}
,
{
"name" : "RandomAccessFinite(E)",
"kind" : "interface",
"line" : 4995,
"members" : [
{
"name" : "RandomAccessFinite",
"kind" : "interface",
"line" : 4995,
"members" : [
{
"name" : "save",
"kind" : "function",
"type" : "RandomAccessFinite!(E)()",
"line" : 4997}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "E(size_t)",
"line" : 5000}
,
{
"name" : "moveAt",
"kind" : "function",
"type" : "E(size_t)",
"line" : 5003}
,
{
"name" : "length",
"kind" : "function",
"type" : "size_t()",
"line" : 5006}
]
}
]
}
,
{
"name" : "RandomAccessInfinite(E)",
"kind" : "interface",
"line" : 5017,
"members" : [
{
"name" : "RandomAccessInfinite",
"kind" : "interface",
"line" : 5017,
"members" : [
{
"name" : "moveAt",
"kind" : "function",
"type" : "E(size_t)",
"line" : 5019}
,
{
"name" : "save",
"kind" : "function",
"type" : "RandomAccessInfinite!(E)()",
"line" : 5022}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "E(size_t)",
"line" : 5025}
]
}
]
}
,
{
"name" : "InputAssignable(E)",
"kind" : "interface",
"line" : 5029,
"members" : [
{
"name" : "InputAssignable",
"kind" : "interface",
"line" : 5029,
"members" : [
{
"name" : "front",
"kind" : "function",
"type" : "void(E newVal)",
"line" : 5031}
]
}
]
}
,
{
"name" : "ForwardAssignable(E)",
"kind" : "interface",
"line" : 5035,
"members" : [
{
"name" : "ForwardAssignable",
"kind" : "interface",
"line" : 5035,
"members" : [
{
"name" : "save",
"kind" : "function",
"type" : "ForwardAssignable!(E)()",
"line" : 5037}
]
}
]
}
,
{
"name" : "BidirectionalAssignable(E)",
"kind" : "interface",
"line" : 5041,
"members" : [
{
"name" : "BidirectionalAssignable",
"kind" : "interface",
"line" : 5041,
"members" : [
{
"name" : "save",
"kind" : "function",
"type" : "BidirectionalAssignable!(E)()",
"line" : 5043}
,
{
"name" : "back",
"kind" : "function",
"type" : "void(E newVal)",
"line" : 5046}
]
}
]
}
,
{
"name" : "RandomFiniteAssignable(E)",
"kind" : "interface",
"line" : 5050,
"members" : [
{
"name" : "RandomFiniteAssignable",
"kind" : "interface",
"line" : 5050,
"members" : [
{
"name" : "save",
"kind" : "function",
"type" : "RandomFiniteAssignable!(E)()",
"line" : 5052}
,
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "void(E val, size_t index)",
"line" : 5055}
]
}
]
}
,
{
"name" : "OutputRange(E)",
"kind" : "interface",
"line" : 5060,
"members" : [
{
"name" : "OutputRange",
"kind" : "interface",
"line" : 5060,
"members" : [
{
"name" : "put",
"kind" : "function",
"type" : "void(E)",
"line" : 5062}
]
}
]
}
,
{
"name" : "putMethods(E...)",
"kind" : "template",
"line" : 5067,
"members" : [
{
"name" : "putMethods",
"kind" : "function",
"type" : "string()",
"line" : 5067}
]
}
,
{
"name" : "OutputRangeObject(R,E...)",
"kind" : "class",
"line" : 5080,
"members" : [
{
"name" : "OutputRangeObject",
"kind" : "class",
"line" : 5080,
"members" : [
{
"name" : "_range",
"kind" : "variable",
"type" : "R",
"line" : 5083}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(R range)",
"line" : 5085}
]
}
]
}
,
{
"name" : "MostDerivedInputRange(R) if (isInputRange!(Unqual!(R)))",
"kind" : "template",
"line" : 5094,
"members" : [
{
"name" : "MostDerivedInputRange",
"kind" : "alias",
"type" : "MostDerivedInputRangeImpl!(Unqual!(R)).ret",
"line" : 5095}
]
}
,
{
"name" : "MostDerivedInputRangeImpl(R)",
"kind" : "template",
"line" : 5098,
"members" : [
{
"name" : "E",
"kind" : "alias",
"type" : "ElementType!(R)",
"line" : 5099}
]
}
,
{
"name" : "InputRangeObject(R) if (isInputRange!(Unqual!(R)))",
"kind" : "template",
"line" : 5134,
"members" : [
]
}
,
{
"name" : "inputRangeObject(R) if (isInputRange!(R))",
"kind" : "template",
"line" : 5254,
"members" : [
{
"name" : "inputRangeObject",
"kind" : "function",
"type" : "InputRangeObject!(R)(R range)",
"line" : 5254}
]
}
,
{
"name" : "outputRangeObject(E...)",
"kind" : "template",
"line" : 5274,
"members" : [
{
"name" : "outputRangeObject(R)",
"kind" : "template",
"line" : 5277,
"members" : [
{
"name" : "outputRangeObject",
"kind" : "function",
"type" : "OutputRangeObject!(R,E)(R range)",
"line" : 5277}
]
}
]
}
,
{
"name" : "SearchPolicy",
"kind" : "enum",
"line" : 5330,
"base" : "int",
"members" : [
{
"name" : "trot",
"kind" : "enum member",
"line" : 5340}
,
{
"name" : "gallop",
"kind" : "enum member",
"line" : 5350}
,
{
"name" : "binarySearch",
"kind" : "enum member",
"line" : 5361}
,
{
"name" : "trotBackwards",
"kind" : "enum member",
"line" : 5367}
,
{
"name" : "gallopBackwards",
"kind" : "enum member",
"line" : 5373}
]
}
,
{
"name" : "SortedRange(Range,alias pred = \"a < b\") if (isRandomAccessRange!(Range))",
"kind" : "struct",
"line" : 5418,
"members" : [
{
"name" : "SortedRange",
"kind" : "struct",
"line" : 5418,
"members" : [
{
"name" : "predFun",
"kind" : "alias",
"type" : "binaryFun!(pred)",
"line" : 5419}
,
{
"name" : "geq(L,R)",
"kind" : "template",
"line" : 5420,
"members" : [
{
"name" : "geq",
"kind" : "function",
"type" : "bool(L lhs, R rhs)",
"line" : 5420}
]
}
,
{
"name" : "gt(L,R)",
"kind" : "template",
"line" : 5424,
"members" : [
{
"name" : "gt",
"kind" : "function",
"type" : "bool(L lhs, R rhs)",
"line" : 5424}
]
}
,
{
"name" : "_input",
"kind" : "variable",
"type" : "Range",
"line" : 5428}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Range input)",
"line" : 5432}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 5450}
,
{
"name" : "save",
"kind" : "function",
"type" : "@property ()",
"line" : 5457}
,
{
"name" : "front",
"kind" : "function",
"type" : "@property ()",
"line" : 5466}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 5471}
,
{
"name" : "back",
"kind" : "function",
"type" : "@property ()",
"line" : 5478}
,
{
"name" : "popBack",
"kind" : "function",
"type" : "void()",
"line" : 5483}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "(size_t i)",
"line" : 5490}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "(size_t a, size_t b)",
"line" : 5496}
,
{
"name" : "length",
"kind" : "function",
"type" : "size_t()",
"line" : 5504}
,
{
"name" : "release",
"kind" : "function",
"type" : "()",
"line" : 5513}
,
{
"name" : "getTransitionIndex(SearchPolicy sp,alias test,V) if (sp == SearchPolicy.binarySearch)",
"kind" : "template",
"line" : 5520,
"members" : [
{
"name" : "getTransitionIndex",
"kind" : "function",
"type" : "size_t(V v)",
"line" : 5520}
]
}
,
{
"name" : "getTransitionIndex(SearchPolicy sp,alias test,V) if (sp == SearchPolicy.trot || sp == SearchPolicy.gallop)",
"kind" : "template",
"line" : 5541,
"members" : [
{
"name" : "getTransitionIndex",
"kind" : "function",
"type" : "size_t(V v)",
"line" : 5541}
]
}
,
{
"name" : "getTransitionIndex(SearchPolicy sp,alias test,V) if (sp == SearchPolicy.trotBackwards || sp == SearchPolicy.gallopBackwards)",
"kind" : "template",
"line" : 5573,
"members" : [
{
"name" : "getTransitionIndex",
"kind" : "function",
"type" : "size_t(V v)",
"line" : 5573}
]
}
,
{
"name" : "lowerBound(SearchPolicy sp = SearchPolicy.binarySearch,V) if (is(V : ElementType!(Range)))",
"kind" : "template",
"line" : 5620,
"members" : [
{
"name" : "lowerBound",
"kind" : "function",
"type" : "(V value)",
"line" : 5620}
]
}
,
{
"name" : "upperBound(SearchPolicy sp = SearchPolicy.binarySearch,V) if (is(V : ElementType!(Range)))",
"kind" : "template",
"line" : 5644,
"members" : [
{
"name" : "upperBound",
"kind" : "function",
"type" : "(V value)",
"line" : 5644}
]
}
,
{
"name" : "equalRange(V) if (is(V : ElementType!(Range)))",
"kind" : "template",
"line" : 5672,
"members" : [
{
"name" : "equalRange",
"kind" : "function",
"type" : "(V value)",
"line" : 5672}
]
}
,
{
"name" : "trisect(V) if (is(V : ElementType!(Range)))",
"kind" : "template",
"line" : 5727,
"members" : [
{
"name" : "trisect",
"kind" : "function",
"type" : "(V value)",
"line" : 5727}
]
}
,
{
"name" : "contains(V)",
"kind" : "template",
"line" : 5774,
"members" : [
{
"name" : "contains",
"kind" : "function",
"type" : "bool(V value)",
"line" : 5774}
]
}
,
{
"name" : "canFind",
"kind" : "alias",
"type" : "contains",
"line" : 5803}
]
}
]
}
,
{
"name" : "assumeSorted(alias pred = \"a < b\",R) if (isRandomAccessRange!(Unqual!(R)))",
"kind" : "template",
"line" : 5908,
"members" : [
{
"name" : "assumeSorted",
"kind" : "function",
"type" : "(R r)",
"line" : 5908}
]
}
]
}
,
{
"name" : "std.regex",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/regex.d",
"members" : [
{
"name" : "email",
"kind" : "variable",
"type" : "string",
"line" : 139}
,
{
"name" : "url",
"kind" : "variable",
"type" : "string",
"line" : 149}
,
{
"name" : "Regex(E) if (is(E == Unqual!(E)))",
"kind" : "struct",
"line" : 183,
"members" : [
{
"name" : "Regex",
"kind" : "struct",
"line" : 183,
"members" : [
{
"name" : "regmatch_t",
"kind" : "struct",
"line" : 186,
"members" : [
{
"name" : "startIdx",
"kind" : "variable",
"type" : "size_t",
"line" : 187}
,
{
"name" : "endIdx",
"kind" : "variable",
"type" : "size_t",
"line" : 187}
]
}
,
{
"name" : "REA",
"kind" : "enum",
"line" : 190,
"members" : [
{
"name" : "global",
"kind" : "enum member",
"line" : 191}
,
{
"name" : "ignoreCase",
"kind" : "enum member",
"line" : 192}
,
{
"name" : "multiline",
"kind" : "enum member",
"line" : 193}
,
{
"name" : "dotmatchlf",
"kind" : "enum member",
"line" : 195}
]
}
,
{
"name" : "inf",
"kind" : "variable",
"type" : "uint",
"line" : 197}
,
{
"name" : "re_nsub",
"kind" : "variable",
"type" : "uint",
"line" : 199}
,
{
"name" : "nCounters",
"kind" : "variable",
"type" : "uint",
"line" : 200}
,
{
"name" : "attributes",
"kind" : "variable",
"type" : "ubyte",
"line" : 201}
,
{
"name" : "program",
"kind" : "variable",
"type" : "immutable(ubyte)[]",
"line" : 202}
,
{
"name" : "REend",
"kind" : "enum member",
"line" : 208}
,
{
"name" : "REchar",
"kind" : "enum member",
"line" : 209}
,
{
"name" : "REichar",
"kind" : "enum member",
"line" : 210}
,
{
"name" : "REdchar",
"kind" : "enum member",
"line" : 211}
,
{
"name" : "REidchar",
"kind" : "enum member",
"line" : 212}
,
{
"name" : "REanychar",
"kind" : "enum member",
"line" : 213}
,
{
"name" : "REanystar",
"kind" : "enum member",
"line" : 214}
,
{
"name" : "REanystarg",
"kind" : "enum member",
"line" : 215}
,
{
"name" : "REstring",
"kind" : "enum member",
"line" : 217}
,
{
"name" : "REistring",
"kind" : "enum member",
"line" : 218}
,
{
"name" : "REtestbit",
"kind" : "enum member",
"line" : 219}
,
{
"name" : "REbit",
"kind" : "enum member",
"line" : 220}
,
{
"name" : "REnotbit",
"kind" : "enum member",
"line" : 221}
,
{
"name" : "RErange",
"kind" : "enum member",
"line" : 222}
,
{
"name" : "REnotrange",
"kind" : "enum member",
"line" : 223}
,
{
"name" : "REor",
"kind" : "enum member",
"line" : 224}
,
{
"name" : "REplus",
"kind" : "enum member",
"line" : 225}
,
{
"name" : "REstar",
"kind" : "enum member",
"line" : 226}
,
{
"name" : "REquest",
"kind" : "enum member",
"line" : 227}
,
{
"name" : "REcounter",
"kind" : "enum member",
"line" : 228}
,
{
"name" : "REloopg",
"kind" : "enum member",
"line" : 229}
,
{
"name" : "REloop",
"kind" : "enum member",
"line" : 230}
,
{
"name" : "REbol",
"kind" : "enum member",
"line" : 231}
,
{
"name" : "REeol",
"kind" : "enum member",
"line" : 232}
,
{
"name" : "REsave",
"kind" : "enum member",
"line" : 233}
,
{
"name" : "REgoto",
"kind" : "enum member",
"line" : 234}
,
{
"name" : "REret",
"kind" : "enum member",
"line" : 235}
,
{
"name" : "RElookahead",
"kind" : "enum member",
"line" : 237}
,
{
"name" : "REneglookahead",
"kind" : "enum member",
"line" : 238}
,
{
"name" : "RElookbehind",
"kind" : "enum member",
"line" : 239}
,
{
"name" : "REneglookbehind",
"kind" : "enum member",
"line" : 240}
,
{
"name" : "REwordboundary",
"kind" : "enum member",
"line" : 241}
,
{
"name" : "REnotwordboundary",
"kind" : "enum member",
"line" : 242}
,
{
"name" : "REdigit",
"kind" : "enum member",
"line" : 243}
,
{
"name" : "REnotdigit",
"kind" : "enum member",
"line" : 244}
,
{
"name" : "REspace",
"kind" : "enum member",
"line" : 245}
,
{
"name" : "REnotspace",
"kind" : "enum member",
"line" : 246}
,
{
"name" : "REword",
"kind" : "enum member",
"line" : 247}
,
{
"name" : "REnotword",
"kind" : "enum member",
"line" : 248}
,
{
"name" : "REbackref",
"kind" : "enum member",
"line" : 249}
,
{
"name" : "__ctor(String)",
"kind" : "template",
"line" : 268,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(String pattern, string attributes = null)",
"line" : 268}
]
}
,
{
"name" : "captures",
"kind" : "function",
"type" : "const uint()",
"line" : 294}
,
{
"name" : "compile(String)",
"kind" : "template",
"line" : 303,
"members" : [
{
"name" : "compile",
"kind" : "function",
"type" : "void(String pattern, string attributes)",
"line" : 303}
]
}
,
{
"name" : "error",
"kind" : "function",
"type" : "void(string msg)",
"line" : 346}
,
{
"name" : "fixup",
"kind" : "function",
"type" : "void(ubyte[] prog, size_t place, uint change)",
"line" : 352}
,
{
"name" : "postprocess",
"kind" : "function",
"type" : "void(ubyte[] prog)",
"line" : 454}
,
{
"name" : "parseRegex(String)",
"kind" : "template",
"line" : 561,
"members" : [
{
"name" : "parseRegex",
"kind" : "function",
"type" : "void(String pattern, ref size_t p, OutBuffer buf)",
"line" : 561}
]
}
,
{
"name" : "parsePiece(String)",
"kind" : "template",
"line" : 600,
"members" : [
{
"name" : "parsePiece",
"kind" : "function",
"type" : "void(String pattern, ref size_t p, OutBuffer buf)",
"line" : 600}
]
}
,
{
"name" : "parseAtom(String)",
"kind" : "template",
"line" : 684,
"members" : [
{
"name" : "parseAtom",
"kind" : "function",
"type" : "void(String pattern, ref size_t p, OutBuffer buf)",
"line" : 684}
]
}
,
{
"name" : "Range",
"kind" : "struct",
"line" : 914,
"members" : [
{
"name" : "maxc",
"kind" : "variable",
"type" : "size_t",
"line" : 915}
,
{
"name" : "maxb",
"kind" : "variable",
"type" : "size_t",
"line" : 916}
,
{
"name" : "buf",
"kind" : "variable",
"type" : "OutBuffer",
"line" : 917}
,
{
"name" : "base",
"kind" : "variable",
"type" : "ubyte*",
"line" : 918}
,
{
"name" : "bits",
"kind" : "variable",
"type" : "BitArray",
"line" : 919}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(OutBuffer buf)",
"line" : 921}
,
{
"name" : "setbitmax",
"kind" : "function",
"type" : "void(size_t u)",
"line" : 928}
,
{
"name" : "setbit2",
"kind" : "function",
"type" : "void(size_t u)",
"line" : 947}
]
}
,
{
"name" : "parseRange(String)",
"kind" : "template",
"line" : 956,
"members" : [
{
"name" : "parseRange",
"kind" : "function",
"type" : "int(in String pattern, ref size_t p, OutBuffer buf)",
"line" : 956}
]
}
,
{
"name" : "escape(String)",
"kind" : "template",
"line" : 1152,
"members" : [
{
"name" : "escape",
"kind" : "function",
"type" : "int(in String pattern, ref size_t p)",
"line" : 1152}
]
}
,
{
"name" : "isword",
"kind" : "function",
"type" : "int(dchar c)",
"line" : 1277}
,
{
"name" : "printProgram",
"kind" : "function",
"type" : "void(const(ubyte)[] prog = null)",
"line" : 1279}
]
}
]
}
,
{
"name" : "regex(String)",
"kind" : "template",
"line" : 1534,
"members" : [
{
"name" : "regex",
"kind" : "function",
"type" : "Regex!(Unqual!(typeof(String.init[0])))(String pattern, string flags = null)",
"line" : 1534}
]
}
,
{
"name" : "RegexMatch(Range = string)",
"kind" : "struct",
"line" : 1559,
"members" : [
{
"name" : "RegexMatch",
"kind" : "struct",
"line" : 1559,
"members" : [
{
"name" : "E",
"kind" : "alias",
"type" : "typeof(Range.init[0])",
"line" : 1560}
,
{
"name" : "Regex",
"kind" : "alias",
"type" : ".Regex!(Unqual!(E))",
"line" : 1562}
,
{
"name" : "regmatch_t",
"kind" : "alias",
"type" : "Regex.regmatch_t",
"line" : 1563}
,
{
"name" : "stackSize",
"kind" : "variable",
"line" : 1564}
,
{
"name" : "engine",
"kind" : "variable",
"type" : "Regex",
"line" : 1568}
,
{
"name" : "input",
"kind" : "variable",
"type" : "Range",
"line" : 1570}
,
{
"name" : "src",
"kind" : "variable",
"type" : "size_t",
"line" : 1571}
,
{
"name" : "src_start",
"kind" : "variable",
"type" : "size_t",
"line" : 1572}
,
{
"name" : "pmatch",
"kind" : "variable",
"type" : "regmatch_t[]",
"line" : 1573}
,
{
"name" : "curCounter",
"kind" : "variable",
"type" : "uint",
"line" : 1574}
,
{
"name" : "counters",
"kind" : "variable",
"type" : "uint[]",
"line" : 1575}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Regex engine)",
"line" : 1579}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Regex engine, Range input)",
"line" : 1591}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 1638}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 1644}
,
{
"name" : "front",
"kind" : "function",
"type" : "RegexMatch!(Range)()",
"line" : 1651}
,
{
"name" : "Captures",
"kind" : "struct",
"line" : 1701,
"members" : [
{
"name" : "input",
"kind" : "variable",
"type" : "Range",
"line" : 1702}
,
{
"name" : "matches",
"kind" : "variable",
"type" : "regmatch_t[]",
"line" : 1703}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "()",
"line" : 1706}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 1710}
,
{
"name" : "front",
"kind" : "function",
"type" : "Range()",
"line" : 1715}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 1720}
,
{
"name" : "back",
"kind" : "function",
"type" : "Range()",
"line" : 1722}
,
{
"name" : "popBack",
"kind" : "function",
"type" : "void()",
"line" : 1727}
,
{
"name" : "save",
"kind" : "function",
"type" : "typeof(this)()",
"line" : 1729}
,
{
"name" : "length",
"kind" : "function",
"type" : "size_t()",
"line" : 1734}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "Range(size_t n)",
"line" : 1739}
]
}
,
{
"name" : "captures",
"kind" : "function",
"type" : "Captures()",
"line" : 1764}
,
{
"name" : "pre",
"kind" : "function",
"type" : "Range()",
"line" : 1785}
,
{
"name" : "hit",
"kind" : "function",
"type" : "Range()",
"line" : 1794}
,
{
"name" : "post",
"kind" : "function",
"type" : "Range()",
"line" : 1806}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 1814}
,
{
"name" : "replaceAll(String)",
"kind" : "template",
"line" : 1826,
"members" : [
{
"name" : "replaceAll",
"kind" : "function",
"type" : "Range(String format)",
"line" : 1826}
]
}
,
{
"name" : "test",
"kind" : "function",
"type" : "bool(size_t startindex = size_t.max)",
"line" : 1887}
,
{
"name" : "chr",
"kind" : "function",
"type" : "bool(ref size_t si, E c)",
"line" : 1979}
,
{
"name" : "icmp",
"kind" : "function",
"type" : "sizediff_t(E[] a, E[] b)",
"line" : 1989}
,
{
"name" : "trymatch",
"kind" : "function",
"type" : "bool(uint pc, ubyte[] memory)",
"line" : 2027}
,
{
"name" : "replace(String)",
"kind" : "template",
"line" : 2591,
"members" : [
{
"name" : "replace",
"kind" : "function",
"type" : "Range(String format)",
"line" : 2591}
]
}
,
{
"name" : "replace3(String)",
"kind" : "template",
"line" : 2598,
"members" : [
{
"name" : "replace3",
"kind" : "function",
"type" : "Range(String format, Range input, regmatch_t[] pmatch)",
"line" : 2598}
]
}
,
{
"name" : "replaceOld",
"kind" : "function",
"type" : "string(string format)",
"line" : 2713}
]
}
]
}
,
{
"name" : "match(Range,Engine) if (is(Unqual!(Engine) == Regex!(Unqual!(typeof(Range.init[0])))))",
"kind" : "template",
"line" : 2790,
"members" : [
{
"name" : "match",
"kind" : "function",
"type" : "RegexMatch!(Range)(Range r, Engine engine)",
"line" : 2790}
]
}
,
{
"name" : "match(Range,E)",
"kind" : "template",
"line" : 2796,
"members" : [
{
"name" : "match",
"kind" : "function",
"type" : "RegexMatch!(Range)(Range r, E[] engine, string opt = null)",
"line" : 2796}
]
}
,
{
"name" : "replace(Range,Engine,String) if (is(Unqual!(Engine) == Regex!(Unqual!(typeof(Range.init[0])))))",
"kind" : "template",
"line" : 2876,
"members" : [
{
"name" : "replace",
"kind" : "function",
"type" : "Range(Range input, Engine regex, String format)",
"line" : 2876}
]
}
,
{
"name" : "_dummyTest(Engine)",
"kind" : "template",
"line" : 2895,
"members" : [
{
"name" : "_dummyTest",
"kind" : "function",
"type" : "bool(ref Engine r, size_t idx)",
"line" : 2895}
]
}
,
{
"name" : "_dummyAttributes(Engine)",
"kind" : "template",
"line" : 2901,
"members" : [
{
"name" : "_dummyAttributes",
"kind" : "function",
"type" : "ubyte(ref Engine r)",
"line" : 2901}
]
}
,
{
"name" : "replace(alias fun,Range,Regex)",
"kind" : "template",
"line" : 2930,
"members" : [
{
"name" : "replace",
"kind" : "function",
"type" : "Range(Range s, Regex rx)",
"line" : 2930}
]
}
,
{
"name" : "Splitter(Range)",
"kind" : "struct",
"line" : 3018,
"members" : [
{
"name" : "Splitter",
"kind" : "struct",
"line" : 3018,
"members" : [
{
"name" : "_input",
"kind" : "variable",
"type" : "Range",
"line" : 3019}
,
{
"name" : "_offset",
"kind" : "variable",
"type" : "size_t",
"line" : 3020}
,
{
"name" : "Rx",
"kind" : "alias",
"type" : "Regex!(Unqual!(typeof(Range.init[0])))",
"line" : 3021}
,
{
"name" : "_match",
"kind" : "variable",
"type" : "RegexMatch!(Range)",
"line" : 3023}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Range input, Rx separator)",
"line" : 3025}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "()",
"line" : 3046}
,
{
"name" : "front",
"kind" : "function",
"type" : "Range()",
"line" : 3050}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 3058}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 3063}
]
}
]
}
,
{
"name" : "splitter(Range,Regex) if (is(Unqual!(typeof(Range.init[0])) == char))",
"kind" : "template",
"line" : 3093,
"members" : [
{
"name" : "splitter",
"kind" : "function",
"type" : "Splitter!(Range)(Range r, Regex pat)",
"line" : 3093}
]
}
,
{
"name" : "split(String)",
"kind" : "template",
"line" : 3121,
"members" : [
{
"name" : "split",
"kind" : "function",
"type" : "String[](String input, Regex!(char) rx)",
"line" : 3121}
]
}
,
{
"name" : "loadFile(Types...)",
"kind" : "template",
"line" : 3471,
"members" : [
{
"name" : "loadFile(Char)",
"kind" : "template",
"line" : 3473,
"members" : [
{
"name" : "loadFile",
"kind" : "function",
"type" : "Tuple!(Types)[](string filename, Regex!(Char) rx)",
"line" : 3473}
]
}
]
}
]
}
,
{
"name" : "std.regexp",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/regexp.d",
"members" : [
{
"name" : "email",
"kind" : "variable",
"type" : "string",
"line" : 154}
,
{
"name" : "url",
"kind" : "variable",
"type" : "string",
"line" : 158}
,
{
"name" : "RegExpException",
"kind" : "class",
"line" : 164,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "RegExpException(string msg)",
"line" : 166}
]
}
,
{
"name" : "regmatch_t",
"kind" : "struct",
"line" : 173,
"members" : [
{
"name" : "rm_so",
"kind" : "variable",
"type" : "long",
"line" : 174}
,
{
"name" : "rm_eo",
"kind" : "variable",
"type" : "long",
"line" : 175}
]
}
,
{
"name" : "rchar",
"kind" : "alias",
"type" : "char",
"line" : 178}
,
{
"name" : "sub",
"kind" : "function",
"type" : "string(string s, string pattern, string format, string attributes = null)",
"line" : 205}
,
{
"name" : "sub",
"kind" : "function",
"type" : "string(string s, string pattern, string delegate(RegExp) dg, string attributes = null)",
"line" : 245}
,
{
"name" : "find",
"kind" : "function",
"type" : "long(string s, RegExp pattern)",
"line" : 334}
,
{
"name" : "find",
"kind" : "function",
"type" : "long(string s, string pattern, string attributes = null)",
"line" : 365}
,
{
"name" : "rfind",
"kind" : "function",
"type" : "long(string s, RegExp pattern)",
"line" : 397}
,
{
"name" : "rfind",
"kind" : "function",
"type" : "long(string s, string pattern, string attributes = null)",
"line" : 444}
,
{
"name" : "split",
"kind" : "function",
"type" : "string[](string s, RegExp pattern)",
"line" : 501}
,
{
"name" : "split",
"kind" : "function",
"type" : "string[](string s, string pattern, string attributes = null)",
"line" : 538}
,
{
"name" : "search",
"kind" : "function",
"type" : "RegExp(string s, string pattern, string attributes = null)",
"line" : 591}
,
{
"name" : "RegExp",
"kind" : "class",
"line" : 630,
"base" : "Object",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "RegExp(string pattern, string attributes = null)",
"line" : 646}
,
{
"name" : "opCall",
"kind" : "function",
"type" : "RegExp(string pattern, string attributes = null)",
"line" : 665}
,
{
"name" : "search",
"kind" : "function",
"type" : "RegExp(string string)",
"line" : 712}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref RegExp) dg)",
"line" : 720}
,
{
"name" : "opIndex",
"kind" : "function",
"type" : "string(ulong n)",
"line" : 760}
,
{
"name" : "match",
"kind" : "function",
"type" : "string(ulong n)",
"line" : 783}
,
{
"name" : "pre",
"kind" : "function",
"type" : "string()",
"line" : 791}
,
{
"name" : "post",
"kind" : "function",
"type" : "string()",
"line" : 799}
,
{
"name" : "re_nsub",
"kind" : "variable",
"type" : "uint",
"line" : 804}
,
{
"name" : "pmatch",
"kind" : "variable",
"type" : "regmatch_t[]",
"line" : 805}
,
{
"name" : "input",
"kind" : "variable",
"type" : "string",
"line" : 807}
,
{
"name" : "pattern",
"kind" : "variable",
"type" : "string",
"line" : 811}
,
{
"name" : "flags",
"kind" : "variable",
"type" : "string",
"line" : 813}
,
{
"name" : "errors",
"kind" : "variable",
"type" : "int",
"line" : 815}
,
{
"name" : "attributes",
"kind" : "variable",
"type" : "uint",
"line" : 817}
,
{
"name" : "REA",
"kind" : "enum",
"line" : 820,
"base" : "int",
"members" : [
{
"name" : "global",
"kind" : "enum member",
"line" : 821}
,
{
"name" : "ignoreCase",
"kind" : "enum member",
"line" : 822}
,
{
"name" : "multiline",
"kind" : "enum member",
"line" : 823}
,
{
"name" : "dotmatchlf",
"kind" : "enum member",
"line" : 825}
]
}
,
{
"name" : "src",
"kind" : "variable",
"type" : "ulong",
"line" : 830}
,
{
"name" : "src_start",
"kind" : "variable",
"type" : "ulong",
"line" : 831}
,
{
"name" : "p",
"kind" : "variable",
"type" : "ulong",
"line" : 832}
,
{
"name" : "gmatch",
"kind" : "variable",
"type" : "regmatch_t",
"line" : 833}
,
{
"name" : "program",
"kind" : "variable",
"type" : "const(ubyte)[]",
"line" : 836}
,
{
"name" : "buf",
"kind" : "variable",
"type" : "std.outbuffer.OutBuffer",
"line" : 837}
,
{
"name" : "REend",
"kind" : "enum member",
"line" : 848}
,
{
"name" : "REchar",
"kind" : "enum member",
"line" : 849}
,
{
"name" : "REichar",
"kind" : "enum member",
"line" : 850}
,
{
"name" : "REdchar",
"kind" : "enum member",
"line" : 851}
,
{
"name" : "REidchar",
"kind" : "enum member",
"line" : 852}
,
{
"name" : "REanychar",
"kind" : "enum member",
"line" : 853}
,
{
"name" : "REanystar",
"kind" : "enum member",
"line" : 854}
,
{
"name" : "REstring",
"kind" : "enum member",
"line" : 855}
,
{
"name" : "REistring",
"kind" : "enum member",
"line" : 856}
,
{
"name" : "REtestbit",
"kind" : "enum member",
"line" : 857}
,
{
"name" : "REbit",
"kind" : "enum member",
"line" : 858}
,
{
"name" : "REnotbit",
"kind" : "enum member",
"line" : 859}
,
{
"name" : "RErange",
"kind" : "enum member",
"line" : 860}
,
{
"name" : "REnotrange",
"kind" : "enum member",
"line" : 861}
,
{
"name" : "REor",
"kind" : "enum member",
"line" : 862}
,
{
"name" : "REplus",
"kind" : "enum member",
"line" : 863}
,
{
"name" : "REstar",
"kind" : "enum member",
"line" : 864}
,
{
"name" : "REquest",
"kind" : "enum member",
"line" : 865}
,
{
"name" : "REnm",
"kind" : "enum member",
"line" : 866}
,
{
"name" : "REnmq",
"kind" : "enum member",
"line" : 867}
,
{
"name" : "REbol",
"kind" : "enum member",
"line" : 868}
,
{
"name" : "REeol",
"kind" : "enum member",
"line" : 869}
,
{
"name" : "REparen",
"kind" : "enum member",
"line" : 870}
,
{
"name" : "REgoto",
"kind" : "enum member",
"line" : 871}
,
{
"name" : "REwordboundary",
"kind" : "enum member",
"line" : 873}
,
{
"name" : "REnotwordboundary",
"kind" : "enum member",
"line" : 874}
,
{
"name" : "REdigit",
"kind" : "enum member",
"line" : 875}
,
{
"name" : "REnotdigit",
"kind" : "enum member",
"line" : 876}
,
{
"name" : "REspace",
"kind" : "enum member",
"line" : 877}
,
{
"name" : "REnotspace",
"kind" : "enum member",
"line" : 878}
,
{
"name" : "REword",
"kind" : "enum member",
"line" : 879}
,
{
"name" : "REnotword",
"kind" : "enum member",
"line" : 880}
,
{
"name" : "REbackref",
"kind" : "enum member",
"line" : 881}
,
{
"name" : "isword",
"kind" : "function",
"type" : "int(dchar c)",
"line" : 885}
,
{
"name" : "inf",
"kind" : "variable",
"type" : "uint",
"line" : 887}
,
{
"name" : "compile",
"kind" : "function",
"type" : "void(string pattern, string attributes)",
"line" : 893}
,
{
"name" : "split",
"kind" : "function",
"type" : "string[](string s)",
"line" : 956}
,
{
"name" : "find",
"kind" : "function",
"type" : "long(string string)",
"line" : 1054}
,
{
"name" : "match",
"kind" : "function",
"type" : "string[](string s)",
"line" : 1083}
,
{
"name" : "replace",
"kind" : "function",
"type" : "string(string s, string format)",
"line" : 1140}
,
{
"name" : "exec",
"kind" : "function",
"type" : "string[](string s)",
"line" : 1220}
,
{
"name" : "exec",
"kind" : "function",
"type" : "string[]()",
"line" : 1236}
,
{
"name" : "test",
"kind" : "function",
"type" : "bool(string s)",
"line" : 1282}
,
{
"name" : "test",
"kind" : "function",
"type" : "int()",
"line" : 1292}
,
{
"name" : "test",
"kind" : "function",
"type" : "int(string s, ulong startindex)",
"line" : 1302}
,
{
"name" : "opEquals",
"kind" : "alias",
"line" : 1377}
,
{
"name" : "chr",
"kind" : "function",
"type" : "int(ref ulong si, char c)",
"line" : 1389}
,
{
"name" : "printProgram",
"kind" : "function",
"type" : "void(const(ubyte)[] prog)",
"line" : 1400}
,
{
"name" : "trymatch",
"kind" : "function",
"type" : "int(ulong pc, ulong pcend)",
"line" : 1609}
,
{
"name" : "parseRegexp",
"kind" : "function",
"type" : "int()",
"line" : 2139}
,
{
"name" : "parsePiece",
"kind" : "function",
"type" : "int()",
"line" : 2185}
,
{
"name" : "parseAtom",
"kind" : "function",
"type" : "int()",
"line" : 2297}
,
{
"name" : "Range",
"kind" : "class",
"line" : 2492,
"base" : "Object",
"members" : [
{
"name" : "maxc",
"kind" : "variable",
"type" : "ulong",
"line" : 2493}
,
{
"name" : "maxb",
"kind" : "variable",
"type" : "ulong",
"line" : 2494}
,
{
"name" : "buf",
"kind" : "variable",
"type" : "std.outbuffer.OutBuffer",
"line" : 2495}
,
{
"name" : "base",
"kind" : "variable",
"type" : "ubyte*",
"line" : 2496}
,
{
"name" : "bits",
"kind" : "variable",
"type" : "BitArray",
"line" : 2497}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Range(OutBuffer buf)",
"line" : 2499}
,
{
"name" : "setbitmax",
"kind" : "function",
"type" : "void(ulong u)",
"line" : 2506}
,
{
"name" : "setbit2",
"kind" : "function",
"type" : "void(ulong u)",
"line" : 2526}
,
{
"name" : "this",
"kind" : "variable",
"type" : "std.regexp.RegExp",
"line" : 2492}
]
}
,
{
"name" : "parseRange",
"kind" : "function",
"type" : "int()",
"line" : 2535}
,
{
"name" : "error",
"kind" : "function",
"type" : "void(string msg)",
"line" : 2730}
,
{
"name" : "escape",
"kind" : "function",
"type" : "int()",
"line" : 2740}
,
{
"name" : "optimize",
"kind" : "function",
"type" : "void()",
"line" : 2863}
,
{
"name" : "starrchars",
"kind" : "function",
"type" : "int(Range r, const(ubyte)[] prog)",
"line" : 2937}
,
{
"name" : "replace",
"kind" : "function",
"type" : "string(string format)",
"line" : 3121}
,
{
"name" : "replace3",
"kind" : "function",
"type" : "string(string format, string input, regmatch_t[] pmatch)",
"line" : 3128}
,
{
"name" : "replaceOld",
"kind" : "function",
"type" : "string(string format)",
"line" : 3240}
]
}
,
{
"name" : "Pattern(Char)",
"kind" : "struct",
"line" : 3315,
"members" : [
{
"name" : "Pattern",
"kind" : "struct",
"line" : 3315,
"members" : [
{
"name" : "pattern",
"kind" : "variable",
"type" : "immutable(Char)[]",
"line" : 3316}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(immutable(Char)[] pattern)",
"line" : 3318}
]
}
]
}
,
{
"name" : "pattern(Char)",
"kind" : "template",
"line" : 3324,
"members" : [
{
"name" : "pattern",
"kind" : "function",
"type" : "Pattern!(Char)(immutable(Char)[] pat)",
"line" : 3324}
]
}
,
{
"name" : "Splitter(Range)",
"kind" : "struct",
"line" : 3330,
"members" : [
{
"name" : "Splitter",
"kind" : "struct",
"line" : 3330,
"members" : [
{
"name" : "_input",
"kind" : "variable",
"type" : "Range",
"line" : 3331}
,
{
"name" : "_chunkLength",
"kind" : "variable",
"type" : "size_t",
"line" : 3332}
,
{
"name" : "_rx",
"kind" : "variable",
"type" : "RegExp",
"line" : 3333}
,
{
"name" : "search",
"kind" : "function",
"type" : "Range()",
"line" : 3335}
,
{
"name" : "advance",
"kind" : "function",
"type" : "void()",
"line" : 3342}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Range input, Pattern!(char) separator)",
"line" : 3350}
,
{
"name" : "opSlice",
"kind" : "function",
"type" : "()",
"line" : 3358}
,
{
"name" : "front",
"kind" : "function",
"type" : "Range()",
"line" : 3362}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 3367}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 3372}
]
}
]
}
,
{
"name" : "splitter(Range)",
"kind" : "template",
"line" : 3385,
"members" : [
{
"name" : "splitter",
"kind" : "function",
"type" : "Splitter!(Range)(Range r, Pattern!(char) pat)",
"line" : 3385}
]
}
]
}
,
{
"name" : "std.signals",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/signals.d",
"members" : [
{
"name" : "_d_toObject",
"kind" : "function",
"type" : "ObjectC (void* p)",
"line" : 71}
,
{
"name" : "DisposeEvt",
"kind" : "alias",
"type" : "void delegate(Object)",
"line" : 74}
,
{
"name" : "rt_attachDisposeEvent",
"kind" : "function",
"type" : "voidC (Object obj, void delegate(Object) evt)",
"line" : 75}
,
{
"name" : "rt_detachDisposeEvent",
"kind" : "function",
"type" : "voidC (Object obj, void delegate(Object) evt)",
"line" : 76}
,
{
"name" : "Signal(T1...)",
"kind" : "template",
"line" : 142,
"members" : [
{
"name" : "slot_t",
"kind" : "alias",
"type" : "void delegate(T1)",
"line" : 154}
,
{
"name" : "emit",
"kind" : "function",
"type" : "void(T1 i)",
"line" : 159}
,
{
"name" : "connect",
"kind" : "function",
"type" : "void(slot_t slot)",
"line" : 170}
,
{
"name" : "disconnect",
"kind" : "function",
"type" : "void(slot_t slot)",
"line" : 207}
,
{
"name" : "unhook",
"kind" : "function",
"type" : "void(Object o)",
"line" : 230}
,
{
"name" : "slots",
"kind" : "variable",
"type" : "slot_t[]",
"line" : 270}
,
{
"name" : "slots_idx",
"kind" : "variable",
"type" : "size_t",
"line" : 271}
]
}
,
{
"name" : "linkin",
"kind" : "function",
"type" : "void()",
"line" : 276}
]
}
,
{
"name" : "std.socket",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/socket.d",
"members" : [
{
"name" : "_ctimeval",
"kind" : "alias",
"line" : 106}
,
{
"name" : "socket_t",
"kind" : "typedef",
"type" : "socket_t",
"line" : 110,
"base" : "int"}
,
{
"name" : "_SOCKET_ERROR",
"kind" : "variable",
"type" : "const(int)",
"line" : 111}
,
{
"name" : "_lasterr",
"kind" : "function",
"type" : "int()",
"line" : 114}
,
{
"name" : "SocketException",
"kind" : "class",
"line" : 126,
"base" : "Exception",
"members" : [
{
"name" : "errorCode",
"kind" : "variable",
"type" : "int",
"line" : 128}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "SocketException(string msg, int err = 0)",
"line" : 130}
]
}
,
{
"name" : "getnameinfoPointer",
"kind" : "variable",
"type" : "int C function(const(sockaddr)*, uint, char*, uint, char*, uint, int)",
"line" : 184}
,
{
"name" : "AddressFamily",
"kind" : "enum",
"line" : 226,
"base" : "int",
"members" : [
{
"name" : "UNSPEC",
"kind" : "enum member",
"line" : 228}
,
{
"name" : "UNIX",
"kind" : "enum member",
"line" : 229}
,
{
"name" : "INET",
"kind" : "enum member",
"line" : 230}
,
{
"name" : "IPX",
"kind" : "enum member",
"line" : 231}
,
{
"name" : "APPLETALK",
"kind" : "enum member",
"line" : 232}
,
{
"name" : "INET6",
"kind" : "enum member",
"line" : 233}
]
}
,
{
"name" : "SocketType",
"kind" : "enum",
"line" : 240,
"base" : "int",
"members" : [
{
"name" : "STREAM",
"kind" : "enum member",
"line" : 242}
,
{
"name" : "DGRAM",
"kind" : "enum member",
"line" : 243}
,
{
"name" : "RAW",
"kind" : "enum member",
"line" : 244}
,
{
"name" : "RDM",
"kind" : "enum member",
"line" : 245}
,
{
"name" : "SEQPACKET",
"kind" : "enum member",
"line" : 246}
]
}
,
{
"name" : "ProtocolType",
"kind" : "enum",
"line" : 253,
"base" : "int",
"members" : [
{
"name" : "IP",
"kind" : "enum member",
"line" : 255}
,
{
"name" : "ICMP",
"kind" : "enum member",
"line" : 256}
,
{
"name" : "IGMP",
"kind" : "enum member",
"line" : 257}
,
{
"name" : "GGP",
"kind" : "enum member",
"line" : 258}
,
{
"name" : "TCP",
"kind" : "enum member",
"line" : 259}
,
{
"name" : "PUP",
"kind" : "enum member",
"line" : 260}
,
{
"name" : "UDP",
"kind" : "enum member",
"line" : 261}
,
{
"name" : "IDP",
"kind" : "enum member",
"line" : 262}
,
{
"name" : "IPV6",
"kind" : "enum member",
"line" : 263}
]
}
,
{
"name" : "Protocol",
"kind" : "class",
"line" : 271,
"base" : "Object",
"members" : [
{
"name" : "type",
"kind" : "variable",
"type" : "ProtocolType",
"line" : 272}
,
{
"name" : "name",
"kind" : "variable",
"type" : "string",
"line" : 273}
,
{
"name" : "aliases",
"kind" : "variable",
"type" : "string[]",
"line" : 274}
,
{
"name" : "populate",
"kind" : "function",
"type" : "void(protoent* proto)",
"line" : 277}
,
{
"name" : "getProtocolByName",
"kind" : "function",
"type" : "bool(string name)",
"line" : 305}
,
{
"name" : "getProtocolByType",
"kind" : "function",
"type" : "bool(ProtocolType type)",
"line" : 318}
]
}
,
{
"name" : "Service",
"kind" : "class",
"line" : 356,
"base" : "Object",
"members" : [
{
"name" : "name",
"kind" : "variable",
"type" : "string",
"line" : 358}
,
{
"name" : "aliases",
"kind" : "variable",
"type" : "string[]",
"line" : 359}
,
{
"name" : "port",
"kind" : "variable",
"type" : "ushort",
"line" : 360}
,
{
"name" : "protocolName",
"kind" : "variable",
"type" : "string",
"line" : 361}
,
{
"name" : "populate",
"kind" : "function",
"type" : "void(servent* serv)",
"line" : 364}
,
{
"name" : "getServiceByName",
"kind" : "function",
"type" : "bool(string name, string protocolName)",
"line" : 396}
,
{
"name" : "getServiceByName",
"kind" : "function",
"type" : "bool(string name)",
"line" : 409}
,
{
"name" : "getServiceByPort",
"kind" : "function",
"type" : "bool(ushort port, string protocolName)",
"line" : 421}
,
{
"name" : "getServiceByPort",
"kind" : "function",
"type" : "bool(ushort port)",
"line" : 434}
]
}
,
{
"name" : "HostException",
"kind" : "class",
"line" : 475,
"base" : "Exception",
"members" : [
{
"name" : "errorCode",
"kind" : "variable",
"type" : "int",
"line" : 477}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "HostException(string msg, int err = 0)",
"line" : 480}
]
}
,
{
"name" : "InternetHost",
"kind" : "class",
"line" : 491,
"base" : "Object",
"members" : [
{
"name" : "name",
"kind" : "variable",
"type" : "string",
"line" : 493}
,
{
"name" : "aliases",
"kind" : "variable",
"type" : "string[]",
"line" : 494}
,
{
"name" : "addrList",
"kind" : "variable",
"type" : "uint[]",
"line" : 495}
,
{
"name" : "validHostent",
"kind" : "function",
"type" : "void(hostent* he)",
"line" : 498}
,
{
"name" : "populate",
"kind" : "function",
"type" : "void(hostent* he)",
"line" : 505}
,
{
"name" : "getHostByName",
"kind" : "function",
"type" : "bool(string name)",
"line" : 557}
,
{
"name" : "getHostByAddr",
"kind" : "function",
"type" : "bool(uint addr)",
"line" : 591}
,
{
"name" : "getHostByAddr",
"kind" : "function",
"type" : "bool(string addr)",
"line" : 625}
]
}
,
{
"name" : "AddressException",
"kind" : "class",
"line" : 693,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "AddressException(string msg)",
"line" : 695}
]
}
,
{
"name" : "Address",
"kind" : "class",
"line" : 706,
"base" : "Object",
"members" : [
{
"name" : "name",
"kind" : "function",
"type" : "sockaddr*()",
"line" : 707}
,
{
"name" : "nameLen",
"kind" : "function",
"type" : "int()",
"line" : 708}
,
{
"name" : "addressFamily",
"kind" : "function",
"type" : "AddressFamily()",
"line" : 709}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 710}
]
}
,
{
"name" : "UnknownAddress",
"kind" : "class",
"line" : 716,
"base" : "Address",
"members" : [
{
"name" : "sa",
"kind" : "variable",
"type" : "sockaddr",
"line" : 719}
,
{
"name" : "name",
"kind" : "function",
"type" : "sockaddr*()",
"line" : 722}
,
{
"name" : "nameLen",
"kind" : "function",
"type" : "int()",
"line" : 728}
,
{
"name" : "addressFamily",
"kind" : "function",
"type" : "AddressFamily()",
"line" : 735}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 741}
]
}
,
{
"name" : "InternetAddress",
"kind" : "class",
"line" : 752,
"base" : "Address",
"members" : [
{
"name" : "sin",
"kind" : "variable",
"type" : "sockaddr_in",
"line" : 755}
,
{
"name" : "name",
"kind" : "function",
"type" : "sockaddr*()",
"line" : 758}
,
{
"name" : "nameLen",
"kind" : "function",
"type" : "int()",
"line" : 764}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "InternetAddress()",
"line" : 770}
,
{
"name" : "ADDR_ANY",
"kind" : "variable",
"type" : "uint",
"line" : 776}
,
{
"name" : "ADDR_NONE",
"kind" : "variable",
"type" : "uint",
"line" : 777}
,
{
"name" : "PORT_ANY",
"kind" : "variable",
"type" : "ushort",
"line" : 778}
,
{
"name" : "addressFamily",
"kind" : "function",
"type" : "AddressFamily()",
"line" : 781}
,
{
"name" : "port",
"kind" : "function",
"type" : "ushort()",
"line" : 787}
,
{
"name" : "addr",
"kind" : "function",
"type" : "uint()",
"line" : 793}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "InternetAddress(string addr, ushort port)",
"line" : 805}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "InternetAddress(uint addr, ushort port)",
"line" : 827}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "InternetAddress(ushort port)",
"line" : 835}
,
{
"name" : "toAddrString",
"kind" : "function",
"type" : "string()",
"line" : 843}
,
{
"name" : "toPortString",
"kind" : "function",
"type" : "string()",
"line" : 849}
,
{
"name" : "toHostNameString",
"kind" : "function",
"type" : "string()",
"line" : 858}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 884}
,
{
"name" : "parse",
"kind" : "function",
"type" : "uint(string addr)",
"line" : 895}
]
}
,
{
"name" : "SocketAcceptException",
"kind" : "class",
"line" : 918,
"base" : "SocketException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "SocketAcceptException(string msg, int err = 0)",
"line" : 920}
]
}
,
{
"name" : "SocketShutdown",
"kind" : "enum",
"line" : 927,
"base" : "int",
"members" : [
{
"name" : "RECEIVE",
"kind" : "enum member",
"line" : 929}
,
{
"name" : "SEND",
"kind" : "enum member",
"line" : 930}
,
{
"name" : "BOTH",
"kind" : "enum member",
"line" : 931}
]
}
,
{
"name" : "SocketFlags",
"kind" : "enum",
"line" : 936,
"base" : "int",
"members" : [
{
"name" : "NONE",
"kind" : "enum member",
"line" : 938}
,
{
"name" : "OOB",
"kind" : "enum member",
"line" : 940}
,
{
"name" : "PEEK",
"kind" : "enum member",
"line" : 941}
,
{
"name" : "DONTROUTE",
"kind" : "enum member",
"line" : 942}
]
}
,
{
"name" : "timeval",
"kind" : "struct",
"line" : 948,
"members" : [
{
"name" : "seconds",
"kind" : "variable",
"type" : "long",
"line" : 950}
,
{
"name" : "microseconds",
"kind" : "variable",
"type" : "long",
"line" : 951}
,
{
"name" : "tv_sec",
"kind" : "alias",
"line" : 956}
,
{
"name" : "tv_usec",
"kind" : "alias",
"line" : 957}
]
}
,
{
"name" : "SocketSet",
"kind" : "class",
"line" : 964,
"base" : "Object",
"members" : [
{
"name" : "maxsockets",
"kind" : "variable",
"type" : "uint",
"line" : 966}
,
{
"name" : "set",
"kind" : "variable",
"type" : "fd_set",
"line" : 967}
,
{
"name" : "maxfd",
"kind" : "variable",
"type" : "int",
"line" : 979}
,
{
"name" : "count",
"kind" : "variable",
"type" : "uint",
"line" : 980}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "SocketSet(uint max)",
"line" : 987}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "SocketSet()",
"line" : 994}
,
{
"name" : "reset",
"kind" : "function",
"type" : "void()",
"line" : 1000}
,
{
"name" : "add",
"kind" : "function",
"type" : "void(socket_t s)",
"line" : 1012}
,
{
"name" : "add",
"kind" : "function",
"type" : "void(Socket s)",
"line" : 1031}
,
{
"name" : "remove",
"kind" : "function",
"type" : "void(socket_t s)",
"line" : 1036}
,
{
"name" : "remove",
"kind" : "function",
"type" : "void(Socket s)",
"line" : 1048}
,
{
"name" : "isSet",
"kind" : "function",
"type" : "int(socket_t s)",
"line" : 1053}
,
{
"name" : "isSet",
"kind" : "function",
"type" : "int(Socket s)",
"line" : 1060}
,
{
"name" : "max",
"kind" : "function",
"type" : "uint()",
"line" : 1067}
,
{
"name" : "toFd_set",
"kind" : "function",
"type" : "fd_set*()",
"line" : 1073}
,
{
"name" : "selectn",
"kind" : "function",
"type" : "int()",
"line" : 1079}
]
}
,
{
"name" : "SocketOptionLevel",
"kind" : "enum",
"line" : 1094,
"base" : "int",
"members" : [
{
"name" : "SOCKET",
"kind" : "enum member",
"line" : 1096}
,
{
"name" : "IP",
"kind" : "enum member",
"line" : 1097}
,
{
"name" : "ICMP",
"kind" : "enum member",
"line" : 1098}
,
{
"name" : "IGMP",
"kind" : "enum member",
"line" : 1099}
,
{
"name" : "GGP",
"kind" : "enum member",
"line" : 1100}
,
{
"name" : "TCP",
"kind" : "enum member",
"line" : 1101}
,
{
"name" : "PUP",
"kind" : "enum member",
"line" : 1102}
,
{
"name" : "UDP",
"kind" : "enum member",
"line" : 1103}
,
{
"name" : "IDP",
"kind" : "enum member",
"line" : 1104}
,
{
"name" : "IPV6",
"kind" : "enum member",
"line" : 1105}
]
}
,
{
"name" : "linger",
"kind" : "struct",
"line" : 1110,
"members" : [
{
"name" : "on",
"kind" : "variable",
"type" : "int",
"line" : 1119}
,
{
"name" : "time",
"kind" : "variable",
"type" : "int",
"line" : 1120}
,
{
"name" : "l_onoff",
"kind" : "alias",
"line" : 1126}
,
{
"name" : "l_linger",
"kind" : "alias",
"line" : 1127}
]
}
,
{
"name" : "SocketOption",
"kind" : "enum",
"line" : 1133,
"base" : "int",
"members" : [
{
"name" : "DEBUG",
"kind" : "enum member",
"line" : 1135}
,
{
"name" : "BROADCAST",
"kind" : "enum member",
"line" : 1136}
,
{
"name" : "REUSEADDR",
"kind" : "enum member",
"line" : 1137}
,
{
"name" : "LINGER",
"kind" : "enum member",
"line" : 1138}
,
{
"name" : "OOBINLINE",
"kind" : "enum member",
"line" : 1139}
,
{
"name" : "SNDBUF",
"kind" : "enum member",
"line" : 1140}
,
{
"name" : "RCVBUF",
"kind" : "enum member",
"line" : 1141}
,
{
"name" : "DONTROUTE",
"kind" : "enum member",
"line" : 1142}
,
{
"name" : "SNDTIMEO",
"kind" : "enum member",
"line" : 1143}
,
{
"name" : "RCVTIMEO",
"kind" : "enum member",
"line" : 1144}
,
{
"name" : "TCP_NODELAY",
"kind" : "enum member",
"line" : 1147}
,
{
"name" : "IPV6_UNICAST_HOPS",
"kind" : "enum member",
"line" : 1150}
,
{
"name" : "IPV6_MULTICAST_IF",
"kind" : "enum member",
"line" : 1151}
,
{
"name" : "IPV6_MULTICAST_LOOP",
"kind" : "enum member",
"line" : 1152}
,
{
"name" : "IPV6_JOIN_GROUP",
"kind" : "enum member",
"line" : 1153}
,
{
"name" : "IPV6_LEAVE_GROUP",
"kind" : "enum member",
"line" : 1154}
]
}
,
{
"name" : "Socket",
"kind" : "class",
"line" : 1163,
"base" : "Object",
"members" : [
{
"name" : "sock",
"kind" : "variable",
"type" : "socket_t",
"line" : 1165}
,
{
"name" : "_family",
"kind" : "variable",
"type" : "AddressFamily",
"line" : 1166}
,
{
"name" : "WINSOCK_TIMEOUT_SKEW",
"kind" : "variable",
"type" : "int",
"line" : 1175}
,
{
"name" : "setSock",
"kind" : "function",
"type" : "void(socket_t handle)",
"line" : 1177}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Socket()",
"line" : 1192}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Socket(AddressFamily af, SocketType type, ProtocolType protocol)",
"line" : 1204}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Socket(AddressFamily af, SocketType type)",
"line" : 1217}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Socket(AddressFamily af, SocketType type, string protocolName)",
"line" : 1224}
,
{
"name" : "handle",
"kind" : "function",
"type" : "socket_t()",
"line" : 1241}
,
{
"name" : "blocking",
"kind" : "function",
"type" : "bool()",
"line" : 1253}
,
{
"name" : "blocking",
"kind" : "function",
"type" : "void(bool byes)",
"line" : 1266}
,
{
"name" : "addressFamily",
"kind" : "function",
"type" : "AddressFamily()",
"line" : 1295}
,
{
"name" : "isAlive",
"kind" : "function",
"type" : "bool()",
"line" : 1301}
,
{
"name" : "bind",
"kind" : "function",
"type" : "void(Address addr)",
"line" : 1309}
,
{
"name" : "connect",
"kind" : "function",
"type" : "void(Address to)",
"line" : 1320}
,
{
"name" : "listen",
"kind" : "function",
"type" : "void(int backlog)",
"line" : 1353}
,
{
"name" : "accepting",
"kind" : "function",
"type" : "Socket()",
"line" : 1367}
,
{
"name" : "accept",
"kind" : "function",
"type" : "Socket()",
"line" : 1377}
,
{
"name" : "shutdown",
"kind" : "function",
"type" : "void(SocketShutdown how)",
"line" : 1404}
,
{
"name" : "_close",
"kind" : "function",
"type" : "void(socket_t sock)",
"line" : 1410}
,
{
"name" : "close",
"kind" : "function",
"type" : "void()",
"line" : 1430}
,
{
"name" : "newFamilyObject",
"kind" : "function",
"type" : "Address()",
"line" : 1437}
,
{
"name" : "hostName",
"kind" : "function",
"type" : "string()",
"line" : 1454}
,
{
"name" : "remoteAddress",
"kind" : "function",
"type" : "Address()",
"line" : 1463}
,
{
"name" : "localAddress",
"kind" : "function",
"type" : "Address()",
"line" : 1474}
,
{
"name" : "ERROR",
"kind" : "variable",
"type" : "int",
"line" : 1485}
,
{
"name" : "send",
"kind" : "function",
"type" : "long(const(void)[] buf, SocketFlags flags)",
"line" : 1494}
,
{
"name" : "send",
"kind" : "function",
"type" : "long(const(void)[] buf)",
"line" : 1505}
,
{
"name" : "sendTo",
"kind" : "function",
"type" : "long(const(void)[] buf, SocketFlags flags, Address to)",
"line" : 1514}
,
{
"name" : "sendTo",
"kind" : "function",
"type" : "long(const(void)[] buf, Address to)",
"line" : 1524}
,
{
"name" : "sendTo",
"kind" : "function",
"type" : "long(const(void)[] buf, SocketFlags flags)",
"line" : 1532}
,
{
"name" : "sendTo",
"kind" : "function",
"type" : "long(const(void)[] buf)",
"line" : 1544}
,
{
"name" : "receive",
"kind" : "function",
"type" : "long(void[] buf, SocketFlags flags)",
"line" : 1557}
,
{
"name" : "receive",
"kind" : "function",
"type" : "long(void[] buf)",
"line" : 1565}
,
{
"name" : "receiveFrom",
"kind" : "function",
"type" : "long(void[] buf, SocketFlags flags, out Address from)",
"line" : 1578}
,
{
"name" : "receiveFrom",
"kind" : "function",
"type" : "long(void[] buf, out Address from)",
"line" : 1592}
,
{
"name" : "receiveFrom",
"kind" : "function",
"type" : "long(void[] buf, SocketFlags flags)",
"line" : 1601}
,
{
"name" : "receiveFrom",
"kind" : "function",
"type" : "long(void[] buf)",
"line" : 1613}
,
{
"name" : "getOption",
"kind" : "function",
"type" : "int(SocketOptionLevel level, SocketOption option, void[] result)",
"line" : 1621}
,
{
"name" : "getOption",
"kind" : "function",
"type" : "int(SocketOptionLevel level, SocketOption option, out int result)",
"line" : 1631}
,
{
"name" : "getOption",
"kind" : "function",
"type" : "int(SocketOptionLevel level, SocketOption option, out linger result)",
"line" : 1638}
,
{
"name" : "getOption",
"kind" : "function",
"type" : "void(SocketOptionLevel level, SocketOption option, out Duration result)",
"line" : 1645}
,
{
"name" : "setOption",
"kind" : "function",
"type" : "void(SocketOptionLevel level, SocketOption option, void[] value)",
"line" : 1670}
,
{
"name" : "setOption",
"kind" : "function",
"type" : "void(SocketOptionLevel level, SocketOption option, int value)",
"line" : 1679}
,
{
"name" : "setOption",
"kind" : "function",
"type" : "void(SocketOptionLevel level, SocketOption option, linger value)",
"line" : 1686}
,
{
"name" : "setOption",
"kind" : "function",
"type" : "void(SocketOptionLevel level, SocketOption option, Duration value)",
"line" : 1731}
,
{
"name" : "select",
"kind" : "function",
"type" : "int(SocketSet checkRead, SocketSet checkWrite, SocketSet checkError, timeval* tv)",
"line" : 1769}
,
{
"name" : "select",
"kind" : "function",
"type" : "int(SocketSet checkRead, SocketSet checkWrite, SocketSet checkError, int microseconds)",
"line" : 1859}
,
{
"name" : "select",
"kind" : "function",
"type" : "int(SocketSet checkRead, SocketSet checkWrite, SocketSet checkError)",
"line" : 1870}
]
}
,
{
"name" : "TcpSocket",
"kind" : "class",
"line" : 1887,
"base" : "Socket",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "TcpSocket(AddressFamily family)",
"line" : 1890}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "TcpSocket()",
"line" : 1896}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "TcpSocket(Address connectTo)",
"line" : 1904}
]
}
,
{
"name" : "UdpSocket",
"kind" : "class",
"line" : 1913,
"base" : "Socket",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "UdpSocket(AddressFamily family)",
"line" : 1916}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "UdpSocket()",
"line" : 1923}
]
}
,
{
"name" : "socketPair",
"kind" : "function",
"type" : "Socket[2LU]()",
"line" : 1949}
]
}
,
{
"name" : "std.socketstream",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/socketstream.d",
"members" : [
{
"name" : "SocketStream",
"kind" : "class",
"line" : 47,
"base" : "Stream",
"members" : [
{
"name" : "sock",
"kind" : "variable",
"type" : "std.socket.Socket",
"line" : 50}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "SocketStream(Socket sock, FileMode mode)",
"line" : 57}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "SocketStream(Socket sock)",
"line" : 70}
,
{
"name" : "socket",
"kind" : "function",
"type" : "Socket()",
"line" : 79}
,
{
"name" : "readBlock",
"kind" : "function",
"type" : "ulong(void* _buffer, ulong size)",
"line" : 87}
,
{
"name" : "writeBlock",
"kind" : "function",
"type" : "ulong(const const(void*) _buffer, ulong size)",
"line" : 105}
,
{
"name" : "seek",
"kind" : "function",
"type" : "ulong(long offset, SeekPos whence)",
"line" : 123}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 132}
,
{
"name" : "close",
"kind" : "function",
"type" : "void()",
"line" : 140}
]
}
]
}
,
{
"name" : "std.stdarg",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/stdarg.d",
"members" : [
]
}
,
{
"name" : "std.stdint",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/stdint.d",
"members" : [
]
}
,
{
"name" : "std.stdiobase",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/stdiobase.d",
"members" : [
{
"name" : "std_stdio_static_this",
"kind" : "function",
"type" : "voidC ()",
"line" : 19}
]
}
,
{
"name" : "std.stdio",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/stdio.d",
"members" : [
{
"name" : "fileno",
"kind" : "alias",
"line" : 36}
,
{
"name" : "fopen64",
"kind" : "function",
"type" : "shared(_iobuf)*C (const const(char*), const const(char*))",
"line" : 43}
,
{
"name" : "fputc_unlocked",
"kind" : "function",
"type" : "intC (int, _iobuf*)",
"line" : 102}
,
{
"name" : "fputwc_unlocked",
"kind" : "function",
"type" : "intC (dchar, _iobuf*)",
"line" : 103}
,
{
"name" : "fgetc_unlocked",
"kind" : "function",
"type" : "intC (_iobuf*)",
"line" : 104}
,
{
"name" : "fgetwc_unlocked",
"kind" : "function",
"type" : "intC (_iobuf*)",
"line" : 105}
,
{
"name" : "flockfile",
"kind" : "function",
"type" : "voidC (shared(_iobuf)*)",
"line" : 106}
,
{
"name" : "funlockfile",
"kind" : "function",
"type" : "voidC (shared(_iobuf)*)",
"line" : 107}
,
{
"name" : "getline",
"kind" : "function",
"type" : "longC (char**, ulong*, shared(_iobuf)*)",
"line" : 108}
,
{
"name" : "getdelim",
"kind" : "function",
"type" : "longC (char**, ulong*, int, shared(_iobuf)*)",
"line" : 109}
,
{
"name" : "fwrite_unlocked",
"kind" : "function",
"type" : "ulongC (const(void)* ptr, ulong size, ulong n, _iobuf* stream)",
"line" : 111}
,
{
"name" : "FPUTC",
"kind" : "alias",
"line" : 122}
,
{
"name" : "FPUTWC",
"kind" : "alias",
"line" : 123}
,
{
"name" : "FGETC",
"kind" : "alias",
"line" : 124}
,
{
"name" : "FGETWC",
"kind" : "alias",
"line" : 125}
,
{
"name" : "FLOCK",
"kind" : "alias",
"line" : 127}
,
{
"name" : "FUNLOCK",
"kind" : "alias",
"line" : 128}
,
{
"name" : "ByRecord(Fields...)",
"kind" : "struct",
"line" : 161,
"members" : [
{
"name" : "ByRecord",
"kind" : "struct",
"line" : 161,
"members" : [
{
"name" : "file",
"kind" : "variable",
"type" : "File",
"line" : 163}
,
{
"name" : "line",
"kind" : "variable",
"type" : "char[]",
"line" : 164}
,
{
"name" : "current",
"kind" : "variable",
"type" : "Tuple!(Fields)",
"line" : 165}
,
{
"name" : "format",
"kind" : "variable",
"type" : "string",
"line" : 166}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(File f, string format)",
"line" : 169}
,
{
"name" : "empty",
"kind" : "function",
"type" : "bool()",
"line" : 178}
,
{
"name" : "front",
"kind" : "function",
"type" : "Tuple!(Fields)()",
"line" : 184}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 190}
]
}
]
}
,
{
"name" : "byRecord(Fields...)",
"kind" : "template",
"line" : 208,
"members" : [
{
"name" : "byRecord",
"kind" : "function",
"type" : "ByRecord!(Fields)(File f, string format)",
"line" : 210}
]
}
,
{
"name" : "File",
"kind" : "struct",
"line" : 255,
"members" : [
{
"name" : "Impl",
"kind" : "struct",
"line" : 257,
"members" : [
{
"name" : "handle",
"kind" : "variable",
"type" : "shared(_iobuf)*",
"line" : 258}
,
{
"name" : "refs",
"kind" : "variable",
"type" : "uint",
"line" : 259}
,
{
"name" : "name",
"kind" : "variable",
"type" : "string",
"line" : 260}
,
{
"name" : "isPipe",
"kind" : "variable",
"type" : "bool",
"line" : 261}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref Impl(shared(_iobuf)* h, uint r, string n, bool pipe = false)",
"line" : 262}
]
}
,
{
"name" : "p",
"kind" : "variable",
"type" : "Impl*",
"line" : 270}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref File(string name, in const(char[]) stdioOpenmode = \"rb\")",
"line" : 284}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(File rhs)",
"line" : 311}
,
{
"name" : "open",
"kind" : "function",
"type" : "void(string name, in const(char[]) stdioOpenmode = \"rb\")",
"line" : 323}
,
{
"name" : "popen",
"kind" : "function",
"type" : "void(string command, in const(char[]) stdioOpenmode = \"r\")",
"line" : 335}
,
{
"name" : "isOpen",
"kind" : "function",
"type" : "const @property bool()",
"line" : 344}
,
{
"name" : "eof",
"kind" : "function",
"type" : "const @property bool()",
"line" : 354}
,
{
"name" : "name",
"kind" : "function",
"type" : "const @property string()",
"line" : 361}
,
{
"name" : "error",
"kind" : "function",
"type" : "const @property bool()",
"line" : 371}
,
{
"name" : "detach",
"kind" : "function",
"type" : "void()",
"line" : 380}
,
{
"name" : "close",
"kind" : "function",
"type" : "void()",
"line" : 397}
,
{
"name" : "clearerr",
"kind" : "function",
"type" : "void()",
"line" : 432}
,
{
"name" : "flush",
"kind" : "function",
"type" : "void()",
"line" : 443}
,
{
"name" : "rawRead(T)",
"kind" : "template",
"line" : 457,
"members" : [
{
"name" : "rawRead",
"kind" : "function",
"type" : "T[](T[] buffer)",
"line" : 457}
]
}
,
{
"name" : "rawWrite(T)",
"kind" : "template",
"line" : 500,
"members" : [
{
"name" : "rawWrite",
"kind" : "function",
"type" : "void(in T[] buffer)",
"line" : 500}
]
}
,
{
"name" : "seek",
"kind" : "function",
"type" : "void(long offset, int origin = 0)",
"line" : 540}
,
{
"name" : "tell",
"kind" : "function",
"type" : "const @property ulong()",
"line" : 585}
,
{
"name" : "rewind",
"kind" : "function",
"type" : "void()",
"line" : 616}
,
{
"name" : "setvbuf",
"kind" : "function",
"type" : "void(ulong size, int mode = 0)",
"line" : 627}
,
{
"name" : "setvbuf",
"kind" : "function",
"type" : "void(void[] buf, int mode = 0)",
"line" : 638}
,
{
"name" : "write(S...)",
"kind" : "template",
"line" : 649,
"members" : [
{
"name" : "write",
"kind" : "function",
"type" : "void(S args)",
"line" : 649}
]
}
,
{
"name" : "writeln(S...)",
"kind" : "template",
"line" : 686,
"members" : [
{
"name" : "writeln",
"kind" : "function",
"type" : "void(S args)",
"line" : 686}
]
}
,
{
"name" : "errorMessage",
"kind" : "variable",
"type" : "string",
"line" : 696}
,
{
"name" : "writef(S...)",
"kind" : "template",
"line" : 702,
"members" : [
{
"name" : "writef",
"kind" : "function",
"type" : "void(S args)",
"line" : 702}
]
}
,
{
"name" : "writefln(S...)",
"kind" : "template",
"line" : 714,
"members" : [
{
"name" : "writefln",
"kind" : "function",
"type" : "void(S args)",
"line" : 714}
]
}
,
{
"name" : "readln(S = string)",
"kind" : "template",
"line" : 760,
"members" : [
{
"name" : "readln",
"kind" : "function",
"type" : "S(dchar terminator = '\\x0a')",
"line" : 760}
]
}
,
{
"name" : "readln(C) if (isSomeChar!(C))",
"kind" : "template",
"line" : 787,
"members" : [
{
"name" : "readln",
"kind" : "function",
"type" : "size_t(ref C[] buf, dchar terminator = '\\x0a')",
"line" : 787}
]
}
,
{
"name" : "readln(C,R) if (isBidirectionalRange!(R) && is(typeof(terminator.front == buf[0])))",
"kind" : "template",
"line" : 809,
"members" : [
{
"name" : "readln",
"kind" : "function",
"type" : "size_t(ref C[] buf, R terminator)",
"line" : 809}
]
}
,
{
"name" : "readf(Data...)",
"kind" : "template",
"line" : 844,
"members" : [
{
"name" : "readf",
"kind" : "function",
"type" : "uint(in char[] format, Data data)",
"line" : 844}
]
}
,
{
"name" : "tmpfile",
"kind" : "function",
"type" : "File()",
"line" : 864}
,
{
"name" : "wrapFile",
"kind" : "function",
"type" : "File(shared(_iobuf)* f)",
"line" : 876}
,
{
"name" : "getFP",
"kind" : "function",
"type" : "shared(_iobuf)*()",
"line" : 887}
,
{
"name" : "fileno",
"kind" : "function",
"type" : "const int()",
"line" : 902}
,
{
"name" : "KeepTerminator",
"kind" : "enum",
"line" : 910,
"base" : "bool",
"members" : [
{
"name" : "no",
"kind" : "enum member",
"line" : 910}
,
{
"name" : "yes",
"kind" : "enum member",
"line" : 910}
]
}
,
{
"name" : "ByLine(Char,Terminator)",
"kind" : "struct",
"line" : 913,
"members" : [
{
"name" : "ByLine",
"kind" : "struct",
"line" : 913,
"members" : [
{
"name" : "file",
"kind" : "variable",
"type" : "File",
"line" : 914}
,
{
"name" : "line",
"kind" : "variable",
"type" : "Char[]",
"line" : 915}
,
{
"name" : "terminator",
"kind" : "variable",
"type" : "Terminator",
"line" : 916}
,
{
"name" : "keepTerminator",
"kind" : "variable",
"type" : "KeepTerminator",
"line" : 917}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(File f, KeepTerminator kt = KeepTerminator.no, Terminator terminator = '\\x0a')",
"line" : 919}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const bool()",
"line" : 928}
,
{
"name" : "front",
"kind" : "function",
"type" : "Char[]()",
"line" : 934}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 941}
]
}
]
}
,
{
"name" : "byLine(Terminator = char,Char = char)",
"kind" : "template",
"line" : 957,
"members" : [
{
"name" : "byLine",
"kind" : "function",
"type" : "ByLine!(Char,Terminator)(KeepTerminator keepTerminator = KeepTerminator.no, Terminator terminator = '\\x0a')",
"line" : 957}
]
}
,
{
"name" : "byRecord(Fields...)",
"kind" : "template",
"line" : 993,
"members" : [
{
"name" : "byRecord",
"kind" : "function",
"type" : "ByRecord!(Fields)(string format)",
"line" : 995}
]
}
,
{
"name" : "ByChunk",
"kind" : "struct",
"line" : 1022,
"members" : [
{
"name" : "file_",
"kind" : "variable",
"type" : "File",
"line" : 1024}
,
{
"name" : "chunk_",
"kind" : "variable",
"type" : "ubyte[]",
"line" : 1025}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref ByChunk(File file, ulong size)",
"line" : 1029}
,
{
"name" : "empty",
"kind" : "function",
"type" : "const @property bool()",
"line" : 1045}
,
{
"name" : "front",
"kind" : "function",
"type" : "nothrow @property ubyte[]()",
"line" : 1053}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 1060}
,
{
"name" : "__cpctor",
"kind" : "function",
"type" : "void(ref ByChunk p)",
"line" : 1022}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "ref ByChunk(ByChunk p)",
"line" : 1022}
]
}
,
{
"name" : "byChunk",
"kind" : "function",
"type" : "ByChunk(ulong chunkSize)",
"line" : 1092}
,
{
"name" : "LockingTextWriter",
"kind" : "struct",
"line" : 1123,
"members" : [
{
"name" : "fps",
"kind" : "variable",
"type" : "shared(_iobuf)*",
"line" : 1124}
,
{
"name" : "handle",
"kind" : "variable",
"type" : "_iobuf*",
"line" : 1125}
,
{
"name" : "orientation",
"kind" : "variable",
"type" : "int",
"line" : 1126}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref LockingTextWriter(ref File f)",
"line" : 1128}
,
{
"name" : "put(A) if (is(ElementType!(A) : const(dchar)))",
"kind" : "template",
"line" : 1151,
"members" : [
{
"name" : "put",
"kind" : "function",
"type" : "void(A writeme)",
"line" : 1151}
]
}
,
{
"name" : "put(C) if (is(C : const(dchar)))",
"kind" : "template",
"line" : 1179,
"members" : [
{
"name" : "put",
"kind" : "function",
"type" : "void(C c)",
"line" : 1179}
]
}
,
{
"name" : "__cpctor",
"kind" : "function",
"type" : "void(ref LockingTextWriter p)",
"line" : 1123}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "ref LockingTextWriter(LockingTextWriter p)",
"line" : 1123}
]
}
,
{
"name" : "lockingTextWriter",
"kind" : "function",
"type" : "LockingTextWriter()",
"line" : 1257}
,
{
"name" : "size",
"kind" : "function",
"type" : "@property ulong()",
"line" : 1263}
,
{
"name" : "__cpctor",
"kind" : "function",
"type" : "void(ref File p)",
"line" : 255}
]
}
,
{
"name" : "LockingTextReader",
"kind" : "struct",
"line" : 1283,
"members" : [
{
"name" : "_f",
"kind" : "variable",
"type" : "File",
"line" : 1284}
,
{
"name" : "_crt",
"kind" : "variable",
"type" : "dchar",
"line" : 1285}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref LockingTextReader(File f)",
"line" : 1287}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(LockingTextReader r)",
"line" : 1305}
,
{
"name" : "empty",
"kind" : "function",
"type" : "@property bool()",
"line" : 1310}
,
{
"name" : "front",
"kind" : "function",
"type" : "dchar()",
"line" : 1329}
,
{
"name" : "popFront",
"kind" : "function",
"type" : "void()",
"line" : 1335}
,
{
"name" : "__cpctor",
"kind" : "function",
"type" : "void(ref LockingTextReader p)",
"line" : 1283}
]
}
,
{
"name" : "writefx",
"kind" : "function",
"type" : "void(shared(_iobuf)* fps, TypeInfo[] arguments, void* argptr, int newline = cast(int)false)",
"line" : 1366}
,
{
"name" : "isStreamingDevice(T)",
"kind" : "template",
"line" : 1435,
"members" : [
{
"name" : "isStreamingDevice",
"kind" : "variable",
"line" : 1438}
]
}
,
{
"name" : "write(T...) if (!is(T[0] : File))",
"kind" : "template",
"line" : 1449,
"members" : [
{
"name" : "write",
"kind" : "function",
"type" : "void(T args)",
"line" : 1449}
]
}
,
{
"name" : "writeln(T...) if (T.length == 0)",
"kind" : "template",
"line" : 1483,
"members" : [
{
"name" : "writeln",
"kind" : "function",
"type" : "void(T args)",
"line" : 1483}
]
}
,
{
"name" : "writeln(T...) if (T.length == 1 && is(typeof(args[0]) : const(char)[]))",
"kind" : "template",
"line" : 1495,
"members" : [
{
"name" : "writeln",
"kind" : "function",
"type" : "void(T args)",
"line" : 1495}
]
}
,
{
"name" : "writeln(T...) if (T.length > 1 || T.length == 1 && !is(typeof(args[0]) : const(char)[]))",
"kind" : "template",
"line" : 1508,
"members" : [
{
"name" : "writeln",
"kind" : "function",
"type" : "void(T args)",
"line" : 1508}
]
}
,
{
"name" : "writef(T...)",
"kind" : "template",
"line" : 1586,
"members" : [
{
"name" : "writef",
"kind" : "function",
"type" : "void(T args)",
"line" : 1586}
]
}
,
{
"name" : "writefln(T...)",
"kind" : "template",
"line" : 1614,
"members" : [
{
"name" : "writefln",
"kind" : "function",
"type" : "void(T args)",
"line" : 1614}
]
}
,
{
"name" : "readf(A...)",
"kind" : "template",
"line" : 1659,
"members" : [
{
"name" : "readf",
"kind" : "function",
"type" : "uint(in char[] format, A args)",
"line" : 1659}
]
}
,
{
"name" : "readln",
"kind" : "function",
"type" : "string(dchar terminator = cast(dchar)'\\x0a')",
"line" : 1699}
,
{
"name" : "readln",
"kind" : "function",
"type" : "ulong(ref char[] buf, dchar terminator = cast(dchar)'\\x0a')",
"line" : 1705}
,
{
"name" : "fopen",
"kind" : "function",
"type" : "shared(_iobuf)*(in const(char[]) name, in const(char[]) mode = \"r\")",
"line" : 1714}
,
{
"name" : "popen",
"kind" : "function",
"type" : "shared(_iobuf)*C (const const(char*), const const(char*))",
"line" : 1722}
,
{
"name" : "popen",
"kind" : "function",
"type" : "shared(_iobuf)*(in const(char[]) name, in const(char[]) mode = \"r\")",
"line" : 1728}
,
{
"name" : "binaryWrite(T)",
"kind" : "template",
"line" : 1738,
"members" : [
{
"name" : "binaryWrite",
"kind" : "function",
"type" : "void(FILE* f, T obj)",
"line" : 1738}
]
}
,
{
"name" : "lines",
"kind" : "struct",
"line" : 1790,
"members" : [
{
"name" : "f",
"kind" : "variable",
"type" : "File",
"line" : 1791}
,
{
"name" : "terminator",
"kind" : "variable",
"type" : "dchar",
"line" : 1792}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref lines(File f, dchar terminator = cast(dchar)'\\x0a')",
"line" : 1795}
,
{
"name" : "opApply(D)",
"kind" : "template",
"line" : 1813,
"members" : [
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope D dg)",
"line" : 1813}
]
}
,
{
"name" : "opApplyRaw(D)",
"kind" : "template",
"line" : 1858,
"members" : [
{
"name" : "opApplyRaw",
"kind" : "function",
"type" : "int(scope D dg)",
"line" : 1858}
]
}
,
{
"name" : "__cpctor",
"kind" : "function",
"type" : "void(ref lines p)",
"line" : 1790}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "ref lines(lines p)",
"line" : 1790}
]
}
,
{
"name" : "chunks",
"kind" : "struct",
"line" : 2038,
"members" : [
{
"name" : "f",
"kind" : "variable",
"type" : "File",
"line" : 2039}
,
{
"name" : "size",
"kind" : "variable",
"type" : "ulong",
"line" : 2040}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ref chunks(File f, ulong size)",
"line" : 2043}
,
{
"name" : "opApply(D)",
"kind" : "template",
"line" : 2063,
"members" : [
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope D dg)",
"line" : 2063}
]
}
,
{
"name" : "__cpctor",
"kind" : "function",
"type" : "void(ref chunks p)",
"line" : 2038}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "ref chunks(chunks p)",
"line" : 2038}
]
}
,
{
"name" : "StdioException",
"kind" : "class",
"line" : 2128,
"base" : "Exception",
"members" : [
{
"name" : "errno",
"kind" : "variable",
"type" : "uint",
"line" : 2131}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "StdioException(string message, uint e = cast(uint)getErrno())",
"line" : 2135}
,
{
"name" : "opCall",
"kind" : "function",
"type" : "void(string msg)",
"line" : 2160}
,
{
"name" : "opCall",
"kind" : "function",
"type" : "void()",
"line" : 2166}
]
}
,
{
"name" : "std_stdio_static_this",
"kind" : "function",
"type" : "voidC ()",
"line" : 2172}
,
{
"name" : "stdin",
"kind" : "variable",
"type" : "File",
"line" : 2191}
,
{
"name" : "stdout",
"kind" : "variable",
"type" : "File",
"line" : 2192}
,
{
"name" : "stderr",
"kind" : "variable",
"type" : "File",
"line" : 2193}
,
{
"name" : "readlnImpl",
"kind" : "function",
"type" : "ulong(shared(_iobuf)* fps, ref char[] buf, dchar terminator = cast(dchar)'\\x0a')",
"line" : 2358}
,
{
"name" : "openNetwork",
"kind" : "function",
"type" : "File(string host, ushort port)",
"line" : 2533}
]
}
,
{
"name" : "std.stream",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/stream.d",
"members" : [
{
"name" : "StreamException",
"kind" : "class",
"line" : 44,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "StreamException(string msg)",
"line" : 46}
]
}
,
{
"name" : "ReadException",
"kind" : "class",
"line" : 50,
"base" : "StreamException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ReadException(string msg)",
"line" : 52}
]
}
,
{
"name" : "WriteException",
"kind" : "class",
"line" : 56,
"base" : "StreamException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "WriteException(string msg)",
"line" : 58}
]
}
,
{
"name" : "SeekException",
"kind" : "class",
"line" : 62,
"base" : "StreamException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "SeekException(string msg)",
"line" : 64}
]
}
,
{
"name" : "SeekPos",
"kind" : "enum",
"line" : 68,
"base" : "int",
"members" : [
{
"name" : "Set",
"kind" : "enum member",
"line" : 69}
,
{
"name" : "Current",
"kind" : "enum member",
"line" : 70}
,
{
"name" : "End",
"kind" : "enum member",
"line" : 71}
]
}
,
{
"name" : "InputStream",
"kind" : "interface",
"line" : 90,
"members" : [
{
"name" : "readExact",
"kind" : "function",
"type" : "void(void* buffer, ulong size)",
"line" : 97}
,
{
"name" : "read",
"kind" : "function",
"type" : "ulong(ubyte[] buffer)",
"line" : 104}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out byte x)",
"line" : 114}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ubyte x)",
"line" : 115}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out short x)",
"line" : 116}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ushort x)",
"line" : 117}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out int x)",
"line" : 118}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out uint x)",
"line" : 119}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out long x)",
"line" : 120}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ulong x)",
"line" : 121}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out float x)",
"line" : 122}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out double x)",
"line" : 123}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out real x)",
"line" : 124}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ifloat x)",
"line" : 125}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out idouble x)",
"line" : 126}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ireal x)",
"line" : 127}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out cfloat x)",
"line" : 128}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out cdouble x)",
"line" : 129}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out creal x)",
"line" : 130}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out char x)",
"line" : 131}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out wchar x)",
"line" : 132}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out dchar x)",
"line" : 133}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out char[] s)",
"line" : 136}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out wchar[] s)",
"line" : 139}
,
{
"name" : "readLine",
"kind" : "function",
"type" : "char[]()",
"line" : 149}
,
{
"name" : "readLine",
"kind" : "function",
"type" : "char[](char[] result)",
"line" : 150}
,
{
"name" : "readLineW",
"kind" : "function",
"type" : "wchar[]()",
"line" : 151}
,
{
"name" : "readLineW",
"kind" : "function",
"type" : "wchar[](wchar[] result)",
"line" : 152}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref char[]) dg)",
"line" : 174}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref ulong, ref char[]) dg)",
"line" : 175}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref wchar[] line) dg)",
"line" : 176}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref ulong n, ref wchar[] line) dg)",
"line" : 177}
,
{
"name" : "readString",
"kind" : "function",
"type" : "char[](ulong length)",
"line" : 181}
,
{
"name" : "readStringW",
"kind" : "function",
"type" : "wchar[](ulong length)",
"line" : 191}
,
{
"name" : "getc",
"kind" : "function",
"type" : "char()",
"line" : 202}
,
{
"name" : "getcw",
"kind" : "function",
"type" : "wchar()",
"line" : 203}
,
{
"name" : "ungetc",
"kind" : "function",
"type" : "char(char c)",
"line" : 211}
,
{
"name" : "ungetcw",
"kind" : "function",
"type" : "wchar(wchar c)",
"line" : 212}
,
{
"name" : "vreadf",
"kind" : "function",
"type" : "int(TypeInfo[] arguments, void* args)",
"line" : 234}
,
{
"name" : "readf",
"kind" : "function",
"type" : "int(...)",
"line" : 235}
,
{
"name" : "available",
"kind" : "function",
"type" : "ulong()",
"line" : 238}
,
{
"name" : "eof",
"kind" : "function",
"type" : "bool()",
"line" : 249}
,
{
"name" : "isOpen",
"kind" : "function",
"type" : "bool()",
"line" : 251}
]
}
,
{
"name" : "OutputStream",
"kind" : "interface",
"line" : 255,
"members" : [
{
"name" : "writeExact",
"kind" : "function",
"type" : "void(const const(void*) buffer, ulong size)",
"line" : 261}
,
{
"name" : "write",
"kind" : "function",
"type" : "ulong(const(ubyte)[] buffer)",
"line" : 267}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(byte x)",
"line" : 276}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ubyte x)",
"line" : 277}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(short x)",
"line" : 278}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ushort x)",
"line" : 279}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(int x)",
"line" : 280}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(uint x)",
"line" : 281}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(long x)",
"line" : 282}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ulong x)",
"line" : 283}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(float x)",
"line" : 284}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(double x)",
"line" : 285}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(real x)",
"line" : 286}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ifloat x)",
"line" : 287}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(idouble x)",
"line" : 288}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ireal x)",
"line" : 289}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(cfloat x)",
"line" : 290}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(cdouble x)",
"line" : 291}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(creal x)",
"line" : 292}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(char x)",
"line" : 293}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(wchar x)",
"line" : 294}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(dchar x)",
"line" : 295}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(const(char)[] s)",
"line" : 304}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(const(wchar)[] s)",
"line" : 305}
,
{
"name" : "writeLine",
"kind" : "function",
"type" : "void(const(char)[] s)",
"line" : 313}
,
{
"name" : "writeLineW",
"kind" : "function",
"type" : "void(const(wchar)[] s)",
"line" : 322}
,
{
"name" : "writeString",
"kind" : "function",
"type" : "void(const(char)[] s)",
"line" : 329}
,
{
"name" : "writeStringW",
"kind" : "function",
"type" : "void(const(wchar)[] s)",
"line" : 337}
,
{
"name" : "vprintf",
"kind" : "function",
"type" : "ulong(const(char)[] format, void* args)",
"line" : 343}
,
{
"name" : "printf",
"kind" : "function",
"type" : "ulong(const(char)[] format,...)",
"line" : 344}
,
{
"name" : "writef",
"kind" : "function",
"type" : "OutputStream(...)",
"line" : 351}
,
{
"name" : "writefln",
"kind" : "function",
"type" : "OutputStream(...)",
"line" : 352}
,
{
"name" : "writefx",
"kind" : "function",
"type" : "OutputStream(TypeInfo[] arguments, void* argptr, int newline = cast(int)false)",
"line" : 353}
,
{
"name" : "flush",
"kind" : "function",
"type" : "void()",
"line" : 355}
,
{
"name" : "close",
"kind" : "function",
"type" : "void()",
"line" : 356}
,
{
"name" : "isOpen",
"kind" : "function",
"type" : "bool()",
"line" : 357}
]
}
,
{
"name" : "Stream",
"kind" : "class",
"line" : 387,
"base" : "Object",
"interfaces" : [
"InputStream",
"OutputStream"],
"members" : [
{
"name" : "readable",
"kind" : "variable",
"type" : "bool",
"line" : 391}
,
{
"name" : "writeable",
"kind" : "variable",
"type" : "bool",
"line" : 392}
,
{
"name" : "seekable",
"kind" : "variable",
"type" : "bool",
"line" : 393}
,
{
"name" : "isopen",
"kind" : "variable",
"type" : "bool",
"line" : 394}
,
{
"name" : "readEOF",
"kind" : "variable",
"type" : "bool",
"line" : 396}
,
{
"name" : "prevCr",
"kind" : "variable",
"type" : "bool",
"line" : 400}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Stream()",
"line" : 405}
,
{
"name" : "readBlock",
"kind" : "function",
"type" : "ulong(void* buffer, ulong size)",
"line" : 411}
,
{
"name" : "readExact",
"kind" : "function",
"type" : "void(void* buffer, ulong size)",
"line" : 415}
,
{
"name" : "read",
"kind" : "function",
"type" : "ulong(ubyte[] buffer)",
"line" : 429}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out byte x)",
"line" : 435}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ubyte x)",
"line" : 436}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out short x)",
"line" : 437}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ushort x)",
"line" : 438}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out int x)",
"line" : 439}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out uint x)",
"line" : 440}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out long x)",
"line" : 441}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ulong x)",
"line" : 442}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out float x)",
"line" : 443}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out double x)",
"line" : 444}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out real x)",
"line" : 445}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ifloat x)",
"line" : 446}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out idouble x)",
"line" : 447}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ireal x)",
"line" : 448}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out cfloat x)",
"line" : 449}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out cdouble x)",
"line" : 450}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out creal x)",
"line" : 451}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out char x)",
"line" : 452}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out wchar x)",
"line" : 453}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out dchar x)",
"line" : 454}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out char[] s)",
"line" : 457}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out wchar[] s)",
"line" : 464}
,
{
"name" : "readLine",
"kind" : "function",
"type" : "char[]()",
"line" : 471}
,
{
"name" : "readLine",
"kind" : "function",
"type" : "char[](char[] result)",
"line" : 478}
,
{
"name" : "readLineW",
"kind" : "function",
"type" : "wchar[]()",
"line" : 514}
,
{
"name" : "readLineW",
"kind" : "function",
"type" : "wchar[](wchar[] result)",
"line" : 521}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref char[]) dg)",
"line" : 555}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref ulong, ref char[]) dg)",
"line" : 567}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref wchar[] line) dg)",
"line" : 581}
,
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope int delegate(ref ulong n, ref wchar[] line) dg)",
"line" : 593}
,
{
"name" : "readString",
"kind" : "function",
"type" : "char[](ulong length)",
"line" : 608}
,
{
"name" : "readStringW",
"kind" : "function",
"type" : "wchar[](ulong length)",
"line" : 616}
,
{
"name" : "unget",
"kind" : "variable",
"type" : "wchar[]",
"line" : 623}
,
{
"name" : "ungetAvailable",
"kind" : "function",
"type" : "bool()",
"line" : 624}
,
{
"name" : "getc",
"kind" : "function",
"type" : "char()",
"line" : 629}
,
{
"name" : "getcw",
"kind" : "function",
"type" : "wchar()",
"line" : 649}
,
{
"name" : "ungetc",
"kind" : "function",
"type" : "char(char c)",
"line" : 671}
,
{
"name" : "ungetcw",
"kind" : "function",
"type" : "wchar(wchar c)",
"line" : 682}
,
{
"name" : "vreadf",
"kind" : "function",
"type" : "int(TypeInfo[] arguments, void* args)",
"line" : 691}
,
{
"name" : "readf",
"kind" : "function",
"type" : "int(...)",
"line" : 1027}
,
{
"name" : "available",
"kind" : "function",
"type" : "ulong()",
"line" : 1032}
,
{
"name" : "writeBlock",
"kind" : "function",
"type" : "ulong(const const(void*) buffer, ulong size)",
"line" : 1038}
,
{
"name" : "writeExact",
"kind" : "function",
"type" : "void(const const(void*) buffer, ulong size)",
"line" : 1042}
,
{
"name" : "write",
"kind" : "function",
"type" : "ulong(const(ubyte)[] buffer)",
"line" : 1057}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(byte x)",
"line" : 1063}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ubyte x)",
"line" : 1064}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(short x)",
"line" : 1065}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ushort x)",
"line" : 1066}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(int x)",
"line" : 1067}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(uint x)",
"line" : 1068}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(long x)",
"line" : 1069}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ulong x)",
"line" : 1070}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(float x)",
"line" : 1071}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(double x)",
"line" : 1072}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(real x)",
"line" : 1073}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ifloat x)",
"line" : 1074}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(idouble x)",
"line" : 1075}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ireal x)",
"line" : 1076}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(cfloat x)",
"line" : 1077}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(cdouble x)",
"line" : 1078}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(creal x)",
"line" : 1079}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(char x)",
"line" : 1080}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(wchar x)",
"line" : 1081}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(dchar x)",
"line" : 1082}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(const(char)[] s)",
"line" : 1085}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(const(wchar)[] s)",
"line" : 1091}
,
{
"name" : "writeLine",
"kind" : "function",
"type" : "void(const(char)[] s)",
"line" : 1097}
,
{
"name" : "writeLineW",
"kind" : "function",
"type" : "void(const(wchar)[] s)",
"line" : 1108}
,
{
"name" : "writeString",
"kind" : "function",
"type" : "void(const(char)[] s)",
"line" : 1119}
,
{
"name" : "writeStringW",
"kind" : "function",
"type" : "void(const(wchar)[] s)",
"line" : 1124}
,
{
"name" : "vprintf",
"kind" : "function",
"type" : "ulong(const(char)[] format, void* args)",
"line" : 1130}
,
{
"name" : "printf",
"kind" : "function",
"type" : "ulong(const(char)[] format,...)",
"line" : 1163}
,
{
"name" : "doFormatCallback",
"kind" : "function",
"type" : "void(dchar c)",
"line" : 1170}
,
{
"name" : "writef",
"kind" : "function",
"type" : "OutputStream(...)",
"line" : 1177}
,
{
"name" : "writefln",
"kind" : "function",
"type" : "OutputStream(...)",
"line" : 1182}
,
{
"name" : "writefx",
"kind" : "function",
"type" : "OutputStream(TypeInfo[] arguments, void* argptr, int newline = cast(int)false)",
"line" : 1187}
,
{
"name" : "copyFrom",
"kind" : "function",
"type" : "void(Stream s)",
"line" : 1199}
,
{
"name" : "copyFrom",
"kind" : "function",
"type" : "void(Stream s, ulong count)",
"line" : 1219}
,
{
"name" : "seek",
"kind" : "function",
"type" : "ulong(long offset, SeekPos whence)",
"line" : 1237}
,
{
"name" : "seekSet",
"kind" : "function",
"type" : "ulong(long offset)",
"line" : 1242}
,
{
"name" : "seekCur",
"kind" : "function",
"type" : "ulong(long offset)",
"line" : 1243}
,
{
"name" : "seekEnd",
"kind" : "function",
"type" : "ulong(long offset)",
"line" : 1244}
,
{
"name" : "position",
"kind" : "function",
"type" : "void(ulong pos)",
"line" : 1249}
,
{
"name" : "position",
"kind" : "function",
"type" : "ulong()",
"line" : 1254}
,
{
"name" : "size",
"kind" : "function",
"type" : "ulong()",
"line" : 1260}
,
{
"name" : "eof",
"kind" : "function",
"type" : "bool()",
"line" : 1268}
,
{
"name" : "isOpen",
"kind" : "function",
"type" : "bool()",
"line" : 1279}
,
{
"name" : "flush",
"kind" : "function",
"type" : "void()",
"line" : 1282}
,
{
"name" : "close",
"kind" : "function",
"type" : "void()",
"line" : 1288}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 1299}
,
{
"name" : "toHash",
"kind" : "function",
"type" : "ulong()",
"line" : 1333}
,
{
"name" : "assertReadable",
"kind" : "function",
"type" : "void()",
"line" : 1350}
,
{
"name" : "assertWriteable",
"kind" : "function",
"type" : "void()",
"line" : 1355}
,
{
"name" : "assertSeekable",
"kind" : "function",
"type" : "void()",
"line" : 1360}
]
}
,
{
"name" : "FilterStream",
"kind" : "class",
"line" : 1379,
"base" : "Stream",
"members" : [
{
"name" : "s",
"kind" : "variable",
"type" : "std.stream.Stream",
"line" : 1380}
,
{
"name" : "nestClose",
"kind" : "variable",
"type" : "bool",
"line" : 1385}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "FilterStream(Stream source)",
"line" : 1388}
,
{
"name" : "source",
"kind" : "function",
"type" : "Stream()",
"line" : 1398}
,
{
"name" : "source",
"kind" : "function",
"type" : "void(Stream s)",
"line" : 1407}
,
{
"name" : "resetSource",
"kind" : "function",
"type" : "void()",
"line" : 1417}
,
{
"name" : "readBlock",
"kind" : "function",
"type" : "ulong(void* buffer, ulong size)",
"line" : 1431}
,
{
"name" : "writeBlock",
"kind" : "function",
"type" : "ulong(const const(void*) buffer, ulong size)",
"line" : 1438}
,
{
"name" : "close",
"kind" : "function",
"type" : "void()",
"line" : 1443}
,
{
"name" : "seek",
"kind" : "function",
"type" : "ulong(long offset, SeekPos whence)",
"line" : 1452}
,
{
"name" : "available",
"kind" : "function",
"type" : "ulong()",
"line" : 1457}
,
{
"name" : "flush",
"kind" : "function",
"type" : "void()",
"line" : 1458}
]
}
,
{
"name" : "BufferedStream",
"kind" : "class",
"line" : 1470,
"base" : "FilterStream",
"members" : [
{
"name" : "buffer",
"kind" : "variable",
"type" : "ubyte[]",
"line" : 1471}
,
{
"name" : "bufferCurPos",
"kind" : "variable",
"type" : "ulong",
"line" : 1472}
,
{
"name" : "bufferLen",
"kind" : "variable",
"type" : "ulong",
"line" : 1473}
,
{
"name" : "bufferDirty",
"kind" : "variable",
"type" : "bool",
"line" : 1474}
,
{
"name" : "bufferSourcePos",
"kind" : "variable",
"type" : "ulong",
"line" : 1475}
,
{
"name" : "streamPos",
"kind" : "variable",
"type" : "ulong",
"line" : 1476}
,
{
"name" : "DefaultBufferSize",
"kind" : "variable",
"type" : "ulong",
"line" : 1494}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "BufferedStream(Stream source, ulong bufferSize = 8192LU)",
"line" : 1500}
,
{
"name" : "resetSource",
"kind" : "function",
"type" : "void()",
"line" : 1506}
,
{
"name" : "readBlock",
"kind" : "function",
"type" : "ulong(void* result, ulong len)",
"line" : 1515}
,
{
"name" : "writeBlock",
"kind" : "function",
"type" : "ulong(const const(void*) result, ulong len)",
"line" : 1564}
,
{
"name" : "seek",
"kind" : "function",
"type" : "ulong(long offset, SeekPos whence)",
"line" : 1617}
,
{
"name" : "TreadLine(T)",
"kind" : "template",
"line" : 1636,
"members" : [
{
"name" : "readLine",
"kind" : "function",
"type" : "T[](T[] inBuffer)",
"line" : 1637}
]
}
,
{
"name" : "readLine",
"kind" : "function",
"type" : "char[](char[] inBuffer)",
"line" : 1684}
,
{
"name" : "readLine",
"kind" : "alias",
"line" : 1690}
,
{
"name" : "readLineW",
"kind" : "function",
"type" : "wchar[](wchar[] inBuffer)",
"line" : 1692}
,
{
"name" : "readLineW",
"kind" : "alias",
"line" : 1698}
,
{
"name" : "flush",
"kind" : "function",
"type" : "void()",
"line" : 1700}
,
{
"name" : "eof",
"kind" : "function",
"type" : "bool()",
"line" : 1730}
,
{
"name" : "size",
"kind" : "function",
"type" : "ulong()",
"line" : 1747}
,
{
"name" : "available",
"kind" : "function",
"type" : "ulong()",
"line" : 1753}
]
}
,
{
"name" : "StreamFileException",
"kind" : "class",
"line" : 1759,
"base" : "StreamException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "StreamFileException(string msg)",
"line" : 1761}
]
}
,
{
"name" : "OpenException",
"kind" : "class",
"line" : 1765,
"base" : "StreamFileException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "OpenException(string msg)",
"line" : 1767}
]
}
,
{
"name" : "FileMode",
"kind" : "enum",
"line" : 1771,
"base" : "int",
"members" : [
{
"name" : "In",
"kind" : "enum member",
"line" : 1772}
,
{
"name" : "Out",
"kind" : "enum member",
"line" : 1773}
,
{
"name" : "OutNew",
"kind" : "enum member",
"line" : 1774}
,
{
"name" : "Append",
"kind" : "enum member",
"line" : 1775}
]
}
,
{
"name" : "HANDLE",
"kind" : "alias",
"type" : "int",
"line" : 1788}
,
{
"name" : "File",
"kind" : "class",
"line" : 1792,
"base" : "Stream",
"members" : [
{
"name" : "hFile",
"kind" : "variable",
"type" : "int",
"line" : 1798}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "File()",
"line" : 1801}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "File(int hFile, FileMode mode)",
"line" : 1813}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "File(string filename, FileMode mode = cast(FileMode)1)",
"line" : 1839}
,
{
"name" : "open",
"kind" : "function",
"type" : "void(string filename, FileMode mode = cast(FileMode)1)",
"line" : 1850}
,
{
"name" : "parseMode",
"kind" : "function",
"type" : "void(int mode, out int access, out int share, out int createMode)",
"line" : 1878}
,
{
"name" : "create",
"kind" : "function",
"type" : "void(string filename)",
"line" : 1915}
,
{
"name" : "create",
"kind" : "function",
"type" : "void(string filename, FileMode mode)",
"line" : 1920}
,
{
"name" : "close",
"kind" : "function",
"type" : "void()",
"line" : 1926}
,
{
"name" : "readBlock",
"kind" : "function",
"type" : "ulong(void* buffer, ulong size)",
"line" : 1954}
,
{
"name" : "writeBlock",
"kind" : "function",
"type" : "ulong(const const(void*) buffer, ulong size)",
"line" : 1967}
,
{
"name" : "seek",
"kind" : "function",
"type" : "ulong(long offset, SeekPos rel)",
"line" : 1979}
,
{
"name" : "available",
"kind" : "function",
"type" : "ulong()",
"line" : 2001}
,
{
"name" : "handle",
"kind" : "function",
"type" : "int()",
"line" : 2012}
]
}
,
{
"name" : "BufferedFile",
"kind" : "class",
"line" : 2096,
"base" : "BufferedStream",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "BufferedFile()",
"line" : 2099}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "BufferedFile(string filename, FileMode mode = cast(FileMode)1, ulong bufferSize = 8192LU)",
"line" : 2102}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "BufferedFile(File file, ulong bufferSize = 8192LU)",
"line" : 2108}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "BufferedFile(int hFile, FileMode mode, ulong buffersize)",
"line" : 2113}
,
{
"name" : "open",
"kind" : "function",
"type" : "void(string filename, FileMode mode = cast(FileMode)1)",
"line" : 2118}
,
{
"name" : "create",
"kind" : "function",
"type" : "void(string filename, FileMode mode = cast(FileMode)6)",
"line" : 2125}
]
}
,
{
"name" : "BOM",
"kind" : "enum",
"line" : 2183,
"base" : "int",
"members" : [
{
"name" : "UTF8",
"kind" : "enum member",
"line" : 2184}
,
{
"name" : "UTF16LE",
"kind" : "enum member",
"line" : 2185}
,
{
"name" : "UTF16BE",
"kind" : "enum member",
"line" : 2186}
,
{
"name" : "UTF32LE",
"kind" : "enum member",
"line" : 2187}
,
{
"name" : "UTF32BE",
"kind" : "enum member",
"line" : 2188}
]
}
,
{
"name" : "NBOMS",
"kind" : "variable",
"type" : "int",
"line" : 2191}
,
{
"name" : "BOMEndian",
"kind" : "variable",
"type" : "immutable(Endian[5LU])",
"line" : 2192}
,
{
"name" : "ByteOrderMarks",
"kind" : "variable",
"type" : "immutable(ubyte[][5LU])",
"line" : 2198}
,
{
"name" : "EndianStream",
"kind" : "class",
"line" : 2221,
"base" : "FilterStream",
"members" : [
{
"name" : "endian",
"kind" : "variable",
"type" : "Endian",
"line" : 2223}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "EndianStream(Stream source, Endian end = endian)",
"line" : 2231}
,
{
"name" : "readBOM",
"kind" : "function",
"type" : "int(int ungetCharSize = 1)",
"line" : 2244}
,
{
"name" : "fixBO",
"kind" : "function",
"type" : "void(const(void)* buffer, ulong size)",
"line" : 2288}
,
{
"name" : "fixBlockBO",
"kind" : "function",
"type" : "void(void* buffer, uint size, ulong repeat)",
"line" : 2328}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out byte x)",
"line" : 2335}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ubyte x)",
"line" : 2336}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out short x)",
"line" : 2337}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ushort x)",
"line" : 2338}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out int x)",
"line" : 2339}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out uint x)",
"line" : 2340}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out long x)",
"line" : 2341}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ulong x)",
"line" : 2342}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out float x)",
"line" : 2343}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out double x)",
"line" : 2344}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out real x)",
"line" : 2345}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ifloat x)",
"line" : 2346}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out idouble x)",
"line" : 2347}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out ireal x)",
"line" : 2348}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out cfloat x)",
"line" : 2349}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out cdouble x)",
"line" : 2350}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out creal x)",
"line" : 2351}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out char x)",
"line" : 2352}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out wchar x)",
"line" : 2353}
,
{
"name" : "read",
"kind" : "function",
"type" : "void(out dchar x)",
"line" : 2354}
,
{
"name" : "getcw",
"kind" : "function",
"type" : "wchar()",
"line" : 2356}
,
{
"name" : "readStringW",
"kind" : "function",
"type" : "wchar[](ulong length)",
"line" : 2377}
,
{
"name" : "writeBOM",
"kind" : "function",
"type" : "void(BOM b)",
"line" : 2385}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(byte x)",
"line" : 2390}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ubyte x)",
"line" : 2391}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(short x)",
"line" : 2392}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ushort x)",
"line" : 2393}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(int x)",
"line" : 2394}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(uint x)",
"line" : 2395}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(long x)",
"line" : 2396}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ulong x)",
"line" : 2397}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(float x)",
"line" : 2398}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(double x)",
"line" : 2399}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(real x)",
"line" : 2400}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ifloat x)",
"line" : 2401}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(idouble x)",
"line" : 2402}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(ireal x)",
"line" : 2403}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(cfloat x)",
"line" : 2404}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(cdouble x)",
"line" : 2405}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(creal x)",
"line" : 2406}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(char x)",
"line" : 2407}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(wchar x)",
"line" : 2408}
,
{
"name" : "write",
"kind" : "function",
"type" : "void(dchar x)",
"line" : 2409}
,
{
"name" : "writeStringW",
"kind" : "function",
"type" : "void(const(wchar)[] str)",
"line" : 2411}
,
{
"name" : "eof",
"kind" : "function",
"type" : "bool()",
"line" : 2418}
,
{
"name" : "size",
"kind" : "function",
"type" : "ulong()",
"line" : 2419}
]
}
,
{
"name" : "TArrayStream(Buffer)",
"kind" : "class",
"line" : 2514,
"members" : [
{
"name" : "TArrayStream",
"kind" : "class",
"line" : 2514,
"members" : [
{
"name" : "buf",
"kind" : "variable",
"type" : "Buffer",
"line" : 2515}
,
{
"name" : "len",
"kind" : "variable",
"type" : "ulong",
"line" : 2516}
,
{
"name" : "cur",
"kind" : "variable",
"type" : "ulong",
"line" : 2517}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(Buffer buf)",
"line" : 2520}
,
{
"name" : "readBlock",
"kind" : "function",
"type" : "size_t(void* buffer, size_t size)",
"line" : 2533}
,
{
"name" : "writeBlock",
"kind" : "function",
"type" : "size_t(const void* buffer, size_t size)",
"line" : 2544}
,
{
"name" : "seek",
"kind" : "function",
"type" : "ulong(long offset, SeekPos rel)",
"line" : 2558}
,
{
"name" : "available",
"kind" : "function",
"type" : "size_t()",
"line" : 2580}
,
{
"name" : "data",
"kind" : "function",
"type" : "ubyte[]()",
"line" : 2583}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 2590}
]
}
]
}
,
{
"name" : "MemoryStream",
"kind" : "class",
"line" : 2623,
"base" : "TArrayStream",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "MemoryStream()",
"line" : 2627}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "MemoryStream(ubyte[] buf)",
"line" : 2633}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "MemoryStream(byte[] buf)",
"line" : 2634}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "MemoryStream(char[] buf)",
"line" : 2635}
,
{
"name" : "reserve",
"kind" : "function",
"type" : "void(ulong count)",
"line" : 2638}
,
{
"name" : "writeBlock",
"kind" : "function",
"type" : "ulong(const const(void*) buffer, ulong size)",
"line" : 2643}
]
}
,
{
"name" : "MmFileStream",
"kind" : "class",
"line" : 2700,
"base" : "TArrayStream",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "MmFileStream(MmFile file)",
"line" : 2703}
,
{
"name" : "flush",
"kind" : "function",
"type" : "void()",
"line" : 2709}
,
{
"name" : "close",
"kind" : "function",
"type" : "void()",
"line" : 2716}
]
}
,
{
"name" : "SliceStream",
"kind" : "class",
"line" : 2765,
"base" : "FilterStream",
"members" : [
{
"name" : "pos",
"kind" : "variable",
"type" : "ulong",
"line" : 2767}
,
{
"name" : "low",
"kind" : "variable",
"type" : "ulong",
"line" : 2768}
,
{
"name" : "high",
"kind" : "variable",
"type" : "ulong",
"line" : 2769}
,
{
"name" : "bounded",
"kind" : "variable",
"type" : "bool",
"line" : 2770}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "SliceStream(Stream s, ulong low)",
"line" : 2780}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "SliceStream(Stream s, ulong low, ulong high)",
"line" : 2797}
,
{
"name" : "readBlock",
"kind" : "function",
"type" : "ulong(void* buffer, ulong size)",
"line" : 2816}
,
{
"name" : "writeBlock",
"kind" : "function",
"type" : "ulong(const const(void*) buffer, ulong size)",
"line" : 2831}
,
{
"name" : "seek",
"kind" : "function",
"type" : "ulong(long offset, SeekPos rel)",
"line" : 2846}
,
{
"name" : "available",
"kind" : "function",
"type" : "ulong()",
"line" : 2880}
]
}
]
}
,
{
"name" : "std.string",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/string.d",
"members" : [
{
"name" : "StringException",
"kind" : "class",
"line" : 85,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "StringException(string msg, string file = __FILE__, ulong line = cast(ulong)__LINE__, Throwable next = cast(Throwable)null)",
"line" : 94}
]
}
,
{
"name" : "hexdigits",
"kind" : "variable",
"type" : "immutable(char[16LU])",
"line" : 111}
,
{
"name" : "digits",
"kind" : "alias",
"line" : 119}
,
{
"name" : "octdigits",
"kind" : "variable",
"type" : "immutable(char[8LU])",
"line" : 127}
,
{
"name" : "lowercase",
"kind" : "variable",
"type" : "immutable(char[26LU])",
"line" : 135}
,
{
"name" : "letters",
"kind" : "variable",
"type" : "immutable(char[52LU])",
"line" : 143}
,
{
"name" : "uppercase",
"kind" : "variable",
"type" : "immutable(char[26LU])",
"line" : 152}
,
{
"name" : "whitespace",
"kind" : "alias",
"line" : 160}
,
{
"name" : "LS",
"kind" : "variable",
"type" : "dchar",
"line" : 168}
,
{
"name" : "PS",
"kind" : "variable",
"type" : "dchar",
"line" : 176}
,
{
"name" : "newline",
"kind" : "alias",
"line" : 184}
,
{
"name" : "iswhite(C) if (is(Unqual!(C) : dchar))",
"kind" : "template",
"line" : 193,
"members" : [
{
"name" : "iswhite",
"kind" : "function",
"type" : "bool(C c)",
"line" : 193}
]
}
,
{
"name" : "icmp(alias pred = \"a < b\",S1,S2) if (isSomeString!(S1) && isSomeString!(S2))",
"kind" : "template",
"line" : 219,
"members" : [
{
"name" : "icmp",
"kind" : "function",
"type" : "int(S1 s1, S2 s2)",
"line" : 219}
]
}
,
{
"name" : "icmp(alias pred = \"a < b\",S1,S2) if (!(isSomeString!(S1) && isSomeString!(S2)) && isForwardRange!(S1) && is(Unqual!(ElementType!(S1)) == dchar) && isForwardRange!(S2) && is(Unqual!(ElementType!(S2)) == dchar))",
"kind" : "template",
"line" : 254,
"members" : [
{
"name" : "icmp",
"kind" : "function",
"type" : "int(S1 s1, S2 s2)",
"line" : 254}
]
}
,
{
"name" : "toStringz",
"kind" : "function",
"type" : "pure nothrow immutable(char)*(const(char)[] s)",
"line" : 351}
,
{
"name" : "toStringz",
"kind" : "function",
"type" : "pure nothrow immutable(char)*(string s)",
"line" : 394}
,
{
"name" : "CaseSensitive",
"kind" : "enum",
"line" : 440,
"base" : "int",
"members" : [
{
"name" : "no",
"kind" : "enum member",
"line" : 440}
,
{
"name" : "yes",
"kind" : "enum member",
"line" : 440}
]
}
,
{
"name" : "indexOf(Char) if (isSomeChar!(Char))",
"kind" : "template",
"line" : 448,
"members" : [
{
"name" : "indexOf",
"kind" : "function",
"type" : "pure sizediff_t(in Char[] s, dchar c, CaseSensitive cs = CaseSensitive.yes)",
"line" : 448}
]
}
,
{
"name" : "indexOf(Char1,Char2) if (isSomeChar!(Char1) && isSomeChar!(Char2))",
"kind" : "template",
"line" : 538,
"members" : [
{
"name" : "indexOf",
"kind" : "function",
"type" : "sizediff_t(const(Char1)[] s, const(Char2)[] sub, CaseSensitive cs = CaseSensitive.yes)",
"line" : 538}
]
}
,
{
"name" : "lastIndexOf(Char) if (isSomeChar!(Char))",
"kind" : "template",
"line" : 612,
"members" : [
{
"name" : "lastIndexOf",
"kind" : "function",
"type" : "sizediff_t(const(Char)[] s, dchar c, CaseSensitive cs = CaseSensitive.yes)",
"line" : 612}
]
}
,
{
"name" : "lastIndexOf(Char1,Char2) if (isSomeChar!(Char1) && isSomeChar!(Char2))",
"kind" : "template",
"line" : 707,
"members" : [
{
"name" : "lastIndexOf",
"kind" : "function",
"type" : "sizediff_t(const(Char1)[] s, const(Char2)[] sub, CaseSensitive cs = CaseSensitive.yes)",
"line" : 707}
]
}
,
{
"name" : "representation(Char) if (isSomeChar!(Char))",
"kind" : "template",
"line" : 823,
"members" : [
{
"name" : "representation",
"kind" : "function",
"type" : "pure nothrow (Char[] s)",
"line" : 823}
]
}
,
{
"name" : "tolower(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 882,
"members" : [
{
"name" : "tolower",
"kind" : "function",
"type" : "S(S s)",
"line" : 882}
]
}
,
{
"name" : "toLower(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 893,
"members" : [
{
"name" : "toLower",
"kind" : "function",
"type" : "pure @trusted S(S s)",
"line" : 893}
]
}
,
{
"name" : "tolowerInPlace(C) if (isSomeChar!(C))",
"kind" : "template",
"line" : 941,
"members" : [
{
"name" : "tolowerInPlace",
"kind" : "function",
"type" : "void(ref C[] s)",
"line" : 941}
]
}
,
{
"name" : "toLowerInPlace(C) if (is(C == char) || is(C == wchar))",
"kind" : "template",
"line" : 951,
"members" : [
{
"name" : "toLowerInPlace",
"kind" : "function",
"type" : "void(ref C[] s)",
"line" : 951}
]
}
,
{
"name" : "toLowerInPlace(C) if (is(C == dchar))",
"kind" : "template",
"line" : 983,
"members" : [
{
"name" : "toLowerInPlace",
"kind" : "function",
"type" : "pure nothrow @safe void(ref C[] s)",
"line" : 983}
]
}
,
{
"name" : "toupper(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1057,
"members" : [
{
"name" : "toupper",
"kind" : "function",
"type" : "S(S s)",
"line" : 1057}
]
}
,
{
"name" : "toUpper(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1068,
"members" : [
{
"name" : "toUpper",
"kind" : "function",
"type" : "pure @trusted S(S s)",
"line" : 1068}
]
}
,
{
"name" : "toupperInPlace(C) if (isSomeChar!(C))",
"kind" : "template",
"line" : 1116,
"members" : [
{
"name" : "toupperInPlace",
"kind" : "function",
"type" : "void(ref C[] s)",
"line" : 1116}
]
}
,
{
"name" : "toUpperInPlace(C) if (isSomeChar!(C) && (is(C == char) || is(C == wchar)))",
"kind" : "template",
"line" : 1126,
"members" : [
{
"name" : "toUpperInPlace",
"kind" : "function",
"type" : "void(ref C[] s)",
"line" : 1126}
]
}
,
{
"name" : "toUpperInPlace(C) if (is(C == dchar))",
"kind" : "template",
"line" : 1159,
"members" : [
{
"name" : "toUpperInPlace",
"kind" : "function",
"type" : "pure nothrow @safe void(ref C[] s)",
"line" : 1159}
]
}
,
{
"name" : "capitalize(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1219,
"members" : [
{
"name" : "capitalize",
"kind" : "function",
"type" : "pure @trusted S(S s)",
"line" : 1219}
]
}
,
{
"name" : "capwords(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1297,
"members" : [
{
"name" : "capwords",
"kind" : "function",
"type" : "S(S s)",
"line" : 1297}
]
}
,
{
"name" : "_capWords(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1307,
"members" : [
{
"name" : "_capWords",
"kind" : "function",
"type" : "S(S s)",
"line" : 1307}
]
}
,
{
"name" : "repeat(S)",
"kind" : "template",
"line" : 1367,
"members" : [
{
"name" : "repeat",
"kind" : "function",
"type" : "S(S s, size_t n)",
"line" : 1367}
]
}
,
{
"name" : "splitlines(S)",
"kind" : "template",
"line" : 1379,
"members" : [
{
"name" : "splitlines",
"kind" : "function",
"type" : "S[](S s)",
"line" : 1379}
]
}
,
{
"name" : "splitLines(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1390,
"members" : [
{
"name" : "splitLines",
"kind" : "function",
"type" : "S[](S s)",
"line" : 1390}
]
}
,
{
"name" : "stripl(String)",
"kind" : "template",
"line" : 1454,
"members" : [
{
"name" : "stripl",
"kind" : "function",
"type" : "String(String s)",
"line" : 1454}
]
}
,
{
"name" : "stripLeft(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1463,
"members" : [
{
"name" : "stripLeft",
"kind" : "function",
"type" : "pure @safe S(S s)",
"line" : 1463}
]
}
,
{
"name" : "stripr(String)",
"kind" : "template",
"line" : 1490,
"members" : [
{
"name" : "stripr",
"kind" : "function",
"type" : "String(String s)",
"line" : 1490}
]
}
,
{
"name" : "stripRight(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1499,
"members" : [
{
"name" : "stripRight",
"kind" : "function",
"type" : "S(S s)",
"line" : 1499}
]
}
,
{
"name" : "strip(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1518,
"members" : [
{
"name" : "strip",
"kind" : "function",
"type" : "S(S s)",
"line" : 1518}
]
}
,
{
"name" : "chomp(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1547,
"members" : [
{
"name" : "chomp",
"kind" : "function",
"type" : "S(S s)",
"line" : 1547}
]
}
,
{
"name" : "chomp(S,C) if (isSomeString!(S) && isSomeString!(C[]))",
"kind" : "template",
"line" : 1579,
"members" : [
{
"name" : "chomp",
"kind" : "function",
"type" : "S(S s, const(C)[] delimiter)",
"line" : 1579}
]
}
,
{
"name" : "chompPrefix(C1,C2) if (isSomeString!(C1[]) && isSomeString!(C2[]))",
"kind" : "template",
"line" : 1638,
"members" : [
{
"name" : "chompPrefix",
"kind" : "function",
"type" : "C1[](C1[] longer, C2[] shorter)",
"line" : 1638}
]
}
,
{
"name" : "chop(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1658,
"members" : [
{
"name" : "chop",
"kind" : "function",
"type" : "S(S s)",
"line" : 1658}
]
}
,
{
"name" : "ljustify(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1685,
"members" : [
{
"name" : "ljustify",
"kind" : "function",
"type" : "S(S s, size_t width)",
"line" : 1685}
]
}
,
{
"name" : "leftJustify(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1696,
"members" : [
{
"name" : "leftJustify",
"kind" : "function",
"type" : "@trusted S(S s, size_t width, dchar fillChar = ' ')",
"line" : 1696}
]
}
,
{
"name" : "rjustify(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1732,
"members" : [
{
"name" : "rjustify",
"kind" : "function",
"type" : "S(S s, size_t width)",
"line" : 1732}
]
}
,
{
"name" : "rightJustify(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1743,
"members" : [
{
"name" : "rightJustify",
"kind" : "function",
"type" : "@trusted S(S s, size_t width, dchar fillChar = ' ')",
"line" : 1743}
]
}
,
{
"name" : "center(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1778,
"members" : [
{
"name" : "center",
"kind" : "function",
"type" : "@trusted S(S s, size_t width, dchar fillChar = ' ')",
"line" : 1778}
]
}
,
{
"name" : "zfill(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1845,
"members" : [
{
"name" : "zfill",
"kind" : "function",
"type" : "S(S s, int width)",
"line" : 1845}
]
}
,
{
"name" : "insert(S)",
"kind" : "template",
"line" : 1859,
"members" : [
{
"name" : "insert",
"kind" : "function",
"type" : "S(S s, size_t index, S sub)",
"line" : 1859}
]
}
,
{
"name" : "expandtabs(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1879,
"members" : [
{
"name" : "expandtabs",
"kind" : "function",
"type" : "S(S str, size_t tabsize = 8)",
"line" : 1879}
]
}
,
{
"name" : "detab(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1890,
"members" : [
{
"name" : "detab",
"kind" : "function",
"type" : "pure @trusted S(S s, size_t tabSize = 8)",
"line" : 1890}
]
}
,
{
"name" : "entab(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1977,
"members" : [
{
"name" : "entab",
"kind" : "function",
"type" : "pure @trusted S(S s, size_t tabSize = 8)",
"line" : 1977}
]
}
,
{
"name" : "maketrans",
"kind" : "function",
"type" : "string(in const(char[]) from, in const(char[]) to)",
"line" : 2120}
,
{
"name" : "translate",
"kind" : "function",
"type" : "string(in const(char[]) s, in const(char[]) transtab, in const(char[]) delchars)",
"line" : 2148}
,
{
"name" : "bug2479format",
"kind" : "function",
"type" : "string(TypeInfo[] arguments, void* argptr)",
"line" : 2207}
,
{
"name" : "bug2479sformat",
"kind" : "function",
"type" : "char[](char[] s, TypeInfo[] arguments, void* argptr)",
"line" : 2220}
,
{
"name" : "format",
"kind" : "function",
"type" : "string(...)",
"line" : 2252}
,
{
"name" : "sformat",
"kind" : "function",
"type" : "char[](char[] s,...)",
"line" : 2274}
,
{
"name" : "inPattern(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 2365,
"members" : [
{
"name" : "inPattern",
"kind" : "function",
"type" : "bool(dchar c, in S pattern)",
"line" : 2365}
]
}
,
{
"name" : "inPattern(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 2448,
"members" : [
{
"name" : "inPattern",
"kind" : "function",
"type" : "bool(dchar c, S[] patterns)",
"line" : 2448}
]
}
,
{
"name" : "countchars(S,S1) if (isSomeString!(S) && isSomeString!(S1))",
"kind" : "template",
"line" : 2465,
"members" : [
{
"name" : "countchars",
"kind" : "function",
"type" : "size_t(S s, in S1 pattern)",
"line" : 2465}
]
}
,
{
"name" : "removechars(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 2492,
"members" : [
{
"name" : "removechars",
"kind" : "function",
"type" : "S(S s, in S pattern)",
"line" : 2492}
]
}
,
{
"name" : "squeeze(S)",
"kind" : "template",
"line" : 2538,
"members" : [
{
"name" : "squeeze",
"kind" : "function",
"type" : "S(S s, in S pattern = null)",
"line" : 2538}
]
}
,
{
"name" : "munch(S1,S2)",
"kind" : "template",
"line" : 2616,
"members" : [
{
"name" : "munch",
"kind" : "function",
"type" : "S1(ref S1 s, S2 pattern)",
"line" : 2616}
]
}
,
{
"name" : "succ(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 2648,
"members" : [
{
"name" : "succ",
"kind" : "function",
"type" : "S(S s)",
"line" : 2648}
]
}
,
{
"name" : "tr",
"kind" : "function",
"type" : "string(const(char)[] str, const(char)[] from, const(char)[] to, const(char)[] modifiers = null)",
"line" : 2743}
,
{
"name" : "isNumeric",
"kind" : "function",
"type" : "bool(const(char)[] s, in const(bool) bAllowSep = false)",
"line" : 2944}
,
{
"name" : "isNumeric",
"kind" : "function",
"type" : "bool(...)",
"line" : 3091}
,
{
"name" : "isNumeric",
"kind" : "function",
"type" : "bool(TypeInfo[] _arguments, void* _argptr)",
"line" : 3101}
,
{
"name" : "soundex",
"kind" : "function",
"type" : "char[](const(char)[] string, char[] buffer = null)",
"line" : 3268}
,
{
"name" : "abbrev",
"kind" : "function",
"type" : "string[string](string[] values)",
"line" : 3415}
,
{
"name" : "column(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 3487,
"members" : [
{
"name" : "column",
"kind" : "function",
"type" : "size_t(S str, size_t tabsize = 8)",
"line" : 3487}
]
}
,
{
"name" : "wrap(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 3543,
"members" : [
{
"name" : "wrap",
"kind" : "function",
"type" : "S(S s, size_t columns = 80, S firstindent = null, S indent = null, size_t tabsize = 8)",
"line" : 3543}
]
}
,
{
"name" : "softDeprec(string vers,string date,string oldFunc,string newFunc)",
"kind" : "template",
"line" : 3624,
"members" : [
{
"name" : "softDeprec",
"kind" : "variable",
"line" : 3628}
]
}
]
}
,
{
"name" : "std.syserror",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/syserror.d",
"members" : [
{
"name" : "SysError",
"kind" : "class",
"line" : 16,
"base" : "Object",
"members" : [
{
"name" : "msg",
"kind" : "function",
"type" : "string(uint errcode)",
"line" : 21}
]
}
]
}
,
{
"name" : "std.system",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/system.d",
"members" : [
{
"name" : "Family",
"kind" : "enum",
"line" : 26,
"base" : "int",
"members" : [
{
"name" : "Win32",
"kind" : "enum member",
"line" : 27}
,
{
"name" : "linux",
"kind" : "enum member",
"line" : 28}
,
{
"name" : "OSX",
"kind" : "enum member",
"line" : 29}
]
}
,
{
"name" : "family",
"kind" : "variable",
"type" : "const(Family)",
"line" : 38}
,
{
"name" : "OS",
"kind" : "enum",
"line" : 51,
"base" : "int",
"members" : [
{
"name" : "Windows95",
"kind" : "enum member",
"line" : 52}
,
{
"name" : "Windows98",
"kind" : "enum member",
"line" : 53}
,
{
"name" : "WindowsME",
"kind" : "enum member",
"line" : 54}
,
{
"name" : "WindowsNT",
"kind" : "enum member",
"line" : 55}
,
{
"name" : "Windows2000",
"kind" : "enum member",
"line" : 56}
,
{
"name" : "WindowsXP",
"kind" : "enum member",
"line" : 57}
,
{
"name" : "RedHatLinux",
"kind" : "enum member",
"line" : 59}
,
{
"name" : "OSX",
"kind" : "enum member",
"line" : 60}
]
}
,
{
"name" : "Endian",
"kind" : "enum",
"line" : 66,
"base" : "int",
"members" : [
{
"name" : "BigEndian",
"kind" : "enum member",
"line" : 67}
,
{
"name" : "LittleEndian",
"kind" : "enum member",
"line" : 68}
]
}
,
{
"name" : "endian",
"kind" : "variable",
"type" : "const(Endian)",
"line" : 74}
,
{
"name" : "os",
"kind" : "variable",
"type" : "OS",
"line" : 84}
,
{
"name" : "os_major",
"kind" : "variable",
"type" : "uint",
"line" : 88}
,
{
"name" : "os_minor",
"kind" : "variable",
"type" : "uint",
"line" : 89}
]
}
,
{
"name" : "std.traits",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/traits.d",
"members" : [
{
"name" : "Demangle(T)",
"kind" : "struct",
"line" : 38,
"members" : [
{
"name" : "Demangle",
"kind" : "struct",
"line" : 38,
"members" : [
{
"name" : "value",
"kind" : "variable",
"type" : "T",
"line" : 39}
,
{
"name" : "rest",
"kind" : "variable",
"type" : "string",
"line" : 40}
]
}
]
}
,
{
"name" : "demangleParameterStorageClass",
"kind" : "function",
"type" : "Demangle!(uint)(string mstr)",
"line" : 44}
,
{
"name" : "demangleFunctionAttributes",
"kind" : "function",
"type" : "Demangle!(uint)(string mstr)",
"line" : 75}
,
{
"name" : "staticLength(tuple...)",
"kind" : "template",
"line" : 104,
"members" : [
{
"name" : "staticLength",
"kind" : "variable",
"type" : "size_t",
"line" : 106}
]
}
,
{
"name" : "ReturnType(func...) if (staticLength!(func) == 1)",
"kind" : "template",
"line" : 122,
"members" : [
]
}
,
{
"name" : "ParameterTypeTuple(dg...) if (staticLength!(dg) == 1)",
"kind" : "template",
"line" : 182,
"members" : [
]
}
,
{
"name" : "ParameterStorageClass",
"kind" : "enum",
"line" : 234,
"base" : "uint",
"members" : [
{
"name" : "NONE",
"kind" : "enum member",
"line" : 240}
,
{
"name" : "SCOPE",
"kind" : "enum member",
"line" : 241}
,
{
"name" : "OUT",
"kind" : "enum member",
"line" : 242}
,
{
"name" : "REF",
"kind" : "enum member",
"line" : 243}
,
{
"name" : "LAZY",
"kind" : "enum member",
"line" : 244}
]
}
,
{
"name" : "ParameterStorageClassTuple(func...) if (staticLength!(func) == 1)",
"kind" : "template",
"line" : 248,
"members" : [
]
}
,
{
"name" : "ParameterStorageClassTupleImpl(Func)",
"kind" : "template",
"line" : 258,
"members" : [
{
"name" : "Params",
"kind" : "alias",
"type" : "ParameterTypeTuple!(Func)",
"line" : 264}
,
{
"name" : "margs",
"kind" : "variable",
"line" : 267}
,
{
"name" : "demangleNextParameter(string margs,size_t i = 0)",
"kind" : "template",
"line" : 270,
"members" : [
]
}
,
{
"name" : "Result",
"kind" : "alias",
"type" : "demangleNextParameter!(margs).Result",
"line" : 288}
]
}
,
{
"name" : "FunctionAttribute",
"kind" : "enum",
"line" : 344,
"base" : "uint",
"members" : [
{
"name" : "NONE",
"kind" : "enum member",
"line" : 349}
,
{
"name" : "PURE",
"kind" : "enum member",
"line" : 350}
,
{
"name" : "NOTHROW",
"kind" : "enum member",
"line" : 351}
,
{
"name" : "REF",
"kind" : "enum member",
"line" : 352}
,
{
"name" : "PROPERTY",
"kind" : "enum member",
"line" : 353}
,
{
"name" : "TRUSTED",
"kind" : "enum member",
"line" : 354}
,
{
"name" : "SAFE",
"kind" : "enum member",
"line" : 355}
]
}
,
{
"name" : "functionAttributes(func...) if (staticLength!(func) == 1)",
"kind" : "template",
"line" : 359,
"members" : [
]
}
,
{
"name" : "dummySafeFunc(alias func)",
"kind" : "template",
"line" : 408,
"members" : [
{
"name" : "dummySafeFunc",
"kind" : "function",
"type" : "void()",
"line" : 408}
]
}
,
{
"name" : "isSafe(alias func)",
"kind" : "template",
"line" : 441,
"members" : [
]
}
,
{
"name" : "areAllSafe(funcs...) if (funcs.length > 0)",
"kind" : "template",
"line" : 486,
"members" : [
]
}
,
{
"name" : "isUnsafe(alias func)",
"kind" : "template",
"line" : 534,
"members" : [
{
"name" : "isUnsafe",
"kind" : "variable",
"line" : 536}
]
}
,
{
"name" : "functionLinkage(func...) if (staticLength!(func) == 1)",
"kind" : "template",
"line" : 567,
"members" : [
]
}
,
{
"name" : "LOOKUP_LINKAGE",
"kind" : "variable",
"type" : "string[char]",
"line" : 584}
,
{
"name" : "Variadic",
"kind" : "enum",
"line" : 618,
"base" : "int",
"members" : [
{
"name" : "NO",
"kind" : "enum member",
"line" : 619}
,
{
"name" : "C",
"kind" : "enum member",
"line" : 620}
,
{
"name" : "D",
"kind" : "enum member",
"line" : 622}
,
{
"name" : "TYPESAFE",
"kind" : "enum member",
"line" : 623}
]
}
,
{
"name" : "variadicFunctionStyle(func...) if (staticLength!(func) == 1)",
"kind" : "template",
"line" : 627,
"members" : [
]
}
,
{
"name" : "determineVariadicity(Func)",
"kind" : "template",
"line" : 637,
"members" : [
{
"name" : "determineVariadicity",
"kind" : "function",
"type" : "Variadic()",
"line" : 637}
]
}
,
{
"name" : "FunctionTypeOf(func...) if (staticLength!(func) == 1)",
"kind" : "template",
"line" : 688,
"members" : [
{
"name" : "FunctionTypeOf",
"kind" : "alias",
"type" : "FunctionTypeOf_bug4333!(func).FunctionTypeOf",
"line" : 691}
]
}
,
{
"name" : "FunctionTypeOf_bug4333(func...)",
"kind" : "template",
"line" : 693,
"members" : [
{
"name" : "dummy__",
"kind" : "variable",
"line" : 695}
]
}
,
{
"name" : "FieldTypeTuple(S)",
"kind" : "template",
"line" : 778,
"members" : [
]
}
,
{
"name" : "RepresentationTypeTuple(T)",
"kind" : "template",
"line" : 883,
"members" : [
]
}
,
{
"name" : "RepresentationTypeTupleImpl(T...)",
"kind" : "template",
"line" : 901,
"members" : [
]
}
,
{
"name" : "hasRawPointerImpl(T...)",
"kind" : "template",
"line" : 1012,
"members" : [
]
}
,
{
"name" : "HasRawLocalPointerImpl(T...)",
"kind" : "template",
"line" : 1032,
"members" : [
]
}
,
{
"name" : "hasRawAliasing(T...)",
"kind" : "template",
"line" : 1081,
"members" : [
{
"name" : "hasRawAliasing",
"kind" : "variable",
"line" : 1084}
]
}
,
{
"name" : "hasRawUnsharedAliasing(T...)",
"kind" : "template",
"line" : 1158,
"members" : [
{
"name" : "hasRawUnsharedAliasing",
"kind" : "variable",
"line" : 1161}
]
}
,
{
"name" : "hasObjects(T...)",
"kind" : "template",
"line" : 1216,
"members" : [
]
}
,
{
"name" : "hasUnsharedObjects(T...)",
"kind" : "template",
"line" : 1244,
"members" : [
]
}
,
{
"name" : "hasAliasing(T...)",
"kind" : "template",
"line" : 1276,
"members" : [
{
"name" : "hasAliasing",
"kind" : "variable",
"line" : 1279}
]
}
,
{
"name" : "hasAliasing(R : Rebindable!(R))",
"kind" : "template",
"line" : 1283,
"members" : [
{
"name" : "hasAliasing",
"kind" : "variable",
"line" : 1285}
]
}
,
{
"name" : "hasIndirections(T)",
"kind" : "template",
"line" : 1318,
"members" : [
{
"name" : "hasIndirections",
"kind" : "variable",
"line" : 1320}
]
}
,
{
"name" : "hasIndirectionsImpl(T...)",
"kind" : "template",
"line" : 1323,
"members" : [
]
}
,
{
"name" : "hasLocalAliasing",
"kind" : "alias",
"line" : 1367}
,
{
"name" : "hasRawLocalAliasing",
"kind" : "alias",
"line" : 1368}
,
{
"name" : "hasLocalObjects",
"kind" : "alias",
"line" : 1369}
,
{
"name" : "hasUnsharedAliasing(T...)",
"kind" : "template",
"line" : 1380,
"members" : [
{
"name" : "hasUnsharedAliasing",
"kind" : "variable",
"line" : 1383}
]
}
,
{
"name" : "hasUnsharedAliasing(R : Rebindable!(R))",
"kind" : "template",
"line" : 1387,
"members" : [
{
"name" : "hasUnsharedAliasing",
"kind" : "variable",
"line" : 1389}
]
}
,
{
"name" : "unsharedDelegate(T)",
"kind" : "template",
"line" : 1392,
"members" : [
{
"name" : "unsharedDelegate",
"kind" : "variable",
"type" : "bool",
"line" : 1394}
]
}
,
{
"name" : "hasElaborateCopyConstructor(S)",
"kind" : "template",
"line" : 1435,
"members" : [
]
}
,
{
"name" : "hasElaborateAssign(S)",
"kind" : "template",
"line" : 1480,
"members" : [
]
}
,
{
"name" : "hasElaborateDestructor(S)",
"kind" : "template",
"line" : 1513,
"members" : [
]
}
,
{
"name" : "hasMember(T,string name)",
"kind" : "template",
"line" : 1541,
"members" : [
]
}
,
{
"name" : "EnumMembers(E) if (is(E == enum))",
"kind" : "template",
"line" : 1628,
"members" : [
{
"name" : "EnumMembers",
"kind" : "alias",
"type" : "EnumSpecificMembers!(E,__traits(allMembers,E))",
"line" : 1631}
]
}
,
{
"name" : "EnumSpecificMembers(Enum,names...)",
"kind" : "template",
"line" : 1634,
"members" : [
]
}
,
{
"name" : "WithIdentifier(string ident)",
"kind" : "template",
"line" : 1690,
"members" : [
]
}
,
{
"name" : "BaseTypeTuple(A)",
"kind" : "template",
"line" : 1733,
"members" : [
]
}
,
{
"name" : "BaseClassesTuple(T)",
"kind" : "template",
"line" : 1789,
"members" : [
]
}
,
{
"name" : "InterfacesTuple(T)",
"kind" : "template",
"line" : 1830,
"members" : [
]
}
,
{
"name" : "InterfacesTuple_Flatten(H,T...)",
"kind" : "template",
"line" : 1840,
"members" : [
]
}
,
{
"name" : "TransitiveBaseTypeTuple(T)",
"kind" : "template",
"line" : 1911,
"members" : [
]
}
,
{
"name" : "MemberFunctionsTuple(C,string name) if (is(C == class) || is(C == interface))",
"kind" : "template",
"line" : 1962,
"members" : [
]
}
,
{
"name" : "MemberFunctionTupleImpl(C,string name)",
"kind" : "template",
"line" : 1971,
"members" : [
{
"name" : "CollectOverloads(Node)",
"kind" : "template",
"line" : 1976,
"members" : [
]
}
,
{
"name" : "overloads",
"kind" : "alias",
"type" : "CollectOverloads!(C).result",
"line" : 2006}
,
{
"name" : "shrink(overloads...)",
"kind" : "template",
"line" : 2011,
"members" : [
]
}
,
{
"name" : "shrinkOne(args...)",
"kind" : "template",
"line" : 2024,
"members" : [
{
"name" : "target",
"kind" : "alias",
"type" : "args[0 .. 1]",
"line" : 2026}
,
{
"name" : "rest",
"kind" : "alias",
"type" : "args[1 .. __dollar]",
"line" : 2027}
]
}
,
{
"name" : "result",
"kind" : "alias",
"type" : "shrink!(overloads).result",
"line" : 2052}
]
}
,
{
"name" : "CommonType(T...)",
"kind" : "template",
"line" : 2115,
"members" : [
]
}
,
{
"name" : "ImplicitConversionTargets(T)",
"kind" : "template",
"line" : 2161,
"members" : [
]
}
,
{
"name" : "isImplicitlyConvertible(From,To)",
"kind" : "template",
"line" : 2236,
"members" : [
{
"name" : "isImplicitlyConvertible",
"kind" : "variable",
"type" : "bool",
"line" : 2238}
]
}
,
{
"name" : "isAssignable(Lhs,Rhs)",
"kind" : "template",
"line" : 2265,
"members" : [
{
"name" : "isAssignable",
"kind" : "variable",
"type" : "bool",
"line" : 2266}
]
}
,
{
"name" : "isStorageClassImplicitlyConvertible(From,To)",
"kind" : "template",
"line" : 2286,
"members" : [
{
"name" : "isStorageClassImplicitlyConvertible",
"kind" : "variable",
"line" : 2290}
]
}
,
{
"name" : "Pointify(T)",
"kind" : "template",
"line" : 2292,
"members" : [
{
"name" : "Pointify",
"kind" : "alias",
"type" : "void*",
"line" : 2292}
]
}
,
{
"name" : "isCovariantWith(F,G) if (is(F == function) && is(G == function))",
"kind" : "template",
"line" : 2329,
"members" : [
]
}
,
{
"name" : "isCovariantWithImpl(Upr,Lwr)",
"kind" : "template",
"line" : 2338,
"members" : [
{
"name" : "checkLinkage()",
"kind" : "template",
"line" : 2343,
"members" : [
{
"name" : "ok",
"kind" : "variable",
"line" : 2345}
]
}
,
{
"name" : "checkVariadicity()",
"kind" : "template",
"line" : 2350,
"members" : [
{
"name" : "ok",
"kind" : "variable",
"line" : 2352}
]
}
,
{
"name" : "checkSTC()",
"kind" : "template",
"line" : 2358,
"members" : [
{
"name" : "ok",
"kind" : "variable",
"line" : 2362}
]
}
,
{
"name" : "checkAttributes()",
"kind" : "template",
"line" : 2370,
"members" : [
{
"name" : "FA",
"kind" : "alias",
"type" : "FunctionAttribute",
"line" : 2372}
,
{
"name" : "uprAtts",
"kind" : "variable",
"line" : 2373}
,
{
"name" : "lwrAtts",
"kind" : "variable",
"line" : 2374}
,
{
"name" : "WANT_EXACT",
"kind" : "variable",
"line" : 2376}
,
{
"name" : "SAFETY",
"kind" : "variable",
"line" : 2377}
,
{
"name" : "ok",
"kind" : "variable",
"line" : 2382}
]
}
,
{
"name" : "checkReturnType()",
"kind" : "template",
"line" : 2387,
"members" : [
{
"name" : "ok",
"kind" : "variable",
"line" : 2389}
]
}
,
{
"name" : "checkParameters()",
"kind" : "template",
"line" : 2397,
"members" : [
{
"name" : "STC",
"kind" : "alias",
"type" : "ParameterStorageClass",
"line" : 2399}
,
{
"name" : "UprParams",
"kind" : "alias",
"type" : "ParameterTypeTuple!(Upr)",
"line" : 2400}
,
{
"name" : "LwrParams",
"kind" : "alias",
"type" : "ParameterTypeTuple!(Lwr)",
"line" : 2401}
,
{
"name" : "UprPSTCs",
"kind" : "alias",
"type" : "ParameterStorageClassTuple!(Upr)",
"line" : 2402}
,
{
"name" : "LwrPSTCs",
"kind" : "alias",
"type" : "ParameterStorageClassTuple!(Lwr)",
"line" : 2403}
,
{
"name" : "checkNext(size_t i)",
"kind" : "template",
"line" : 2405,
"members" : [
]
}
]
}
,
{
"name" : "yes",
"kind" : "variable",
"type" : "bool",
"line" : 2428}
]
}
,
{
"name" : "isIntegral(T)",
"kind" : "template",
"line" : 2509,
"members" : [
{
"name" : "isIntegral",
"kind" : "variable",
"type" : "bool",
"line" : 2511}
]
}
,
{
"name" : "isFloatingPoint(T)",
"kind" : "template",
"line" : 2572,
"members" : [
{
"name" : "isFloatingPoint",
"kind" : "variable",
"type" : "bool",
"line" : 2574}
]
}
,
{
"name" : "isNumeric(T)",
"kind" : "template",
"line" : 2605,
"members" : [
{
"name" : "isNumeric",
"kind" : "variable",
"type" : "bool",
"line" : 2607}
]
}
,
{
"name" : "isUnsigned(T)",
"kind" : "template",
"line" : 2613,
"members" : [
{
"name" : "isUnsigned",
"kind" : "variable",
"type" : "bool",
"line" : 2615}
]
}
,
{
"name" : "isSigned(T)",
"kind" : "template",
"line" : 2622,
"members" : [
{
"name" : "isSigned",
"kind" : "variable",
"type" : "bool",
"line" : 2624}
]
}
,
{
"name" : "isSomeString(T)",
"kind" : "template",
"line" : 2632,
"members" : [
{
"name" : "isSomeString",
"kind" : "variable",
"line" : 2634}
]
}
,
{
"name" : "isNarrowString(T)",
"kind" : "template",
"line" : 2650,
"members" : [
{
"name" : "isNarrowString",
"kind" : "variable",
"line" : 2652}
]
}
,
{
"name" : "isSomeChar(T)",
"kind" : "template",
"line" : 2672,
"members" : [
{
"name" : "isSomeChar",
"kind" : "variable",
"line" : 2674}
]
}
,
{
"name" : "isAssociativeArray(T)",
"kind" : "template",
"line" : 2695,
"members" : [
{
"name" : "isAssociativeArray",
"kind" : "variable",
"type" : "bool",
"line" : 2697}
]
}
,
{
"name" : "isStaticArray(T : U[N],U,ulong N)",
"kind" : "template",
"line" : 2723,
"members" : [
{
"name" : "isStaticArray",
"kind" : "variable",
"type" : "bool",
"line" : 2725}
]
}
,
{
"name" : "isStaticArray(T)",
"kind" : "template",
"line" : 2728,
"members" : [
{
"name" : "isStaticArray",
"kind" : "variable",
"type" : "bool",
"line" : 2730}
]
}
,
{
"name" : "isDynamicArray(T,U = void)",
"kind" : "template",
"line" : 2755,
"members" : [
{
"name" : "isDynamicArray",
"kind" : "variable",
"type" : "bool",
"line" : 2757}
]
}
,
{
"name" : "isDynamicArray(T : U[],U)",
"kind" : "template",
"line" : 2760,
"members" : [
{
"name" : "isDynamicArray",
"kind" : "variable",
"type" : "bool",
"line" : 2762}
]
}
,
{
"name" : "isArray(T)",
"kind" : "template",
"line" : 2774,
"members" : [
{
"name" : "isArray",
"kind" : "variable",
"type" : "bool",
"line" : 2776}
]
}
,
{
"name" : "isPointer(T)",
"kind" : "template",
"line" : 2791,
"members" : [
]
}
,
{
"name" : "pointerTarget(T : T*)",
"kind" : "template",
"line" : 2815,
"members" : [
{
"name" : "pointerTarget",
"kind" : "alias",
"type" : "T",
"line" : 2816}
]
}
,
{
"name" : "isIterable(T)",
"kind" : "template",
"line" : 2832,
"members" : [
]
}
,
{
"name" : "isMutable(T)",
"kind" : "template",
"line" : 2865,
"members" : [
{
"name" : "isMutable",
"kind" : "variable",
"line" : 2867}
]
}
,
{
"name" : "isExpressionTuple(T...)",
"kind" : "template",
"line" : 2885,
"members" : [
]
}
,
{
"name" : "isTypeTuple(T...)",
"kind" : "template",
"line" : 2918,
"members" : [
]
}
,
{
"name" : "isFunctionPointer(T...) if (staticLength!(T) == 1)",
"kind" : "template",
"line" : 2948,
"members" : [
]
}
,
{
"name" : "isDelegate(T...) if (staticLength!(T) == 1)",
"kind" : "template",
"line" : 2983,
"members" : [
{
"name" : "isDelegate",
"kind" : "variable",
"type" : "bool",
"line" : 2986}
]
}
,
{
"name" : "isSomeFunction(T...) if (staticLength!(T) == 1)",
"kind" : "template",
"line" : 3002,
"members" : [
{
"name" : "isSomeFunction",
"kind" : "variable",
"type" : "bool",
"line" : 3005}
]
}
,
{
"name" : "isSomeFunction_bug4333(T...)",
"kind" : "template",
"line" : 3007,
"members" : [
{
"name" : "dummy__",
"kind" : "variable",
"line" : 3009}
]
}
,
{
"name" : "isCallable(T...) if (staticLength!(T) == 1)",
"kind" : "template",
"line" : 3064,
"members" : [
{
"name" : "isCallable",
"kind" : "variable",
"type" : "bool",
"line" : 3067}
]
}
,
{
"name" : "isCallable_bug4333(T...)",
"kind" : "template",
"line" : 3069,
"members" : [
{
"name" : "dummy__",
"kind" : "variable",
"line" : 3071}
]
}
,
{
"name" : "isAbstractFunction(method...) if (staticLength!(method) == 1)",
"kind" : "template",
"line" : 3104,
"members" : [
{
"name" : "isAbstractFunction",
"kind" : "variable",
"type" : "bool",
"line" : 3107}
]
}
,
{
"name" : "Unqual(T)",
"kind" : "template",
"line" : 3128,
"members" : [
]
}
,
{
"name" : "ModifyTypePreservingSTC(alias Modifier,T)",
"kind" : "template",
"line" : 3159,
"members" : [
]
}
,
{
"name" : "StringTypeOf(T) if (isSomeString!(T))",
"kind" : "template",
"line" : 3179,
"members" : [
]
}
,
{
"name" : "ForeachType(T)",
"kind" : "template",
"line" : 3260,
"members" : [
{
"name" : "ForeachType",
"kind" : "alias",
"type" : "ReturnType!(typeof(delegate ()\n{\nforeach (elem; T.init)\n{\nreturn elem;\n}\nassert(0);\n}\n))",
"line" : 3268}
]
}
,
{
"name" : "OriginalType(T)",
"kind" : "template",
"line" : 3290,
"members" : [
{
"name" : "OriginalType",
"kind" : "alias",
"type" : "ModifyTypePreservingSTC!(OriginalTypeImpl,T)",
"line" : 3292}
]
}
,
{
"name" : "OriginalTypeImpl(T)",
"kind" : "template",
"line" : 3295,
"members" : [
]
}
,
{
"name" : "Unsigned(T)",
"kind" : "template",
"line" : 3324,
"members" : [
{
"name" : "Unsigned",
"kind" : "alias",
"type" : "ModifyTypePreservingSTC!(UnsignedImpl,OriginalType!(T))",
"line" : 3326}
]
}
,
{
"name" : "UnsignedImpl(T)",
"kind" : "template",
"line" : 3329,
"members" : [
]
}
,
{
"name" : "Largest(T...) if (T.length >= 1)",
"kind" : "template",
"line" : 3358,
"members" : [
]
}
,
{
"name" : "Signed(T)",
"kind" : "template",
"line" : 3383,
"members" : [
{
"name" : "Signed",
"kind" : "alias",
"type" : "ModifyTypePreservingSTC!(SignedImpl,OriginalType!(T))",
"line" : 3385}
]
}
,
{
"name" : "SignedImpl(T)",
"kind" : "template",
"line" : 3388,
"members" : [
]
}
,
{
"name" : "unsigned(T) if (isIntegral!(T))",
"kind" : "template",
"line" : 3415,
"members" : [
{
"name" : "unsigned",
"kind" : "function",
"type" : "(T x)",
"line" : 3415}
]
}
,
{
"name" : "unsigned(T) if (isSomeChar!(T))",
"kind" : "template",
"line" : 3433,
"members" : [
{
"name" : "unsigned",
"kind" : "function",
"type" : "(T x)",
"line" : 3433}
]
}
,
{
"name" : "mostNegative(T)",
"kind" : "template",
"line" : 3444,
"members" : [
]
}
,
{
"name" : "mangledName(sth...) if (staticLength!(sth) == 1)",
"kind" : "template",
"line" : 3479,
"members" : [
{
"name" : "mangledName",
"kind" : "variable",
"type" : "string",
"line" : 3482}
]
}
,
{
"name" : "Dummy(T...)",
"kind" : "template",
"line" : 3485,
"members" : [
{
"name" : "Hook",
"kind" : "struct",
"line" : 3485,
"members" : [
]
}
]
}
,
{
"name" : "removeDummyEnvelope",
"kind" : "function",
"type" : "string(string s)",
"line" : 3487}
,
{
"name" : "traits_allMembers(Agg)",
"kind" : "template",
"line" : 3555,
"members" : [
]
}
,
{
"name" : "traits_allMembers_ifaces(I...)",
"kind" : "template",
"line" : 3564,
"members" : [
]
}
,
{
"name" : "Select(bool condition,T,F)",
"kind" : "template",
"line" : 3597,
"members" : [
]
}
,
{
"name" : "select(bool cond : true,A,B)",
"kind" : "template",
"line" : 3613,
"members" : [
{
"name" : "select",
"kind" : "function",
"type" : "A(A a, lazy B b)",
"line" : 3613}
]
}
,
{
"name" : "select(bool cond : false,A,B)",
"kind" : "template",
"line" : 3615,
"members" : [
{
"name" : "select",
"kind" : "function",
"type" : "B(lazy A a, B b)",
"line" : 3615}
]
}
]
}
,
{
"name" : "std.typecons",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/typecons.d",
"members" : [
{
"name" : "Unique(T)",
"kind" : "struct",
"line" : 62,
"members" : [
{
"name" : "Unique",
"kind" : "struct",
"line" : 62,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(RefT p)",
"line" : 89}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(ref RefT p)",
"line" : 99}
,
{
"name" : "isEmpty",
"kind" : "function",
"type" : "const bool()",
"line" : 138}
,
{
"name" : "release",
"kind" : "function",
"type" : "Unique()",
"line" : 143}
,
{
"name" : "opDot",
"kind" : "function",
"type" : "RefT()",
"line" : 152}
,
{
"name" : "_p",
"kind" : "variable",
"type" : "RefT",
"line" : 162}
]
}
]
}
,
{
"name" : "Tuple(Specs...)",
"kind" : "struct",
"line" : 272,
"members" : [
{
"name" : "Tuple",
"kind" : "struct",
"line" : 272,
"members" : [
{
"name" : "parseSpecs(Specs...)",
"kind" : "template",
"line" : 277,
"members" : [
]
}
,
{
"name" : "FieldSpec(T,string s = \"\")",
"kind" : "template",
"line" : 303,
"members" : [
{
"name" : "Type",
"kind" : "alias",
"type" : "T",
"line" : 305}
,
{
"name" : "name",
"kind" : "alias",
"type" : "s",
"line" : 306}
]
}
,
{
"name" : "fieldSpecs",
"kind" : "alias",
"type" : "parseSpecs!(Specs)",
"line" : 309}
,
{
"name" : "extractType(alias spec)",
"kind" : "template",
"line" : 312,
"members" : [
{
"name" : "extractType",
"kind" : "alias",
"type" : "spec.Type",
"line" : 312}
]
}
,
{
"name" : "extractName(alias spec)",
"kind" : "template",
"line" : 313,
"members" : [
{
"name" : "extractName",
"kind" : "alias",
"type" : "spec.name",
"line" : 313}
]
}
,
{
"name" : "injectNamedFields",
"kind" : "function",
"type" : "string()",
"line" : 321}
,
{
"name" : "sliceSpecs(size_t from,size_t to)",
"kind" : "template",
"line" : 339,
"members" : [
{
"name" : "sliceSpecs",
"kind" : "alias",
"type" : "staticMap!(expandSpec,fieldSpecs[from .. to])",
"line" : 342}
]
}
,
{
"name" : "expandSpec(alias spec)",
"kind" : "template",
"line" : 345,
"members" : [
]
}
,
{
"name" : "Types",
"kind" : "alias",
"type" : "staticMap!(extractType,fieldSpecs)",
"line" : 361}
,
{
"name" : "field",
"kind" : "variable",
"type" : "Types",
"line" : 363}
,
{
"name" : "expand",
"kind" : "alias",
"type" : "field",
"line" : 365}
,
{
"name" : "at(size_t index)",
"kind" : "template",
"line" : 371,
"members" : [
{
"name" : "at",
"kind" : "function",
"type" : "()",
"line" : 371}
]
}
,
{
"name" : "__ctor(U...) if (U.length == Types.length)",
"kind" : "template",
"line" : 379,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(U values)",
"line" : 379}
]
}
,
{
"name" : "__ctor(U) if (isTuple!(U))",
"kind" : "template",
"line" : 392,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(U another)",
"line" : 392}
]
}
,
{
"name" : "opEquals(R) if (isTuple!(R))",
"kind" : "template",
"line" : 406,
"members" : [
{
"name" : "opEquals",
"kind" : "function",
"type" : "bool(R rhs)",
"line" : 406}
]
}
,
{
"name" : "opCmp(R) if (isTuple!(R))",
"kind" : "template",
"line" : 422,
"members" : [
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(R rhs)",
"line" : 422}
]
}
,
{
"name" : "opAssign(R) if (isTuple!(R))",
"kind" : "template",
"line" : 442,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(R rhs)",
"line" : 442}
]
}
,
{
"name" : "assign(R) if (isTuple!(R))",
"kind" : "template",
"line" : 454,
"members" : [
{
"name" : "assign",
"kind" : "function",
"type" : "void(R rhs)",
"line" : 454}
]
}
,
{
"name" : "_workaround4424()",
"kind" : "template",
"line" : 460,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(typeof(this))",
"line" : 462}
]
}
,
{
"name" : "slice(uint from,uint to)",
"kind" : "template",
"line" : 481,
"members" : [
{
"name" : "slice",
"kind" : "function",
"type" : "Tuple!(sliceSpecs!(from,to))()",
"line" : 481}
]
}
,
{
"name" : "length",
"kind" : "variable",
"line" : 489}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 494}
]
}
]
}
,
{
"name" : "Identity(alias T)",
"kind" : "template",
"line" : 518,
"members" : [
{
"name" : "Identity",
"kind" : "alias",
"type" : "T",
"line" : 520}
]
}
,
{
"name" : "tuple(T...)",
"kind" : "template",
"line" : 663,
"members" : [
{
"name" : "tuple",
"kind" : "function",
"type" : "Tuple!(T)(T args)",
"line" : 663}
]
}
,
{
"name" : "isTuple(T)",
"kind" : "template",
"line" : 674,
"members" : [
]
}
,
{
"name" : "enumValuesImpl(string name,BaseType,long index,T...)",
"kind" : "template",
"line" : 705,
"members" : [
]
}
,
{
"name" : "enumParserImpl(string name,bool first,T...)",
"kind" : "template",
"line" : 735,
"members" : [
]
}
,
{
"name" : "enumPrinterImpl(string name,bool first,T...)",
"kind" : "template",
"line" : 755,
"members" : [
]
}
,
{
"name" : "ValueTuple(T...)",
"kind" : "template",
"line" : 773,
"members" : [
{
"name" : "ValueTuple",
"kind" : "alias",
"type" : "T",
"line" : 775}
]
}
,
{
"name" : "StringsOnly(T...)",
"kind" : "template",
"line" : 778,
"members" : [
]
}
,
{
"name" : "defineEnum(string name,T...)",
"kind" : "template",
"line" : 824,
"members" : [
]
}
,
{
"name" : "Rebindable(T) if (is(T == class) || is(T == interface) || isArray!(T))",
"kind" : "template",
"line" : 880,
"members" : [
]
}
,
{
"name" : "rebindable(T) if (is(T == class) || is(T == interface) || isArray!(T))",
"kind" : "template",
"line" : 933,
"members" : [
{
"name" : "rebindable",
"kind" : "function",
"type" : "Rebindable!(T)(T obj)",
"line" : 933}
]
}
,
{
"name" : "rebindable(T)",
"kind" : "template",
"line" : 946,
"members" : [
{
"name" : "rebindable",
"kind" : "function",
"type" : "Rebindable!(T)(Rebindable!(T) obj)",
"line" : 946}
]
}
,
{
"name" : "alignForSize(E...)",
"kind" : "template",
"line" : 1029,
"members" : [
{
"name" : "alignForSize",
"kind" : "function",
"type" : "string(string[] names...)",
"line" : 1029}
]
}
,
{
"name" : "Ref(T)",
"kind" : "struct",
"line" : 1084,
"members" : [
{
"name" : "Ref",
"kind" : "struct",
"line" : 1084,
"members" : [
{
"name" : "_p",
"kind" : "variable",
"type" : "T*",
"line" : 1085}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "(ref T value)",
"line" : 1086}
,
{
"name" : "opDot",
"kind" : "function",
"type" : "T()",
"line" : 1087}
,
{
"name" : "opImplicitCastTo",
"kind" : "function",
"type" : "T()",
"line" : 1088}
,
{
"name" : "value",
"kind" : "function",
"type" : "T()",
"line" : 1089}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(T value)",
"line" : 1091}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(T* value)",
"line" : 1095}
]
}
]
}
,
{
"name" : "BlackHole(Base)",
"kind" : "template",
"line" : 1390,
"members" : [
{
"name" : "BlackHole",
"kind" : "alias",
"type" : "AutoImplement!(Base,generateEmptyFunction,isAbstractFunction)",
"line" : 1393}
]
}
,
{
"name" : "WhiteHole(Base)",
"kind" : "template",
"line" : 1456,
"members" : [
{
"name" : "WhiteHole",
"kind" : "alias",
"type" : "AutoImplement!(Base,generateAssertTrap,isAbstractFunction)",
"line" : 1459}
]
}
,
{
"name" : "NotImplementedError",
"kind" : "class",
"line" : 1463,
"base" : "Error",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "NotImplementedError(string method)",
"line" : 1465}
]
}
,
{
"name" : "AutoImplement(Base,alias how,alias what = isAbstractFunction)",
"kind" : "class",
"line" : 1591,
"members" : [
{
"name" : "AutoImplement",
"kind" : "class",
"line" : 1591,
"members" : [
{
"name" : "autoImplement_helper_",
"kind" : "alias",
"type" : "AutoImplement_Helper!(\"autoImplement_helper_\",\"Base\",Base,how,what)",
"line" : 1595}
]
}
]
}
,
{
"name" : "AutoImplement_Helper(string myName,string baseName,Base,alias generateMethodBody,alias cherrypickMethod)",
"kind" : "template",
"line" : 1604,
"members" : [
{
"name" : "staticFilter(alias pred,lst...)",
"kind" : "template",
"line" : 1613,
"members" : [
{
"name" : "staticFilter",
"kind" : "alias",
"type" : "staticFilterImpl!(pred,lst).result",
"line" : 1615}
]
}
,
{
"name" : "staticFilterImpl(alias pred,lst...)",
"kind" : "template",
"line" : 1617,
"members" : [
]
}
,
{
"name" : "enumerateOverloads(C,alias pred)",
"kind" : "template",
"line" : 1633,
"members" : [
{
"name" : "enumerateOverloads",
"kind" : "alias",
"type" : "enumerateOverloadsImpl!(C,pred,traits_allMembers!(C)).result",
"line" : 1636}
]
}
,
{
"name" : "enumerateOverloadsImpl(C,alias pred,names...)",
"kind" : "template",
"line" : 1638,
"members" : [
]
}
,
{
"name" : "canonicalPicker(fun...)",
"kind" : "template",
"line" : 1660,
"members" : [
{
"name" : "canonicalPicker",
"kind" : "variable",
"type" : "bool",
"line" : 1662}
]
}
,
{
"name" : "targetOverloadSets",
"kind" : "alias",
"type" : "enumerateOverloads!(Base,canonicalPicker)",
"line" : 1670}
,
{
"name" : "INTERNAL_FUNCINFO_ID(string name,size_t i)",
"kind" : "template",
"line" : 1699,
"members" : [
{
"name" : "INTERNAL_FUNCINFO_ID",
"kind" : "variable",
"type" : "string",
"line" : 1701}
]
}
,
{
"name" : "populate(overloads...)",
"kind" : "template",
"line" : 1709,
"members" : [
]
}
,
{
"name" : "populate(string name,methods...)",
"kind" : "template",
"line" : 1717,
"members" : [
]
}
,
{
"name" : "CommonGeneratingPolicy()",
"kind" : "template",
"line" : 1739,
"members" : [
{
"name" : "BASE_CLASS_ID",
"kind" : "variable",
"type" : "string",
"line" : 1742}
,
{
"name" : "FUNCINFO_ID(string name,size_t i)",
"kind" : "template",
"line" : 1745,
"members" : [
{
"name" : "FUNCINFO_ID",
"kind" : "variable",
"type" : "string",
"line" : 1747}
]
}
]
}
,
{
"name" : "ConstructorGeneratingPolicy()",
"kind" : "template",
"line" : 1753,
"members" : [
{
"name" : "generateFunctionBody(ctor...)",
"kind" : "template",
"line" : 1758,
"members" : [
{
"name" : "generateFunctionBody",
"kind" : "function",
"type" : "@property string()",
"line" : 1758}
]
}
]
}
,
{
"name" : "MethodGeneratingPolicy()",
"kind" : "template",
"line" : 1774,
"members" : [
{
"name" : "generateFunctionBody(func...)",
"kind" : "template",
"line" : 1779,
"members" : [
{
"name" : "generateFunctionBody",
"kind" : "function",
"type" : "@property string()",
"line" : 1779}
]
}
]
}
,
{
"name" : "ConstructorGenerator",
"kind" : "alias",
"type" : "MemberFunctionGenerator!(ConstructorGeneratingPolicy!())",
"line" : 1791}
,
{
"name" : "MethodGenerator",
"kind" : "alias",
"type" : "MemberFunctionGenerator!(MethodGeneratingPolicy!())",
"line" : 1793}
,
{
"name" : "code",
"kind" : "variable",
"type" : "string",
"line" : 1795}
]
}
,
{
"name" : "OverloadSet(string nam,T...)",
"kind" : "template",
"line" : 1891,
"members" : [
{
"name" : "name",
"kind" : "variable",
"type" : "string",
"line" : 1893}
,
{
"name" : "contents",
"kind" : "alias",
"type" : "T",
"line" : 1894}
]
}
,
{
"name" : "FuncInfo(alias func,T = typeof(&func))",
"kind" : "template",
"line" : 1900,
"members" : [
{
"name" : "RT",
"kind" : "alias",
"type" : "ReturnType!(T)",
"line" : 1902}
,
{
"name" : "PT",
"kind" : "alias",
"type" : "ParameterTypeTuple!(T)",
"line" : 1903}
]
}
,
{
"name" : "FuncInfo(Func)",
"kind" : "template",
"line" : 1905,
"members" : [
{
"name" : "RT",
"kind" : "alias",
"type" : "ReturnType!(Func)",
"line" : 1907}
,
{
"name" : "PT",
"kind" : "alias",
"type" : "ParameterTypeTuple!(Func)",
"line" : 1908}
]
}
,
{
"name" : "MemberFunctionGenerator(alias Policy)",
"kind" : "template",
"line" : 1937,
"members" : [
{
"name" : "CONSTRUCTOR_NAME",
"kind" : "variable",
"line" : 1944}
,
{
"name" : "WITH_BASE_CLASS",
"kind" : "variable",
"line" : 1947}
,
{
"name" : "WITHOUT_SYMBOL",
"kind" : "variable",
"line" : 1950}
,
{
"name" : "CountUp(size_t n)",
"kind" : "template",
"line" : 1967,
"members" : [
]
}
,
{
"name" : "generateCode(overloads...)",
"kind" : "template",
"line" : 1984,
"members" : [
{
"name" : "generateCode",
"kind" : "function",
"type" : "@property string()",
"line" : 1984}
]
}
,
{
"name" : "generateCodeForOverloadSet(alias oset)",
"kind" : "template",
"line" : 2010,
"members" : [
{
"name" : "generateCodeForOverloadSet",
"kind" : "function",
"type" : "@property string()",
"line" : 2010}
]
}
,
{
"name" : "generateFunction(string myFuncInfo,string name,func...)",
"kind" : "template",
"line" : 2029,
"members" : [
{
"name" : "generateFunction",
"kind" : "function",
"type" : "@property string()",
"line" : 2029}
]
}
,
{
"name" : "generateParameters(string myFuncInfo,func...)",
"kind" : "template",
"line" : 2127,
"members" : [
{
"name" : "generateParameters",
"kind" : "function",
"type" : "@property string()",
"line" : 2127}
]
}
,
{
"name" : "enumerateParameters(size_t n)",
"kind" : "template",
"line" : 2173,
"members" : [
{
"name" : "enumerateParameters",
"kind" : "function",
"type" : "@property string()",
"line" : 2173}
]
}
]
}
,
{
"name" : "generateEmptyFunction(C,func...)",
"kind" : "template",
"line" : 2192,
"members" : [
]
}
,
{
"name" : "generateAssertTrap(C,func...)",
"kind" : "template",
"line" : 2209,
"members" : [
]
}
,
{
"name" : "RefCountedAutoInitialize",
"kind" : "enum",
"line" : 2231,
"base" : "int",
"members" : [
{
"name" : "no",
"kind" : "enum member",
"line" : 2233}
,
{
"name" : "yes",
"kind" : "enum member",
"line" : 2235}
]
}
,
{
"name" : "RefCounted(T,RefCountedAutoInitialize autoInit = RefCountedAutoInitialize.yes) if (!is(T == class))",
"kind" : "struct",
"line" : 2273,
"members" : [
{
"name" : "RefCounted",
"kind" : "struct",
"line" : 2273,
"members" : [
{
"name" : "_RefCounted",
"kind" : "struct",
"line" : 2275,
"members" : [
{
"name" : "_store",
"kind" : "variable",
"type" : "Tuple!(T,\"_payload\",size_t,\"_count\")*",
"line" : 2276}
,
{
"name" : "initialize(A...)",
"kind" : "template",
"line" : 2296,
"members" : [
{
"name" : "initialize",
"kind" : "function",
"type" : "void(A args)",
"line" : 2296}
]
}
,
{
"name" : "isInitialized",
"kind" : "function",
"type" : "const bool()",
"line" : 2316}
,
{
"name" : "ensureInitialized",
"kind" : "function",
"type" : "void()",
"line" : 2325}
]
}
,
{
"name" : "RefCounted",
"kind" : "variable",
"type" : "_RefCounted",
"line" : 2331}
,
{
"name" : "__ctor(A...) if (A.length > 0)",
"kind" : "template",
"line" : 2338,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(A args)",
"line" : 2338}
]
}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(typeof(this) rhs)",
"line" : 2394}
,
{
"name" : "opAssign",
"kind" : "function",
"type" : "void(T rhs)",
"line" : 2400}
,
{
"name" : "refCountedPayload",
"kind" : "function",
"type" : "T()",
"line" : 2421}
,
{
"name" : "refCountedPayload",
"kind" : "function",
"type" : "const const(T)()",
"line" : 2435}
]
}
]
}
,
{
"name" : "scoped(T,Args...) if (is(T == class))",
"kind" : "template",
"line" : 2511,
"members" : [
{
"name" : "scoped",
"kind" : "function",
"type" : "@system (Args args)",
"line" : 2511}
]
}
,
{
"name" : "_d_monitordelete",
"kind" : "function",
"type" : "voidC (Object h, bool det)",
"line" : 2555}
,
{
"name" : "destroy(T) if (is(T == class))",
"kind" : "template",
"line" : 2562,
"members" : [
{
"name" : "destroy",
"kind" : "function",
"type" : "void(T obj)",
"line" : 2562}
]
}
,
{
"name" : "Flag(string name)",
"kind" : "template",
"line" : 2668,
"members" : [
{
"name" : "Flag",
"kind" : "enum",
"line" : 2670,
"base" : "bool",
"members" : [
{
"name" : "no",
"kind" : "enum member",
"line" : 2677}
,
{
"name" : "yes",
"kind" : "enum member",
"line" : 2684}
]
}
]
}
,
{
"name" : "Yes",
"kind" : "struct",
"line" : 2694,
"members" : [
{
"name" : "opDispatch(string name)",
"kind" : "template",
"line" : 2695,
"members" : [
{
"name" : "opDispatch",
"kind" : "function",
"type" : "@property ()",
"line" : 2695}
]
}
]
}
,
{
"name" : "No",
"kind" : "struct",
"line" : 2702,
"members" : [
{
"name" : "opDispatch(string name)",
"kind" : "template",
"line" : 2703,
"members" : [
{
"name" : "opDispatch",
"kind" : "function",
"type" : "@property ()",
"line" : 2703}
]
}
]
}
]
}
,
{
"name" : "std.typetuple",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/typetuple.d",
"members" : [
{
"name" : "TypeTuple(TList...)",
"kind" : "template",
"line" : 53,
"members" : [
{
"name" : "TypeTuple",
"kind" : "alias",
"type" : "TList",
"line" : 55}
]
}
,
{
"name" : "staticIndexOf(T,TList...)",
"kind" : "template",
"line" : 75,
"members" : [
{
"name" : "staticIndexOf",
"kind" : "variable",
"line" : 77}
]
}
,
{
"name" : "staticIndexOf(alias T,TList...)",
"kind" : "template",
"line" : 81,
"members" : [
{
"name" : "staticIndexOf",
"kind" : "variable",
"line" : 83}
]
}
,
{
"name" : "genericIndexOf(args...) if (args.length >= 1)",
"kind" : "template",
"line" : 87,
"members" : [
{
"name" : "e",
"kind" : "alias",
"type" : "Alias!(args[0])",
"line" : 90}
,
{
"name" : "tuple",
"kind" : "alias",
"type" : "args[1 .. __dollar]",
"line" : 91}
]
}
,
{
"name" : "IndexOf",
"kind" : "alias",
"line" : 137}
,
{
"name" : "Erase(T,TList...)",
"kind" : "template",
"line" : 158,
"members" : [
{
"name" : "Erase",
"kind" : "alias",
"type" : "GenericErase!(T,TList).result",
"line" : 160}
]
}
,
{
"name" : "Erase(alias T,TList...)",
"kind" : "template",
"line" : 164,
"members" : [
{
"name" : "Erase",
"kind" : "alias",
"type" : "GenericErase!(T,TList).result",
"line" : 166}
]
}
,
{
"name" : "GenericErase(args...) if (args.length >= 1)",
"kind" : "template",
"line" : 170,
"members" : [
{
"name" : "e",
"kind" : "alias",
"type" : "Alias!(args[0])",
"line" : 173}
,
{
"name" : "tuple",
"kind" : "alias",
"type" : "args[1 .. __dollar]",
"line" : 174}
]
}
,
{
"name" : "EraseAll(T,TList...)",
"kind" : "template",
"line" : 216,
"members" : [
{
"name" : "EraseAll",
"kind" : "alias",
"type" : "GenericEraseAll!(T,TList).result",
"line" : 218}
]
}
,
{
"name" : "EraseAll(alias T,TList...)",
"kind" : "template",
"line" : 222,
"members" : [
{
"name" : "EraseAll",
"kind" : "alias",
"type" : "GenericEraseAll!(T,TList).result",
"line" : 224}
]
}
,
{
"name" : "GenericEraseAll(args...) if (args.length >= 1)",
"kind" : "template",
"line" : 228,
"members" : [
{
"name" : "e",
"kind" : "alias",
"type" : "Alias!(args[0])",
"line" : 231}
,
{
"name" : "tuple",
"kind" : "alias",
"type" : "args[1 .. __dollar]",
"line" : 232}
]
}
,
{
"name" : "NoDuplicates(TList...)",
"kind" : "template",
"line" : 275,
"members" : [
]
}
,
{
"name" : "Replace(T,U,TList...)",
"kind" : "template",
"line" : 304,
"members" : [
{
"name" : "Replace",
"kind" : "alias",
"type" : "GenericReplace!(T,U,TList).result",
"line" : 306}
]
}
,
{
"name" : "Replace(alias T,U,TList...)",
"kind" : "template",
"line" : 310,
"members" : [
{
"name" : "Replace",
"kind" : "alias",
"type" : "GenericReplace!(T,U,TList).result",
"line" : 312}
]
}
,
{
"name" : "Replace(T,alias U,TList...)",
"kind" : "template",
"line" : 316,
"members" : [
{
"name" : "Replace",
"kind" : "alias",
"type" : "GenericReplace!(T,U,TList).result",
"line" : 318}
]
}
,
{
"name" : "Replace(alias T,alias U,TList...)",
"kind" : "template",
"line" : 322,
"members" : [
{
"name" : "Replace",
"kind" : "alias",
"type" : "GenericReplace!(T,U,TList).result",
"line" : 324}
]
}
,
{
"name" : "GenericReplace(args...) if (args.length >= 2)",
"kind" : "template",
"line" : 328,
"members" : [
{
"name" : "from",
"kind" : "alias",
"type" : "Alias!(args[0])",
"line" : 331}
,
{
"name" : "to",
"kind" : "alias",
"type" : "Alias!(args[1])",
"line" : 332}
,
{
"name" : "tuple",
"kind" : "alias",
"type" : "args[2 .. __dollar]",
"line" : 333}
]
}
,
{
"name" : "ReplaceAll(T,U,TList...)",
"kind" : "template",
"line" : 383,
"members" : [
{
"name" : "ReplaceAll",
"kind" : "alias",
"type" : "GenericReplaceAll!(T,U,TList).result",
"line" : 385}
]
}
,
{
"name" : "ReplaceAll(alias T,U,TList...)",
"kind" : "template",
"line" : 389,
"members" : [
{
"name" : "ReplaceAll",
"kind" : "alias",
"type" : "GenericReplaceAll!(T,U,TList).result",
"line" : 391}
]
}
,
{
"name" : "ReplaceAll(T,alias U,TList...)",
"kind" : "template",
"line" : 395,
"members" : [
{
"name" : "ReplaceAll",
"kind" : "alias",
"type" : "GenericReplaceAll!(T,U,TList).result",
"line" : 397}
]
}
,
{
"name" : "ReplaceAll(alias T,alias U,TList...)",
"kind" : "template",
"line" : 401,
"members" : [
{
"name" : "ReplaceAll",
"kind" : "alias",
"type" : "GenericReplaceAll!(T,U,TList).result",
"line" : 403}
]
}
,
{
"name" : "GenericReplaceAll(args...) if (args.length >= 2)",
"kind" : "template",
"line" : 407,
"members" : [
{
"name" : "from",
"kind" : "alias",
"type" : "Alias!(args[0])",
"line" : 410}
,
{
"name" : "to",
"kind" : "alias",
"type" : "Alias!(args[1])",
"line" : 411}
,
{
"name" : "tuple",
"kind" : "alias",
"type" : "args[2 .. __dollar]",
"line" : 412}
]
}
,
{
"name" : "Reverse(TList...)",
"kind" : "template",
"line" : 461,
"members" : [
]
}
,
{
"name" : "MostDerived(T,TList...)",
"kind" : "template",
"line" : 482,
"members" : [
]
}
,
{
"name" : "DerivedToFront(TList...)",
"kind" : "template",
"line" : 507,
"members" : [
]
}
,
{
"name" : "staticMap(alias F,T...)",
"kind" : "template",
"line" : 528,
"members" : [
]
}
,
{
"name" : "allSatisfy(alias F,T...)",
"kind" : "template",
"line" : 564,
"members" : [
]
}
,
{
"name" : "anySatisfy(alias F,T...)",
"kind" : "template",
"line" : 595,
"members" : [
]
}
,
{
"name" : "Alias(alias a)",
"kind" : "template",
"line" : 628,
"members" : [
]
}
,
{
"name" : "Alias(a...)",
"kind" : "template",
"line" : 638,
"members" : [
{
"name" : "Alias",
"kind" : "alias",
"type" : "a",
"line" : 640}
]
}
,
{
"name" : "isSame(ab...) if (ab.length == 2)",
"kind" : "template",
"line" : 664,
"members" : [
]
}
,
{
"name" : "expectType(T)",
"kind" : "template",
"line" : 687,
"members" : [
]
}
,
{
"name" : "Pack(T...)",
"kind" : "template",
"line" : 733,
"members" : [
{
"name" : "tuple",
"kind" : "alias",
"type" : "T",
"line" : 735}
,
{
"name" : "equals(U...)",
"kind" : "template",
"line" : 738,
"members" : [
]
}
]
}
]
}
,
{
"name" : "std.uni",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/uni.d",
"members" : [
{
"name" : "lineSep",
"kind" : "variable",
"type" : "dchar",
"line" : 29}
,
{
"name" : "paraSep",
"kind" : "variable",
"type" : "dchar",
"line" : 30}
,
{
"name" : "isWhite",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 35}
,
{
"name" : "isUniLower",
"kind" : "alias",
"line" : 51}
,
{
"name" : "isLower",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 56}
,
{
"name" : "isUniUpper",
"kind" : "alias",
"line" : 71}
,
{
"name" : "isUpper",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 76}
,
{
"name" : "toUniLower",
"kind" : "alias",
"line" : 92}
,
{
"name" : "toLower",
"kind" : "function",
"type" : "pure nothrow @safe dchar(dchar c)",
"line" : 98}
,
{
"name" : "toUniUpper",
"kind" : "alias",
"line" : 161}
,
{
"name" : "toUpper",
"kind" : "function",
"type" : "pure nothrow @safe dchar(dchar c)",
"line" : 167}
,
{
"name" : "isUniAlpha",
"kind" : "alias",
"line" : 232}
,
{
"name" : "isAlpha",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 240}
]
}
,
{
"name" : "std.uri",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/uri.d",
"members" : [
{
"name" : "URIerror",
"kind" : "class",
"line" : 39,
"base" : "Error",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "URIerror()",
"line" : 41}
]
}
,
{
"name" : "URI_Alpha",
"kind" : "enum member",
"line" : 49}
,
{
"name" : "URI_Reserved",
"kind" : "enum member",
"line" : 50}
,
{
"name" : "URI_Mark",
"kind" : "enum member",
"line" : 51}
,
{
"name" : "URI_Digit",
"kind" : "enum member",
"line" : 52}
,
{
"name" : "URI_Hash",
"kind" : "enum member",
"line" : 53}
,
{
"name" : "hex2ascii",
"kind" : "variable",
"type" : "immutable(char[16LU])",
"line" : 56}
,
{
"name" : "uri_flags",
"kind" : "variable",
"type" : "ubyte[128LU]",
"line" : 58}
,
{
"name" : "URI_Encode",
"kind" : "function",
"type" : "string(immutable(dchar)[] string, uint unescapedSet)",
"line" : 83}
,
{
"name" : "ascii2hex",
"kind" : "function",
"type" : "uint(dchar c)",
"line" : 215}
,
{
"name" : "URI_Decode",
"kind" : "function",
"type" : "immutable(dchar)[](string string, uint reservedSet)",
"line" : 222}
,
{
"name" : "decode",
"kind" : "function",
"type" : "string(string encodedURI)",
"line" : 337}
,
{
"name" : "decodeComponent",
"kind" : "function",
"type" : "string(string encodedURIComponent)",
"line" : 348}
,
{
"name" : "encode",
"kind" : "function",
"type" : "string(string uri)",
"line" : 359}
,
{
"name" : "encodeComponent",
"kind" : "function",
"type" : "string(string uriComponent)",
"line" : 370}
,
{
"name" : "uriLength",
"kind" : "function",
"type" : "ulong(string s)",
"line" : 383}
,
{
"name" : "emailLength",
"kind" : "function",
"type" : "ulong(string s)",
"line" : 442}
]
}
,
{
"name" : "std.utf",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/utf.d",
"members" : [
{
"name" : "UtfException",
"kind" : "class",
"line" : 51,
"base" : "Exception",
"members" : [
{
"name" : "sequence",
"kind" : "variable",
"type" : "uint[4LU]",
"line" : 54}
,
{
"name" : "len",
"kind" : "variable",
"type" : "ulong",
"line" : 55}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "UtfException(string s, dchar[] data...)",
"line" : 57}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 64}
]
}
,
{
"name" : "isValidDchar",
"kind" : "function",
"type" : "pure nothrow @safe bool(dchar c)",
"line" : 96}
,
{
"name" : "UTF8stride",
"kind" : "variable",
"type" : "immutable(ubyte[256LU])",
"line" : 129}
,
{
"name" : "stride",
"kind" : "function",
"type" : "pure @safe uint(in const(char[]) s, ulong i)",
"line" : 157}
,
{
"name" : "strideBack",
"kind" : "function",
"type" : "pure @safe uint(in const(char[]) s, ulong i)",
"line" : 198}
,
{
"name" : "stride",
"kind" : "function",
"type" : "pure nothrow @safe uint(in const(wchar[]) s, ulong i)",
"line" : 241}
,
{
"name" : "strideBack",
"kind" : "function",
"type" : "pure @safe uint(in const(wchar[]) s, ulong i)",
"line" : 276}
,
{
"name" : "stride",
"kind" : "function",
"type" : "pure nothrow @safe uint(in const(dchar[]) s, ulong i)",
"line" : 316}
,
{
"name" : "strideBack",
"kind" : "function",
"type" : "pure nothrow @safe uint(in const(dchar[]) s, ulong i)",
"line" : 351}
,
{
"name" : "toUCSindex",
"kind" : "function",
"type" : "pure @safe ulong(in const(char[]) s, ulong i)",
"line" : 392}
,
{
"name" : "toUCSindex",
"kind" : "function",
"type" : "pure @safe ulong(in const(wchar[]) s, ulong i)",
"line" : 411}
,
{
"name" : "toUCSindex",
"kind" : "function",
"type" : "pure nothrow @safe ulong(in const(dchar[]) s, ulong i)",
"line" : 430}
,
{
"name" : "toUTFindex",
"kind" : "function",
"type" : "pure @safe ulong(in const(char[]) s, ulong n)",
"line" : 440}
,
{
"name" : "toUTFindex",
"kind" : "function",
"type" : "pure nothrow @safe ulong(in const(wchar[]) s, ulong n)",
"line" : 456}
,
{
"name" : "toUTFindex",
"kind" : "function",
"type" : "pure nothrow @safe ulong(in const(dchar[]) s, ulong n)",
"line" : 471}
,
{
"name" : "decode",
"kind" : "function",
"type" : "@trusted dchar(in const(char[]) s, ref ulong idx)",
"line" : 489}
,
{
"name" : "decode",
"kind" : "function",
"type" : "@trusted dchar(in const(wchar[]) s, ref ulong idx)",
"line" : 648}
,
{
"name" : "decode",
"kind" : "function",
"type" : "@trusted dchar(in const(dchar[]) s, ref ulong idx)",
"line" : 714}
,
{
"name" : "encode",
"kind" : "function",
"type" : "pure @safe ulong(ref char[4LU] buf, dchar c)",
"line" : 743}
,
{
"name" : "encode",
"kind" : "function",
"type" : "pure @safe ulong(ref wchar[2LU] buf, dchar c)",
"line" : 808}
,
{
"name" : "encode",
"kind" : "function",
"type" : "pure @safe void(ref char[] s, dchar c)",
"line" : 854}
,
{
"name" : "encode",
"kind" : "function",
"type" : "pure @safe void(ref wchar[] s, dchar c)",
"line" : 948}
,
{
"name" : "encode",
"kind" : "function",
"type" : "pure @safe void(ref dchar[] s, dchar c)",
"line" : 998}
,
{
"name" : "codeLength(C)",
"kind" : "template",
"line" : 1044,
"members" : [
{
"name" : "codeLength",
"kind" : "function",
"type" : "ubyte(dchar c)",
"line" : 1044}
]
}
,
{
"name" : "validate(S) if (isSomeString!(S))",
"kind" : "template",
"line" : 1087,
"members" : [
{
"name" : "validate",
"kind" : "function",
"type" : "void(in S s)",
"line" : 1087}
]
}
,
{
"name" : "toUTF8",
"kind" : "function",
"type" : "@trusted char[](out char[4LU] buf, dchar c)",
"line" : 1102}
,
{
"name" : "toUTF8",
"kind" : "function",
"type" : "@trusted string(in const(char[]) s)",
"line" : 1143}
,
{
"name" : "toUTF8",
"kind" : "function",
"type" : "@trusted string(in const(wchar[]) s)",
"line" : 1150}
,
{
"name" : "toUTF8",
"kind" : "function",
"type" : "pure @trusted string(in const(dchar[]) s)",
"line" : 1176}
,
{
"name" : "toUTF16",
"kind" : "function",
"type" : "pure @trusted wchar[](ref wchar[2LU] buf, dchar c)",
"line" : 1206}
,
{
"name" : "toUTF16",
"kind" : "function",
"type" : "@trusted immutable(wchar)[](in const(char[]) s)",
"line" : 1231}
,
{
"name" : "toUTF16z",
"kind" : "function",
"type" : "@trusted const(wchar)*(in const(char[]) s)",
"line" : 1257}
,
{
"name" : "toUTF16",
"kind" : "function",
"type" : "@trusted immutable(wchar)[](in const(wchar[]) s)",
"line" : 1284}
,
{
"name" : "toUTF16",
"kind" : "function",
"type" : "pure @trusted immutable(wchar)[](in const(dchar[]) s)",
"line" : 1291}
,
{
"name" : "toUTF32",
"kind" : "function",
"type" : "@trusted immutable(dchar)[](in const(char[]) s)",
"line" : 1312}
,
{
"name" : "toUTF32",
"kind" : "function",
"type" : "@trusted immutable(dchar)[](in const(wchar[]) s)",
"line" : 1333}
,
{
"name" : "toUTF32",
"kind" : "function",
"type" : "@trusted immutable(dchar)[](in const(dchar[]) s)",
"line" : 1354}
,
{
"name" : "count(E) if (isSomeChar!(E))",
"kind" : "template",
"line" : 1439,
"members" : [
{
"name" : "count",
"kind" : "function",
"type" : "size_t(const(E)[] s)",
"line" : 1439}
]
}
]
}
,
{
"name" : "std.variant",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/variant.d",
"members" : [
{
"name" : "maxSize(T...)",
"kind" : "template",
"line" : 74,
"members" : [
]
}
,
{
"name" : "This",
"kind" : "struct",
"line" : 87}
,
{
"name" : "AssociativeArray(T)",
"kind" : "template",
"line" : 89,
"members" : [
{
"name" : "valid",
"kind" : "variable",
"type" : "bool",
"line" : 91}
,
{
"name" : "Key",
"kind" : "alias",
"type" : "void",
"line" : 92}
,
{
"name" : "Value",
"kind" : "alias",
"type" : "void",
"line" : 93}
]
}
,
{
"name" : "AssociativeArray(T : V[K],K,V)",
"kind" : "template",
"line" : 96,
"members" : [
{
"name" : "valid",
"kind" : "variable",
"type" : "bool",
"line" : 98}
,
{
"name" : "Key",
"kind" : "alias",
"type" : "K",
"line" : 99}
,
{
"name" : "Value",
"kind" : "alias",
"type" : "V",
"line" : 100}
]
}
,
{
"name" : "This2Variant(V,T...)",
"kind" : "template",
"line" : 103,
"members" : [
]
}
,
{
"name" : "VariantN(ulong maxDataSize,AllowedTypesX...)",
"kind" : "struct",
"line" : 153,
"members" : [
{
"name" : "VariantN",
"kind" : "struct",
"line" : 153,
"members" : [
{
"name" : "AllowedTypes",
"kind" : "alias",
"type" : "This2Variant!(VariantN,AllowedTypesX)",
"line" : 154}
,
{
"name" : "SizeChecker",
"kind" : "struct",
"line" : 159,
"members" : [
{
"name" : "fptr",
"kind" : "variable",
"type" : "int function()",
"line" : 160}
,
{
"name" : "data",
"kind" : "variable",
"type" : "ubyte[maxDataSize]",
"line" : 161}
]
}
,
{
"name" : "size",
"kind" : "variable",
"line" : 163}
,
{
"name" : "allowed(T)",
"kind" : "template",
"line" : 172,
"members" : [
{
"name" : "allowed",
"kind" : "variable",
"type" : "bool",
"line" : 174}
]
}
,
{
"name" : "OpID",
"kind" : "enum",
"line" : 183,
"members" : [
{
"name" : "getTypeInfo",
"kind" : "enum member",
"line" : 183}
,
{
"name" : "get",
"kind" : "enum member",
"line" : 183}
,
{
"name" : "compare",
"kind" : "enum member",
"line" : 183}
,
{
"name" : "testConversion",
"kind" : "enum member",
"line" : 183}
,
{
"name" : "toString",
"kind" : "enum member",
"line" : 183}
,
{
"name" : "index",
"kind" : "enum member",
"line" : 184}
,
{
"name" : "indexAssign",
"kind" : "enum member",
"line" : 184}
,
{
"name" : "catAssign",
"kind" : "enum member",
"line" : 184}
,
{
"name" : "copyOut",
"kind" : "enum member",
"line" : 184}
,
{
"name" : "length",
"kind" : "enum member",
"line" : 184}
,
{
"name" : "apply",
"kind" : "enum member",
"line" : 185}
]
}
,
{
"name" : "fptr",
"kind" : "variable",
"type" : "sizediff_t function(OpID selector, ubyte[size]* store, void* data)",
"line" : 188}
,
{
"name" : "store",
"kind" : "variable",
"type" : "ubyte[size]",
"line" : 192}
,
{
"name" : "handler(A : void)",
"kind" : "template",
"line" : 200,
"members" : [
{
"name" : "handler",
"kind" : "function",
"type" : "sizediff_t(OpID selector, ubyte[size]*, void* parm)",
"line" : 200}
]
}
,
{
"name" : "handler(A)",
"kind" : "template",
"line" : 235,
"members" : [
{
"name" : "handler",
"kind" : "function",
"type" : "sizediff_t(OpID selector, ubyte[size]* pStore, void* parm)",
"line" : 235}
]
}
,
{
"name" : "__ctor(T)",
"kind" : "template",
"line" : 489,
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "(T value)",
"line" : 489}
]
}
,
{
"name" : "opAssign(T)",
"kind" : "template",
"line" : 499,
"members" : [
{
"name" : "opAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 499}
]
}
,
{
"name" : "hasValue",
"kind" : "function",
"type" : "const bool()",
"line" : 563}
,
{
"name" : "peek(T)",
"kind" : "template",
"line" : 585,
"members" : [
{
"name" : "peek",
"kind" : "function",
"type" : "T*()",
"line" : 585}
]
}
,
{
"name" : "type",
"kind" : "function",
"type" : "const TypeInfo()",
"line" : 597}
,
{
"name" : "convertsTo(T)",
"kind" : "template",
"line" : 611,
"members" : [
{
"name" : "convertsTo",
"kind" : "function",
"type" : "bool()",
"line" : 611}
]
}
,
{
"name" : "get(T) if (!is(T == const))",
"kind" : "template",
"line" : 651,
"members" : [
{
"name" : "get",
"kind" : "function",
"type" : "T()",
"line" : 651}
]
}
,
{
"name" : "get(T) if (is(T == const))",
"kind" : "template",
"line" : 667,
"members" : [
{
"name" : "get",
"kind" : "function",
"type" : "const T()",
"line" : 667}
]
}
,
{
"name" : "coerce(T)",
"kind" : "template",
"line" : 693,
"members" : [
{
"name" : "coerce",
"kind" : "function",
"type" : "T()",
"line" : 693}
]
}
,
{
"name" : "toString",
"kind" : "function",
"type" : "string()",
"line" : 732}
,
{
"name" : "opEquals(T)",
"kind" : "template",
"line" : 744,
"members" : [
{
"name" : "opEquals",
"kind" : "function",
"type" : "bool(T rhs)",
"line" : 744}
]
}
,
{
"name" : "opCmp(T)",
"kind" : "template",
"line" : 759,
"members" : [
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(T rhs)",
"line" : 759}
]
}
,
{
"name" : "toHash",
"kind" : "function",
"type" : "size_t()",
"line" : 779}
,
{
"name" : "opArithmetic(T,string op)",
"kind" : "template",
"line" : 784,
"members" : [
{
"name" : "opArithmetic",
"kind" : "function",
"type" : "VariantN(T other)",
"line" : 784}
]
}
,
{
"name" : "opLogic(T,string op)",
"kind" : "template",
"line" : 821,
"members" : [
{
"name" : "opLogic",
"kind" : "function",
"type" : "VariantN(T other)",
"line" : 821}
]
}
,
{
"name" : "opAdd(T)",
"kind" : "template",
"line" : 860,
"members" : [
{
"name" : "opAdd",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 860}
]
}
,
{
"name" : "opSub(T)",
"kind" : "template",
"line" : 862,
"members" : [
{
"name" : "opSub",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 862}
]
}
,
{
"name" : "opMul(T)",
"kind" : "template",
"line" : 873,
"members" : [
{
"name" : "opMul",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 873}
]
}
,
{
"name" : "opDiv(T)",
"kind" : "template",
"line" : 875,
"members" : [
{
"name" : "opDiv",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 875}
]
}
,
{
"name" : "opMod(T)",
"kind" : "template",
"line" : 882,
"members" : [
{
"name" : "opMod",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 882}
]
}
,
{
"name" : "opAnd(T)",
"kind" : "template",
"line" : 889,
"members" : [
{
"name" : "opAnd",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 889}
]
}
,
{
"name" : "opOr(T)",
"kind" : "template",
"line" : 891,
"members" : [
{
"name" : "opOr",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 891}
]
}
,
{
"name" : "opXor(T)",
"kind" : "template",
"line" : 893,
"members" : [
{
"name" : "opXor",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 893}
]
}
,
{
"name" : "opShl(T)",
"kind" : "template",
"line" : 895,
"members" : [
{
"name" : "opShl",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 895}
]
}
,
{
"name" : "opShr(T)",
"kind" : "template",
"line" : 902,
"members" : [
{
"name" : "opShr",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 902}
]
}
,
{
"name" : "opUShr(T)",
"kind" : "template",
"line" : 909,
"members" : [
{
"name" : "opUShr",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 909}
]
}
,
{
"name" : "opCat(T)",
"kind" : "template",
"line" : 916,
"members" : [
{
"name" : "opCat",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 916}
]
}
,
{
"name" : "opAddAssign(T)",
"kind" : "template",
"line" : 931,
"members" : [
{
"name" : "opAddAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 931}
]
}
,
{
"name" : "opSubAssign(T)",
"kind" : "template",
"line" : 933,
"members" : [
{
"name" : "opSubAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 933}
]
}
,
{
"name" : "opMulAssign(T)",
"kind" : "template",
"line" : 935,
"members" : [
{
"name" : "opMulAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 935}
]
}
,
{
"name" : "opDivAssign(T)",
"kind" : "template",
"line" : 937,
"members" : [
{
"name" : "opDivAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 937}
]
}
,
{
"name" : "opModAssign(T)",
"kind" : "template",
"line" : 939,
"members" : [
{
"name" : "opModAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 939}
]
}
,
{
"name" : "opAndAssign(T)",
"kind" : "template",
"line" : 941,
"members" : [
{
"name" : "opAndAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 941}
]
}
,
{
"name" : "opOrAssign(T)",
"kind" : "template",
"line" : 943,
"members" : [
{
"name" : "opOrAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 943}
]
}
,
{
"name" : "opXorAssign(T)",
"kind" : "template",
"line" : 945,
"members" : [
{
"name" : "opXorAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 945}
]
}
,
{
"name" : "opShlAssign(T)",
"kind" : "template",
"line" : 947,
"members" : [
{
"name" : "opShlAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 947}
]
}
,
{
"name" : "opShrAssign(T)",
"kind" : "template",
"line" : 949,
"members" : [
{
"name" : "opShrAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 949}
]
}
,
{
"name" : "opUShrAssign(T)",
"kind" : "template",
"line" : 951,
"members" : [
{
"name" : "opUShrAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 951}
]
}
,
{
"name" : "opCatAssign(T)",
"kind" : "template",
"line" : 953,
"members" : [
{
"name" : "opCatAssign",
"kind" : "function",
"type" : "VariantN(T rhs)",
"line" : 953}
]
}
,
{
"name" : "opIndex(K)",
"kind" : "template",
"line" : 987,
"members" : [
{
"name" : "opIndex",
"kind" : "function",
"type" : "VariantN(K i)",
"line" : 987}
]
}
,
{
"name" : "opIndexAssign(T,N)",
"kind" : "template",
"line" : 1004,
"members" : [
{
"name" : "opIndexAssign",
"kind" : "function",
"type" : "VariantN(T value, N i)",
"line" : 1004}
]
}
,
{
"name" : "length",
"kind" : "function",
"type" : "size_t()",
"line" : 1015}
,
{
"name" : "opApply(Delegate) if (is(Delegate == delegate))",
"kind" : "template",
"line" : 1024,
"members" : [
{
"name" : "opApply",
"kind" : "function",
"type" : "int(scope Delegate dg)",
"line" : 1024}
]
}
]
}
]
}
,
{
"name" : "Algebraic(T...)",
"kind" : "template",
"line" : 1086,
"members" : [
{
"name" : "Algebraic",
"kind" : "alias",
"type" : "VariantN!(maxSize!(T),T)",
"line" : 1088}
]
}
,
{
"name" : "Variant",
"kind" : "alias",
"line" : 1101}
,
{
"name" : "variantArray(T...)",
"kind" : "template",
"line" : 1136,
"members" : [
{
"name" : "variantArray",
"kind" : "function",
"type" : "Variant[](T args)",
"line" : 1136}
]
}
,
{
"name" : "VariantException",
"kind" : "class",
"line" : 1158,
"base" : "Exception",
"members" : [
{
"name" : "source",
"kind" : "variable",
"type" : "object.TypeInfo",
"line" : 1161}
,
{
"name" : "target",
"kind" : "variable",
"type" : "object.TypeInfo",
"line" : 1163}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "VariantException(string s)",
"line" : 1164}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "VariantException(TypeInfo source, TypeInfo target)",
"line" : 1168}
]
}
]
}
,
{
"name" : "std.xml",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/xml.d",
"members" : [
{
"name" : "cdata",
"kind" : "variable",
"type" : "string",
"line" : 131}
,
{
"name" : "isChar",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 141}
,
{
"name" : "isSpace",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 208}
,
{
"name" : "isDigit",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 221}
,
{
"name" : "isLetter",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 246}
,
{
"name" : "isIdeographic",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 260}
,
{
"name" : "isBaseChar",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 295}
,
{
"name" : "isCombiningChar",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 309}
,
{
"name" : "isExtender",
"kind" : "function",
"type" : "bool(dchar c)",
"line" : 322}
,
{
"name" : "encode(S)",
"kind" : "template",
"line" : 351,
"members" : [
{
"name" : "encode",
"kind" : "function",
"type" : "S(S s)",
"line" : 351}
]
}
,
{
"name" : "DecodeMode",
"kind" : "enum",
"line" : 397,
"base" : "int",
"members" : [
{
"name" : "NONE",
"kind" : "enum member",
"line" : 398}
,
{
"name" : "LOOSE",
"kind" : "enum member",
"line" : 398}
,
{
"name" : "STRICT",
"kind" : "enum member",
"line" : 398}
]
}
,
{
"name" : "decode",
"kind" : "function",
"type" : "string(string s, DecodeMode mode = cast(DecodeMode)1)",
"line" : 435}
,
{
"name" : "Document",
"kind" : "class",
"line" : 528,
"base" : "Element",
"members" : [
{
"name" : "prolog",
"kind" : "variable",
"type" : "string",
"line" : 534}
,
{
"name" : "epilog",
"kind" : "variable",
"type" : "string",
"line" : 539}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Document(string s)",
"line" : 552}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Document(const(Tag) tag)",
"line" : 574}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(Object o)",
"line" : 590}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "const int(Object o)",
"line" : 612}
,
{
"name" : "toHash",
"kind" : "function",
"type" : "const ulong()",
"line" : 631}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 640}
]
}
,
{
"name" : "Element",
"kind" : "class",
"line" : 652,
"base" : "Item",
"members" : [
{
"name" : "tag",
"kind" : "variable",
"type" : "std.xml.Tag",
"line" : 654}
,
{
"name" : "items",
"kind" : "variable",
"type" : "Item[]",
"line" : 655}
,
{
"name" : "texts",
"kind" : "variable",
"type" : "Text[]",
"line" : 656}
,
{
"name" : "cdatas",
"kind" : "variable",
"type" : "CData[]",
"line" : 657}
,
{
"name" : "comments",
"kind" : "variable",
"type" : "Comment[]",
"line" : 658}
,
{
"name" : "pis",
"kind" : "variable",
"type" : "ProcessingInstruction[]",
"line" : 659}
,
{
"name" : "elements",
"kind" : "variable",
"type" : "Element[]",
"line" : 660}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Element(string name, string interior = null)",
"line" : 676}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Element(const(Tag) tag_)",
"line" : 688}
,
{
"name" : "opCatAssign",
"kind" : "function",
"type" : "void(Text item)",
"line" : 708}
,
{
"name" : "opCatAssign",
"kind" : "function",
"type" : "void(CData item)",
"line" : 726}
,
{
"name" : "opCatAssign",
"kind" : "function",
"type" : "void(Comment item)",
"line" : 744}
,
{
"name" : "opCatAssign",
"kind" : "function",
"type" : "void(ProcessingInstruction item)",
"line" : 762}
,
{
"name" : "opCatAssign",
"kind" : "function",
"type" : "void(Element item)",
"line" : 782}
,
{
"name" : "appendItem",
"kind" : "function",
"type" : "void(Item item)",
"line" : 788}
,
{
"name" : "parse",
"kind" : "function",
"type" : "void(ElementParser xml)",
"line" : 795}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "bool(Object o)",
"line" : 821}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(Object o)",
"line" : 845}
,
{
"name" : "toHash",
"kind" : "function",
"type" : "ulong()",
"line" : 864}
,
{
"name" : "text",
"kind" : "function",
"type" : "const string(DecodeMode mode = cast(DecodeMode)1)",
"line" : 885}
,
{
"name" : "pretty",
"kind" : "function",
"type" : "const string[](uint indent = cast(uint)2)",
"line" : 904}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 940}
,
{
"name" : "isEmptyXML",
"kind" : "function",
"type" : "const bool()",
"line" : 950}
]
}
,
{
"name" : "TagType",
"kind" : "enum",
"line" : 962,
"base" : "int",
"members" : [
{
"name" : "START",
"kind" : "enum member",
"line" : 962}
,
{
"name" : "END",
"kind" : "enum member",
"line" : 962}
,
{
"name" : "EMPTY",
"kind" : "enum member",
"line" : 962}
]
}
,
{
"name" : "Tag",
"kind" : "class",
"line" : 977,
"base" : "Object",
"members" : [
{
"name" : "type",
"kind" : "variable",
"type" : "TagType",
"line" : 978}
,
{
"name" : "name",
"kind" : "variable",
"type" : "string",
"line" : 979}
,
{
"name" : "attr",
"kind" : "variable",
"type" : "string[string]",
"line" : 980}
,
{
"name" : "tagString",
"kind" : "variable",
"type" : "string",
"line" : 981}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Tag(string name, TagType type = cast(TagType)0)",
"line" : 1022}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Tag(ref string s, bool dummy)",
"line" : 1038}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "const bool(Object o)",
"line" : 1088}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "const int(Object o)",
"line" : 1107}
,
{
"name" : "toHash",
"kind" : "function",
"type" : "const ulong()",
"line" : 1123}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 1139}
,
{
"name" : "toNonEndString",
"kind" : "function",
"type" : "const string()",
"line" : 1147}
,
{
"name" : "toStartString",
"kind" : "function",
"type" : "const string()",
"line" : 1155}
,
{
"name" : "toEndString",
"kind" : "function",
"type" : "const string()",
"line" : 1157}
,
{
"name" : "toEmptyString",
"kind" : "function",
"type" : "const string()",
"line" : 1159}
,
{
"name" : "isStart",
"kind" : "function",
"type" : "const bool()",
"line" : 1170}
,
{
"name" : "isEnd",
"kind" : "function",
"type" : "const bool()",
"line" : 1180}
,
{
"name" : "isEmpty",
"kind" : "function",
"type" : "const bool()",
"line" : 1190}
]
}
,
{
"name" : "Comment",
"kind" : "class",
"line" : 1197,
"base" : "Item",
"members" : [
{
"name" : "content",
"kind" : "variable",
"type" : "string",
"line" : 1199}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Comment(string content)",
"line" : 1216}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "bool(Object o)",
"line" : 1232}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(Object o)",
"line" : 1251}
,
{
"name" : "toHash",
"kind" : "function",
"type" : "ulong()",
"line" : 1265}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 1270}
,
{
"name" : "isEmptyXML",
"kind" : "function",
"type" : "const bool()",
"line" : 1272}
]
}
,
{
"name" : "CData",
"kind" : "class",
"line" : 1278,
"base" : "Item",
"members" : [
{
"name" : "content",
"kind" : "variable",
"type" : "string",
"line" : 1280}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "CData(string content)",
"line" : 1296}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "bool(Object o)",
"line" : 1311}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(Object o)",
"line" : 1330}
,
{
"name" : "toHash",
"kind" : "function",
"type" : "ulong()",
"line" : 1344}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 1349}
,
{
"name" : "isEmptyXML",
"kind" : "function",
"type" : "const bool()",
"line" : 1351}
]
}
,
{
"name" : "Text",
"kind" : "class",
"line" : 1357,
"base" : "Item",
"members" : [
{
"name" : "content",
"kind" : "variable",
"type" : "string",
"line" : 1359}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Text(string content)",
"line" : 1374}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "bool(Object o)",
"line" : 1388}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(Object o)",
"line" : 1407}
,
{
"name" : "toHash",
"kind" : "function",
"type" : "ulong()",
"line" : 1421}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 1426}
,
{
"name" : "isEmptyXML",
"kind" : "function",
"type" : "const bool()",
"line" : 1431}
]
}
,
{
"name" : "XMLInstruction",
"kind" : "class",
"line" : 1437,
"base" : "Item",
"members" : [
{
"name" : "content",
"kind" : "variable",
"type" : "string",
"line" : 1439}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "XMLInstruction(string content)",
"line" : 1455}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "bool(Object o)",
"line" : 1470}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(Object o)",
"line" : 1489}
,
{
"name" : "toHash",
"kind" : "function",
"type" : "ulong()",
"line" : 1503}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 1508}
,
{
"name" : "isEmptyXML",
"kind" : "function",
"type" : "const bool()",
"line" : 1510}
]
}
,
{
"name" : "ProcessingInstruction",
"kind" : "class",
"line" : 1516,
"base" : "Item",
"members" : [
{
"name" : "content",
"kind" : "variable",
"type" : "string",
"line" : 1518}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ProcessingInstruction(string content)",
"line" : 1534}
,
{
"name" : "opEquals",
"kind" : "function",
"type" : "bool(Object o)",
"line" : 1549}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(Object o)",
"line" : 1568}
,
{
"name" : "toHash",
"kind" : "function",
"type" : "ulong()",
"line" : 1582}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 1587}
,
{
"name" : "isEmptyXML",
"kind" : "function",
"type" : "const bool()",
"line" : 1589}
]
}
,
{
"name" : "Item",
"kind" : "class",
"line" : 1596,
"base" : "Object",
"members" : [
{
"name" : "opEquals",
"kind" : "function",
"type" : "bool(Object o)",
"line" : 1598}
,
{
"name" : "opCmp",
"kind" : "function",
"type" : "int(Object o)",
"line" : 1601}
,
{
"name" : "toHash",
"kind" : "function",
"type" : "ulong()",
"line" : 1604}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 1607}
,
{
"name" : "pretty",
"kind" : "function",
"type" : "const string[](uint indent)",
"line" : 1615}
,
{
"name" : "isEmptyXML",
"kind" : "function",
"type" : "const bool()",
"line" : 1622}
]
}
,
{
"name" : "DocumentParser",
"kind" : "class",
"line" : 1639,
"base" : "ElementParser",
"members" : [
{
"name" : "xmlText",
"kind" : "variable",
"type" : "string",
"line" : 1641}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "DocumentParser(string xmlText_)",
"line" : 1653}
]
}
,
{
"name" : "ElementParser",
"kind" : "class",
"line" : 1689,
"base" : "Object",
"members" : [
{
"name" : "Handler",
"kind" : "alias",
"type" : "void delegate(string)",
"line" : 1690}
,
{
"name" : "ElementHandler",
"kind" : "alias",
"type" : "void delegate(in const(Element) element)",
"line" : 1691}
,
{
"name" : "ParserHandler",
"kind" : "alias",
"type" : "void delegate(ElementParser parser)",
"line" : 1692}
,
{
"name" : "tag_",
"kind" : "variable",
"type" : "std.xml.Tag",
"line" : 1696}
,
{
"name" : "elementStart",
"kind" : "variable",
"type" : "string",
"line" : 1697}
,
{
"name" : "s",
"kind" : "variable",
"type" : "string*",
"line" : 1698}
,
{
"name" : "commentHandler",
"kind" : "variable",
"type" : "void delegate(string)",
"line" : 1700}
,
{
"name" : "cdataHandler",
"kind" : "variable",
"type" : "void delegate(string)",
"line" : 1701}
,
{
"name" : "xiHandler",
"kind" : "variable",
"type" : "void delegate(string)",
"line" : 1702}
,
{
"name" : "piHandler",
"kind" : "variable",
"type" : "void delegate(string)",
"line" : 1703}
,
{
"name" : "rawTextHandler",
"kind" : "variable",
"type" : "void delegate(string)",
"line" : 1704}
,
{
"name" : "textHandler",
"kind" : "variable",
"type" : "void delegate(string)",
"line" : 1705}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ElementParser(ElementParser parent)",
"line" : 1708}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ElementParser(Tag tag, string* t)",
"line" : 1716}
,
{
"name" : "tag",
"kind" : "function",
"type" : "const const(Tag)()",
"line" : 1728}
,
{
"name" : "onStartTag",
"kind" : "variable",
"type" : "void delegate(ElementParser parser)[string]",
"line" : 1764}
,
{
"name" : "onEndTag",
"kind" : "variable",
"type" : "void delegate(in const(Element) element)[string]",
"line" : 1795}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ElementParser()",
"line" : 1797}
,
{
"name" : "onText",
"kind" : "function",
"type" : "void(void delegate(string) handler)",
"line" : 1820}
,
{
"name" : "onTextRaw",
"kind" : "function",
"type" : "void(void delegate(string) handler)",
"line" : 1846}
,
{
"name" : "onCData",
"kind" : "function",
"type" : "void(void delegate(string) handler)",
"line" : 1867}
,
{
"name" : "onComment",
"kind" : "function",
"type" : "void(void delegate(string) handler)",
"line" : 1888}
,
{
"name" : "onPI",
"kind" : "function",
"type" : "void(void delegate(string) handler)",
"line" : 1909}
,
{
"name" : "onXI",
"kind" : "function",
"type" : "void(void delegate(string) handler)",
"line" : 1932}
,
{
"name" : "parse",
"kind" : "function",
"type" : "void()",
"line" : 1943}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 2069}
]
}
,
{
"name" : "Check(string msg)",
"kind" : "template",
"line" : 2079,
"members" : [
{
"name" : "old",
"kind" : "variable",
"type" : "string",
"line" : 2081}
,
{
"name" : "fail",
"kind" : "function",
"type" : "void()",
"line" : 2083}
,
{
"name" : "fail",
"kind" : "function",
"type" : "void(Err e)",
"line" : 2089}
,
{
"name" : "fail",
"kind" : "function",
"type" : "void(string msg2)",
"line" : 2095}
]
}
,
{
"name" : "checkMisc",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2101}
,
{
"name" : "checkDocument",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2114}
,
{
"name" : "checkChars",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2126}
,
{
"name" : "checkSpace",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2151}
,
{
"name" : "checkName",
"kind" : "function",
"type" : "void(ref string s, out string name)",
"line" : 2158}
,
{
"name" : "checkAttValue",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2177}
,
{
"name" : "checkCharData",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2197}
,
{
"name" : "checkComment",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2210}
,
{
"name" : "checkPI",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2221}
,
{
"name" : "checkCDSect",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2233}
,
{
"name" : "checkProlog",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2245}
,
{
"name" : "checkXMLDecl",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2262}
,
{
"name" : "checkVersionInfo",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2278}
,
{
"name" : "checkEq",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2292}
,
{
"name" : "checkVersionNum",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2305}
,
{
"name" : "checkDocTypeDecl",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2313}
,
{
"name" : "checkSDDecl",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2329}
,
{
"name" : "checkElement",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2349}
,
{
"name" : "checkTag",
"kind" : "function",
"type" : "void(ref string s, out string type, out string name)",
"line" : 2376}
,
{
"name" : "checkAttribute",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2397}
,
{
"name" : "checkETag",
"kind" : "function",
"type" : "void(ref string s, out string name)",
"line" : 2411}
,
{
"name" : "checkContent",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2425}
,
{
"name" : "checkCharRef",
"kind" : "function",
"type" : "void(ref string s, out dchar c)",
"line" : 2446}
,
{
"name" : "checkReference",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2495}
,
{
"name" : "checkEntityRef",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2508}
,
{
"name" : "checkEncName",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2522}
,
{
"name" : "checkEncodingDecl",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2531}
,
{
"name" : "checkLiteral",
"kind" : "function",
"type" : "void(string literal, ref string s)",
"line" : 2547}
,
{
"name" : "checkEnd",
"kind" : "function",
"type" : "void(string end, ref string s)",
"line" : 2555}
,
{
"name" : "opt(alias f)",
"kind" : "template",
"line" : 2567,
"members" : [
{
"name" : "opt",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2567}
]
}
,
{
"name" : "plus(alias f)",
"kind" : "template",
"line" : 2572,
"members" : [
{
"name" : "plus",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2572}
]
}
,
{
"name" : "star(alias f)",
"kind" : "template",
"line" : 2578,
"members" : [
{
"name" : "star",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2578}
]
}
,
{
"name" : "quoted(alias f)",
"kind" : "template",
"line" : 2587,
"members" : [
{
"name" : "quoted",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2587}
]
}
,
{
"name" : "seq(alias f,alias g)",
"kind" : "template",
"line" : 2603,
"members" : [
{
"name" : "seq",
"kind" : "function",
"type" : "void(ref string s)",
"line" : 2603}
]
}
,
{
"name" : "check",
"kind" : "function",
"type" : "void(string s)",
"line" : 2622}
,
{
"name" : "XMLException",
"kind" : "class",
"line" : 2727,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "XMLException(string msg)",
"line" : 2727}
]
}
,
{
"name" : "CommentException",
"kind" : "class",
"line" : 2732,
"base" : "XMLException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "CommentException(string msg)",
"line" : 2733}
]
}
,
{
"name" : "CDataException",
"kind" : "class",
"line" : 2736,
"base" : "XMLException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "CDataException(string msg)",
"line" : 2737}
]
}
,
{
"name" : "XIException",
"kind" : "class",
"line" : 2740,
"base" : "XMLException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "XIException(string msg)",
"line" : 2741}
]
}
,
{
"name" : "PIException",
"kind" : "class",
"line" : 2744,
"base" : "XMLException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "PIException(string msg)",
"line" : 2745}
]
}
,
{
"name" : "TextException",
"kind" : "class",
"line" : 2748,
"base" : "XMLException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "TextException(string msg)",
"line" : 2749}
]
}
,
{
"name" : "DecodeException",
"kind" : "class",
"line" : 2752,
"base" : "XMLException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "DecodeException(string msg)",
"line" : 2753}
]
}
,
{
"name" : "InvalidTypeException",
"kind" : "class",
"line" : 2756,
"base" : "XMLException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "InvalidTypeException(string msg)",
"line" : 2757}
]
}
,
{
"name" : "TagException",
"kind" : "class",
"line" : 2760,
"base" : "XMLException",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "TagException(string msg)",
"line" : 2761}
]
}
,
{
"name" : "CheckException",
"kind" : "class",
"line" : 2766,
"base" : "XMLException",
"members" : [
{
"name" : "err",
"kind" : "variable",
"type" : "std.xml.CheckException",
"line" : 2768}
,
{
"name" : "tail",
"kind" : "variable",
"type" : "string",
"line" : 2769}
,
{
"name" : "msg",
"kind" : "variable",
"type" : "string",
"line" : 2774}
,
{
"name" : "line",
"kind" : "variable",
"type" : "ulong",
"line" : 2775}
,
{
"name" : "column",
"kind" : "variable",
"type" : "ulong",
"line" : 2776}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "CheckException(string tail, string msg, CheckException err = cast(CheckException)null)",
"line" : 2778}
,
{
"name" : "complete",
"kind" : "function",
"type" : "void(string entire)",
"line" : 2786}
,
{
"name" : "toString",
"kind" : "function",
"type" : "const string()",
"line" : 2797}
]
}
,
{
"name" : "Err",
"kind" : "alias",
"line" : 2808}
,
{
"name" : "toType(T)",
"kind" : "template",
"line" : 2814,
"members" : [
{
"name" : "toType",
"kind" : "function",
"type" : "T(Object o)",
"line" : 2814}
]
}
,
{
"name" : "chop",
"kind" : "function",
"type" : "string(ref string s, ulong n)",
"line" : 2825}
,
{
"name" : "optc",
"kind" : "function",
"type" : "bool(ref string s, char c)",
"line" : 2833}
,
{
"name" : "reqc",
"kind" : "function",
"type" : "void(ref string s, char c)",
"line" : 2840}
,
{
"name" : "hash",
"kind" : "function",
"type" : "ulong(string s, ulong h = cast(ulong)0)",
"line" : 2846}
,
{
"name" : "CharTable",
"kind" : "variable",
"type" : "immutable(int[])",
"line" : 2854}
,
{
"name" : "BaseCharTable",
"kind" : "variable",
"type" : "immutable(int[])",
"line" : 2895}
,
{
"name" : "IdeographicTable",
"kind" : "variable",
"type" : "immutable(int[])",
"line" : 2896}
,
{
"name" : "CombiningCharTable",
"kind" : "variable",
"type" : "immutable(int[])",
"line" : 2916}
,
{
"name" : "DigitTable",
"kind" : "variable",
"type" : "immutable(int[])",
"line" : 2920}
,
{
"name" : "ExtenderTable",
"kind" : "variable",
"type" : "immutable(int[])",
"line" : 2923}
,
{
"name" : "lookup",
"kind" : "function",
"type" : "bool(const(int)[] table, int c)",
"line" : 2925}
,
{
"name" : "startOf",
"kind" : "function",
"type" : "string(string s)",
"line" : 2943}
,
{
"name" : "exit",
"kind" : "function",
"type" : "void(string s = null)",
"line" : 2954}
]
}
,
{
"name" : "std.zip",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/zip.d",
"members" : [
{
"name" : "ZipException",
"kind" : "class",
"line" : 44,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ZipException(string msg)",
"line" : 46}
]
}
,
{
"name" : "ArchiveMember",
"kind" : "class",
"line" : 56,
"base" : "Object",
"members" : [
{
"name" : "madeVersion",
"kind" : "variable",
"type" : "ushort",
"line" : 57}
,
{
"name" : "extractVersion",
"kind" : "variable",
"type" : "ushort",
"line" : 58}
,
{
"name" : "flags",
"kind" : "variable",
"type" : "ushort",
"line" : 59}
,
{
"name" : "compressionMethod",
"kind" : "variable",
"type" : "ushort",
"line" : 60}
,
{
"name" : "time",
"kind" : "variable",
"type" : "DosFileTime",
"line" : 61}
,
{
"name" : "crc32",
"kind" : "variable",
"type" : "uint",
"line" : 62}
,
{
"name" : "compressedSize",
"kind" : "variable",
"type" : "uint",
"line" : 63}
,
{
"name" : "expandedSize",
"kind" : "variable",
"type" : "uint",
"line" : 64}
,
{
"name" : "diskNumber",
"kind" : "variable",
"type" : "ushort",
"line" : 65}
,
{
"name" : "internalAttributes",
"kind" : "variable",
"type" : "ushort",
"line" : 66}
,
{
"name" : "externalAttributes",
"kind" : "variable",
"type" : "uint",
"line" : 67}
,
{
"name" : "offset",
"kind" : "variable",
"type" : "uint",
"line" : 69}
,
{
"name" : "name",
"kind" : "variable",
"type" : "string",
"line" : 76}
,
{
"name" : "extra",
"kind" : "variable",
"type" : "ubyte[]",
"line" : 78}
,
{
"name" : "comment",
"kind" : "variable",
"type" : "string",
"line" : 79}
,
{
"name" : "compressedData",
"kind" : "variable",
"type" : "ubyte[]",
"line" : 80}
,
{
"name" : "expandedData",
"kind" : "variable",
"type" : "ubyte[]",
"line" : 81}
]
}
,
{
"name" : "ZipArchive",
"kind" : "class",
"line" : 108,
"base" : "Object",
"members" : [
{
"name" : "data",
"kind" : "variable",
"type" : "ubyte[]",
"line" : 109}
,
{
"name" : "endrecOffset",
"kind" : "variable",
"type" : "uint",
"line" : 110}
,
{
"name" : "diskNumber",
"kind" : "variable",
"type" : "uint",
"line" : 112}
,
{
"name" : "diskStartDir",
"kind" : "variable",
"type" : "uint",
"line" : 113}
,
{
"name" : "numEntries",
"kind" : "variable",
"type" : "uint",
"line" : 114}
,
{
"name" : "totalEntries",
"kind" : "variable",
"type" : "uint",
"line" : 115}
,
{
"name" : "comment",
"kind" : "variable",
"type" : "string",
"line" : 116}
,
{
"name" : "directory",
"kind" : "variable",
"type" : "ArchiveMember[string]",
"line" : 130}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ZipArchive()",
"line" : 148}
,
{
"name" : "addMember",
"kind" : "function",
"type" : "void(ArchiveMember de)",
"line" : 154}
,
{
"name" : "deleteMember",
"kind" : "function",
"type" : "void(ArchiveMember de)",
"line" : 161}
,
{
"name" : "build",
"kind" : "function",
"type" : "void[]()",
"line" : 176}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "ZipArchive(void[] buffer)",
"line" : 312}
,
{
"name" : "expand",
"kind" : "function",
"type" : "ubyte[](ArchiveMember de)",
"line" : 416}
,
{
"name" : "getUshort",
"kind" : "function",
"type" : "ushort(int i)",
"line" : 473}
,
{
"name" : "getUint",
"kind" : "function",
"type" : "uint(int i)",
"line" : 487}
,
{
"name" : "putUshort",
"kind" : "function",
"type" : "void(int i, ushort us)",
"line" : 499}
,
{
"name" : "putUint",
"kind" : "function",
"type" : "void(int i, uint ui)",
"line" : 512}
]
}
]
}
,
{
"name" : "std.zlib",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/std\/zlib.d",
"members" : [
{
"name" : "Z_NO_FLUSH",
"kind" : "enum member",
"line" : 32}
,
{
"name" : "Z_SYNC_FLUSH",
"kind" : "enum member",
"line" : 33}
,
{
"name" : "Z_FULL_FLUSH",
"kind" : "enum member",
"line" : 34}
,
{
"name" : "Z_FINISH",
"kind" : "enum member",
"line" : 35}
,
{
"name" : "ZlibException",
"kind" : "class",
"line" : 42,
"base" : "Exception",
"members" : [
{
"name" : "this",
"kind" : "constructor",
"type" : "ZlibException(int errnum)",
"line" : 44}
]
}
,
{
"name" : "adler32",
"kind" : "function",
"type" : "uint(uint adler, const(void)[] buf)",
"line" : 68}
,
{
"name" : "crc32",
"kind" : "function",
"type" : "uint(uint crc, const(void)[] buf)",
"line" : 91}
,
{
"name" : "compress",
"kind" : "function",
"type" : "const(void)[](const(void)[] srcbuf, int level)",
"line" : 116}
,
{
"name" : "compress",
"kind" : "function",
"type" : "const(void)[](const(void)[] buf)",
"line" : 139}
,
{
"name" : "uncompress",
"kind" : "function",
"type" : "void[](void[] srcbuf, ulong destlen = cast(ulong)0u, int winbits = 15)",
"line" : 152}
,
{
"name" : "Compress",
"kind" : "class",
"line" : 238,
"base" : "Object",
"members" : [
{
"name" : "zs",
"kind" : "variable",
"type" : "z_stream",
"line" : 240}
,
{
"name" : "level",
"kind" : "variable",
"type" : "int",
"line" : 241}
,
{
"name" : "inited",
"kind" : "variable",
"type" : "int",
"line" : 242}
,
{
"name" : "error",
"kind" : "function",
"type" : "void(int err)",
"line" : 244}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Compress(int level)",
"line" : 258}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "Compress()",
"line" : 269}
,
{
"name" : "compress",
"kind" : "function",
"type" : "const(void)[](const(void)[] buf)",
"line" : 290}
,
{
"name" : "flush",
"kind" : "function",
"type" : "void[](int mode = 4)",
"line" : 342}
]
}
,
{
"name" : "UnCompress",
"kind" : "class",
"line" : 399,
"base" : "Object",
"members" : [
{
"name" : "zs",
"kind" : "variable",
"type" : "z_stream",
"line" : 401}
,
{
"name" : "inited",
"kind" : "variable",
"type" : "int",
"line" : 402}
,
{
"name" : "done",
"kind" : "variable",
"type" : "int",
"line" : 403}
,
{
"name" : "destbufsize",
"kind" : "variable",
"type" : "ulong",
"line" : 404}
,
{
"name" : "error",
"kind" : "function",
"type" : "void(int err)",
"line" : 406}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "UnCompress(uint destbufsize)",
"line" : 420}
,
{
"name" : "this",
"kind" : "constructor",
"type" : "UnCompress()",
"line" : 426}
,
{
"name" : "uncompress",
"kind" : "function",
"type" : "const(void)[](const(void)[] buf)",
"line" : 448}
,
{
"name" : "flush",
"kind" : "function",
"type" : "void[]()",
"line" : 494}
]
}
]
}
,
{
"name" : "etc.c.curl",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/etc\/c\/curl.d",
"members" : [
{
"name" : "LIBCURL_COPYRIGHT",
"kind" : "variable",
"type" : "string",
"line" : 48}
,
{
"name" : "LIBCURL_VERSION",
"kind" : "variable",
"type" : "string",
"line" : 52}
,
{
"name" : "LIBCURL_VERSION_MAJOR",
"kind" : "variable",
"type" : "int",
"line" : 56}
,
{
"name" : "LIBCURL_VERSION_MINOR",
"kind" : "variable",
"type" : "int",
"line" : 58}
,
{
"name" : "LIBCURL_VERSION_PATCH",
"kind" : "variable",
"type" : "int",
"line" : 60}
,
{
"name" : "LIBCURL_VERSION_NUM",
"kind" : "variable",
"type" : "int",
"line" : 78}
,
{
"name" : "LIBCURL_TIMESTAMP",
"kind" : "variable",
"type" : "string",
"line" : 89}
,
{
"name" : "curl_off_t",
"kind" : "alias",
"type" : "long",
"line" : 105}
,
{
"name" : "CURL",
"kind" : "alias",
"type" : "void",
"line" : 108}
,
{
"name" : "curl_socket_t",
"kind" : "alias",
"line" : 111}
,
{
"name" : "CURL_SOCKET_BAD",
"kind" : "variable",
"type" : "int",
"line" : 118}
,
{
"name" : "curl_httppost",
"kind" : "struct",
"line" : 122,
"members" : [
{
"name" : "next",
"kind" : "variable",
"type" : "curl_httppost*",
"line" : 123}
,
{
"name" : "name",
"kind" : "variable",
"type" : "char*",
"line" : 124}
,
{
"name" : "namelength",
"kind" : "variable",
"type" : "long",
"line" : 125}
,
{
"name" : "contents",
"kind" : "variable",
"type" : "char*",
"line" : 126}
,
{
"name" : "contentslength",
"kind" : "variable",
"type" : "long",
"line" : 127}
,
{
"name" : "buffer",
"kind" : "variable",
"type" : "char*",
"line" : 128}
,
{
"name" : "bufferlength",
"kind" : "variable",
"type" : "long",
"line" : 129}
,
{
"name" : "contenttype",
"kind" : "variable",
"type" : "char*",
"line" : 130}
,
{
"name" : "contentheader",
"kind" : "variable",
"type" : "curl_slist*",
"line" : 131}
,
{
"name" : "more",
"kind" : "variable",
"type" : "curl_httppost*",
"line" : 132}
,
{
"name" : "flags",
"kind" : "variable",
"type" : "long",
"line" : 135}
,
{
"name" : "showfilename",
"kind" : "variable",
"type" : "char*",
"line" : 136}
,
{
"name" : "userp",
"kind" : "variable",
"type" : "void*",
"line" : 139}
]
}
,
{
"name" : "HTTPPOST_FILENAME",
"kind" : "variable",
"type" : "int",
"line" : 143}
,
{
"name" : "HTTPPOST_READFILE",
"kind" : "variable",
"type" : "int",
"line" : 144}
,
{
"name" : "HTTPPOST_PTRNAME",
"kind" : "variable",
"type" : "int",
"line" : 145}
,
{
"name" : "HTTPPOST_PTRCONTENTS",
"kind" : "variable",
"type" : "int",
"line" : 147}
,
{
"name" : "HTTPPOST_BUFFER",
"kind" : "variable",
"type" : "int",
"line" : 149}
,
{
"name" : "HTTPPOST_PTRBUFFER",
"kind" : "variable",
"type" : "int",
"line" : 150}
,
{
"name" : "HTTPPOST_CALLBACK",
"kind" : "variable",
"type" : "int",
"line" : 151}
,
{
"name" : "curl_progress_callback",
"kind" : "alias",
"type" : "int function(void* clientp, double dltotal, double dlnow, double ultotal, double ulnow)",
"line" : 157}
,
{
"name" : "CURL_MAX_WRITE_SIZE",
"kind" : "variable",
"type" : "int",
"line" : 165}
,
{
"name" : "CURL_MAX_HTTP_HEADER",
"kind" : "variable",
"type" : "int",
"line" : 170}
,
{
"name" : "CURL_WRITEFUNC_PAUSE",
"kind" : "variable",
"type" : "int",
"line" : 175}
,
{
"name" : "curl_write_callback",
"kind" : "alias",
"type" : "ulong function(char* buffer, ulong size, ulong nitems, void* outstream)",
"line" : 178}
,
{
"name" : "CurlFileType",
"kind" : "enum",
"line" : 181,
"base" : "int",
"members" : [
{
"name" : "file",
"kind" : "enum member",
"line" : 182}
,
{
"name" : "directory",
"kind" : "enum member",
"line" : 183}
,
{
"name" : "symlink",
"kind" : "enum member",
"line" : 184}
,
{
"name" : "device_block",
"kind" : "enum member",
"line" : 185}
,
{
"name" : "device_char",
"kind" : "enum member",
"line" : 186}
,
{
"name" : "namedpipe",
"kind" : "enum member",
"line" : 187}
,
{
"name" : "socket",
"kind" : "enum member",
"line" : 188}
,
{
"name" : "door",
"kind" : "enum member",
"line" : 189}
,
{
"name" : "unknown",
"kind" : "enum member",
"line" : 190}
]
}
,
{
"name" : "curlfiletype",
"kind" : "alias",
"type" : "int",
"line" : 194}
,
{
"name" : "CurlFInfoFlagKnown",
"kind" : "enum",
"line" : 197,
"base" : "int",
"members" : [
{
"name" : "filename",
"kind" : "enum member",
"line" : 198}
,
{
"name" : "filetype",
"kind" : "enum member",
"line" : 199}
,
{
"name" : "time",
"kind" : "enum member",
"line" : 200}
,
{
"name" : "perm",
"kind" : "enum member",
"line" : 201}
,
{
"name" : "uid",
"kind" : "enum member",
"line" : 202}
,
{
"name" : "gid",
"kind" : "enum member",
"line" : 203}
,
{
"name" : "size",
"kind" : "enum member",
"line" : 204}
,
{
"name" : "hlinkcount",
"kind" : "enum member",
"line" : 205}
]
}
,
{
"name" : "_N2",
"kind" : "struct",
"line" : 216,
"members" : [
{
"name" : "time",
"kind" : "variable",
"type" : "char*",
"line" : 217}
,
{
"name" : "perm",
"kind" : "variable",
"type" : "char*",
"line" : 218}
,
{
"name" : "user",
"kind" : "variable",
"type" : "char*",
"line" : 219}
,
{
"name" : "group",
"kind" : "variable",
"type" : "char*",
"line" : 220}
,
{
"name" : "target",
"kind" : "variable",
"type" : "char*",
"line" : 221}
]
}
,
{
"name" : "curl_fileinfo",
"kind" : "struct",
"line" : 229,
"members" : [
{
"name" : "filename",
"kind" : "variable",
"type" : "char*",
"line" : 230}
,
{
"name" : "filetype",
"kind" : "variable",
"type" : "int",
"line" : 231}
,
{
"name" : "time",
"kind" : "variable",
"type" : "long",
"line" : 232}
,
{
"name" : "perm",
"kind" : "variable",
"type" : "uint",
"line" : 233}
,
{
"name" : "uid",
"kind" : "variable",
"type" : "int",
"line" : 234}
,
{
"name" : "gid",
"kind" : "variable",
"type" : "int",
"line" : 235}
,
{
"name" : "size",
"kind" : "variable",
"type" : "long",
"line" : 236}
,
{
"name" : "hardlinks",
"kind" : "variable",
"type" : "long",
"line" : 237}
,
{
"name" : "strings",
"kind" : "variable",
"type" : "_N2",
"line" : 238}
,
{
"name" : "flags",
"kind" : "variable",
"type" : "uint",
"line" : 239}
,
{
"name" : "b_data",
"kind" : "variable",
"type" : "char*",
"line" : 240}
,
{
"name" : "b_size",
"kind" : "variable",
"type" : "ulong",
"line" : 241}
,
{
"name" : "b_used",
"kind" : "variable",
"type" : "ulong",
"line" : 242}
]
}
,
{
"name" : "CurlChunkBgnFunc",
"kind" : "enum",
"line" : 246,
"base" : "int",
"members" : [
{
"name" : "ok",
"kind" : "enum member",
"line" : 247}
,
{
"name" : "fail",
"kind" : "enum member",
"line" : 248}
,
{
"name" : "skip",
"kind" : "enum member",
"line" : 249}
]
}
,
{
"name" : "curl_chunk_bgn_callback",
"kind" : "alias",
"type" : "long function(void* transfer_info, void* ptr, int remains)",
"line" : 255}
,
{
"name" : "CurlChunkEndFunc",
"kind" : "enum",
"line" : 258,
"base" : "int",
"members" : [
{
"name" : "ok",
"kind" : "enum member",
"line" : 259}
,
{
"name" : "fail",
"kind" : "enum member",
"line" : 260}
]
}
,
{
"name" : "curl_chunk_end_callback",
"kind" : "alias",
"type" : "long function(void* ptr)",
"line" : 268}
,
{
"name" : "CurlFnMAtchFunc",
"kind" : "enum",
"line" : 271,
"base" : "int",
"members" : [
{
"name" : "match",
"kind" : "enum member",
"line" : 272}
,
{
"name" : "nomatch",
"kind" : "enum member",
"line" : 273}
,
{
"name" : "fail",
"kind" : "enum member",
"line" : 274}
]
}
,
{
"name" : "curl_fnmatch_callback",
"kind" : "alias",
"type" : "int function(void* ptr, char* pattern, char* string)",
"line" : 279}
,
{
"name" : "CurlSeekPos",
"kind" : "enum",
"line" : 282,
"base" : "int",
"members" : [
{
"name" : "set",
"kind" : "enum member",
"line" : 283}
,
{
"name" : "current",
"kind" : "enum member",
"line" : 284}
,
{
"name" : "end",
"kind" : "enum member",
"line" : 285}
]
}
,
{
"name" : "CurlSeek",
"kind" : "enum",
"line" : 289,
"base" : "int",
"members" : [
{
"name" : "ok",
"kind" : "enum member",
"line" : 290}
,
{
"name" : "fail",
"kind" : "enum member",
"line" : 291}
,
{
"name" : "cantseek",
"kind" : "enum member",
"line" : 292}
]
}
,
{
"name" : "curl_seek_callback",
"kind" : "alias",
"type" : "int function(void* instream, long offset, int origin)",
"line" : 297}
,
{
"name" : "CurlReadFunc",
"kind" : "enum",
"line" : 300,
"base" : "int",
"members" : [
{
"name" : "abort",
"kind" : "enum member",
"line" : 303}
,
{
"name" : "pause",
"kind" : "enum member",
"line" : 308}
]
}
,
{
"name" : "curl_read_callback",
"kind" : "alias",
"type" : "ulong function(char* buffer, ulong size, ulong nitems, void* outstream)",
"line" : 312}
,
{
"name" : "CurlSockType",
"kind" : "enum",
"line" : 315,
"base" : "int",
"members" : [
{
"name" : "ipcxn",
"kind" : "enum member",
"line" : 316}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 317}
]
}
,
{
"name" : "curlsocktype",
"kind" : "alias",
"type" : "int",
"line" : 320}
,
{
"name" : "curl_sockopt_callback",
"kind" : "alias",
"type" : "int function(void* clientp, socket_t curlfd, int purpose)",
"line" : 323}
,
{
"name" : "curl_sockaddr",
"kind" : "struct",
"line" : 328,
"members" : [
{
"name" : "family",
"kind" : "variable",
"type" : "int",
"line" : 329}
,
{
"name" : "socktype",
"kind" : "variable",
"type" : "int",
"line" : 330}
,
{
"name" : "protocol",
"kind" : "variable",
"type" : "int",
"line" : 331}
,
{
"name" : "addrlen",
"kind" : "variable",
"type" : "uint",
"line" : 332}
,
{
"name" : "addr",
"kind" : "variable",
"type" : "sockaddr",
"line" : 335}
]
}
,
{
"name" : "curl_opensocket_callback",
"kind" : "alias",
"type" : "socket_t function(void* clientp, int purpose, curl_sockaddr* address)",
"line" : 339}
,
{
"name" : "CurlIoError",
"kind" : "enum",
"line" : 343,
"base" : "int",
"members" : [
{
"name" : "ok",
"kind" : "enum member",
"line" : 344}
,
{
"name" : "unknowncmd",
"kind" : "enum member",
"line" : 345}
,
{
"name" : "failrestart",
"kind" : "enum member",
"line" : 346}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 347}
]
}
,
{
"name" : "curlioerr",
"kind" : "alias",
"type" : "int",
"line" : 350}
,
{
"name" : "CurlIoCmd",
"kind" : "enum",
"line" : 353,
"base" : "int",
"members" : [
{
"name" : "nop",
"kind" : "enum member",
"line" : 354}
,
{
"name" : "restartread",
"kind" : "enum member",
"line" : 355}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 356}
]
}
,
{
"name" : "curliocmd",
"kind" : "alias",
"type" : "int",
"line" : 359}
,
{
"name" : "curl_ioctl_callback",
"kind" : "alias",
"type" : "int function(void* handle, int cmd, void* clientp)",
"line" : 362}
,
{
"name" : "curl_malloc_callback",
"kind" : "alias",
"type" : "void* function(ulong size)",
"line" : 370}
,
{
"name" : "curl_free_callback",
"kind" : "alias",
"type" : "void function(void*)",
"line" : 372}
,
{
"name" : "curl_realloc_callback",
"kind" : "alias",
"type" : "void* function(void* ptr, ulong size)",
"line" : 374}
,
{
"name" : "curl_strdup_callback",
"kind" : "alias",
"type" : "char* function(char* str)",
"line" : 376}
,
{
"name" : "curl_calloc_callback",
"kind" : "alias",
"type" : "void* function(ulong nmemb, ulong size)",
"line" : 378}
,
{
"name" : "CurlCallbackInfo",
"kind" : "enum",
"line" : 381,
"base" : "int",
"members" : [
{
"name" : "text",
"kind" : "enum member",
"line" : 382}
,
{
"name" : "header_in",
"kind" : "enum member",
"line" : 383}
,
{
"name" : "header_out",
"kind" : "enum member",
"line" : 384}
,
{
"name" : "data_in",
"kind" : "enum member",
"line" : 385}
,
{
"name" : "data_out",
"kind" : "enum member",
"line" : 386}
,
{
"name" : "ssl_data_in",
"kind" : "enum member",
"line" : 387}
,
{
"name" : "ssl_data_out",
"kind" : "enum member",
"line" : 388}
,
{
"name" : "end",
"kind" : "enum member",
"line" : 389}
]
}
,
{
"name" : "curl_infotype",
"kind" : "alias",
"type" : "int",
"line" : 392}
,
{
"name" : "curl_debug_callback",
"kind" : "alias",
"type" : "int function(void* handle, int type, char* data, ulong size, void* userptr)",
"line" : 400}
,
{
"name" : "CurlError",
"kind" : "enum",
"line" : 409,
"base" : "int",
"members" : [
{
"name" : "ok",
"kind" : "enum member",
"line" : 410}
,
{
"name" : "unsupported_protocol",
"kind" : "enum member",
"line" : 411}
,
{
"name" : "failed_init",
"kind" : "enum member",
"line" : 412}
,
{
"name" : "url_malformat",
"kind" : "enum member",
"line" : 413}
,
{
"name" : "obsolete4",
"kind" : "enum member",
"line" : 414}
,
{
"name" : "couldnt_resolve_proxy",
"kind" : "enum member",
"line" : 415}
,
{
"name" : "couldnt_resolve_host",
"kind" : "enum member",
"line" : 416}
,
{
"name" : "couldnt_connect",
"kind" : "enum member",
"line" : 417}
,
{
"name" : "ftp_weird_server_reply",
"kind" : "enum member",
"line" : 418}
,
{
"name" : "remote_access_denied",
"kind" : "enum member",
"line" : 419}
,
{
"name" : "obsolete10",
"kind" : "enum member",
"line" : 422}
,
{
"name" : "ftp_weird_pass_reply",
"kind" : "enum member",
"line" : 423}
,
{
"name" : "obsolete12",
"kind" : "enum member",
"line" : 424}
,
{
"name" : "ftp_weird_pasv_reply",
"kind" : "enum member",
"line" : 425}
,
{
"name" : "ftp_weird_227_format",
"kind" : "enum member",
"line" : 426}
,
{
"name" : "ftp_cant_get_host",
"kind" : "enum member",
"line" : 427}
,
{
"name" : "obsolete16",
"kind" : "enum member",
"line" : 428}
,
{
"name" : "ftp_couldnt_set_type",
"kind" : "enum member",
"line" : 429}
,
{
"name" : "partial_file",
"kind" : "enum member",
"line" : 430}
,
{
"name" : "ftp_couldnt_retr_file",
"kind" : "enum member",
"line" : 431}
,
{
"name" : "obsolete20",
"kind" : "enum member",
"line" : 432}
,
{
"name" : "quote_error",
"kind" : "enum member",
"line" : 433}
,
{
"name" : "http_returned_error",
"kind" : "enum member",
"line" : 434}
,
{
"name" : "write_error",
"kind" : "enum member",
"line" : 435}
,
{
"name" : "obsolete24",
"kind" : "enum member",
"line" : 436}
,
{
"name" : "upload_failed",
"kind" : "enum member",
"line" : 437}
,
{
"name" : "read_error",
"kind" : "enum member",
"line" : 438}
,
{
"name" : "out_of_memory",
"kind" : "enum member",
"line" : 439}
,
{
"name" : "operation_timedout",
"kind" : "enum member",
"line" : 444}
,
{
"name" : "obsolete29",
"kind" : "enum member",
"line" : 445}
,
{
"name" : "ftp_port_failed",
"kind" : "enum member",
"line" : 446}
,
{
"name" : "ftp_couldnt_use_rest",
"kind" : "enum member",
"line" : 447}
,
{
"name" : "obsolete32",
"kind" : "enum member",
"line" : 448}
,
{
"name" : "range_error",
"kind" : "enum member",
"line" : 449}
,
{
"name" : "http_post_error",
"kind" : "enum member",
"line" : 450}
,
{
"name" : "ssl_connect_error",
"kind" : "enum member",
"line" : 451}
,
{
"name" : "bad_download_resume",
"kind" : "enum member",
"line" : 452}
,
{
"name" : "file_couldnt_read_file",
"kind" : "enum member",
"line" : 453}
,
{
"name" : "ldap_cannot_bind",
"kind" : "enum member",
"line" : 454}
,
{
"name" : "ldap_search_failed",
"kind" : "enum member",
"line" : 455}
,
{
"name" : "obsolete40",
"kind" : "enum member",
"line" : 456}
,
{
"name" : "function_not_found",
"kind" : "enum member",
"line" : 457}
,
{
"name" : "aborted_by_callback",
"kind" : "enum member",
"line" : 458}
,
{
"name" : "bad_function_argument",
"kind" : "enum member",
"line" : 459}
,
{
"name" : "obsolete44",
"kind" : "enum member",
"line" : 460}
,
{
"name" : "interface_failed",
"kind" : "enum member",
"line" : 461}
,
{
"name" : "obsolete46",
"kind" : "enum member",
"line" : 462}
,
{
"name" : "too_many_redirects",
"kind" : "enum member",
"line" : 463}
,
{
"name" : "unknown_telnet_option",
"kind" : "enum member",
"line" : 464}
,
{
"name" : "telnet_option_syntax",
"kind" : "enum member",
"line" : 465}
,
{
"name" : "obsolete50",
"kind" : "enum member",
"line" : 466}
,
{
"name" : "peer_failed_verification",
"kind" : "enum member",
"line" : 467}
,
{
"name" : "got_nothing",
"kind" : "enum member",
"line" : 469}
,
{
"name" : "ssl_engine_notfound",
"kind" : "enum member",
"line" : 470}
,
{
"name" : "ssl_engine_setfailed",
"kind" : "enum member",
"line" : 471}
,
{
"name" : "send_error",
"kind" : "enum member",
"line" : 472}
,
{
"name" : "recv_error",
"kind" : "enum member",
"line" : 473}
,
{
"name" : "obsolete57",
"kind" : "enum member",
"line" : 474}
,
{
"name" : "ssl_certproblem",
"kind" : "enum member",
"line" : 475}
,
{
"name" : "ssl_cipher",
"kind" : "enum member",
"line" : 476}
,
{
"name" : "ssl_cacert",
"kind" : "enum member",
"line" : 477}
,
{
"name" : "bad_content_encoding",
"kind" : "enum member",
"line" : 478}
,
{
"name" : "ldap_invalid_url",
"kind" : "enum member",
"line" : 479}
,
{
"name" : "filesize_exceeded",
"kind" : "enum member",
"line" : 480}
,
{
"name" : "use_ssl_failed",
"kind" : "enum member",
"line" : 481}
,
{
"name" : "send_fail_rewind",
"kind" : "enum member",
"line" : 482}
,
{
"name" : "ssl_engine_initfailed",
"kind" : "enum member",
"line" : 483}
,
{
"name" : "login_denied",
"kind" : "enum member",
"line" : 484}
,
{
"name" : "tftp_notfound",
"kind" : "enum member",
"line" : 485}
,
{
"name" : "tftp_perm",
"kind" : "enum member",
"line" : 486}
,
{
"name" : "remote_disk_full",
"kind" : "enum member",
"line" : 487}
,
{
"name" : "tftp_illegal",
"kind" : "enum member",
"line" : 488}
,
{
"name" : "tftp_unknownid",
"kind" : "enum member",
"line" : 489}
,
{
"name" : "remote_file_exists",
"kind" : "enum member",
"line" : 490}
,
{
"name" : "tftp_nosuchuser",
"kind" : "enum member",
"line" : 491}
,
{
"name" : "conv_failed",
"kind" : "enum member",
"line" : 492}
,
{
"name" : "conv_reqd",
"kind" : "enum member",
"line" : 493}
,
{
"name" : "ssl_cacert_badfile",
"kind" : "enum member",
"line" : 498}
,
{
"name" : "remote_file_not_found",
"kind" : "enum member",
"line" : 499}
,
{
"name" : "ssh",
"kind" : "enum member",
"line" : 500}
,
{
"name" : "ssl_shutdown_failed",
"kind" : "enum member",
"line" : 503}
,
{
"name" : "again",
"kind" : "enum member",
"line" : 504}
,
{
"name" : "ssl_crl_badfile",
"kind" : "enum member",
"line" : 507}
,
{
"name" : "ssl_issuer_error",
"kind" : "enum member",
"line" : 508}
,
{
"name" : "ftp_pret_failed",
"kind" : "enum member",
"line" : 509}
,
{
"name" : "rtsp_cseq_error",
"kind" : "enum member",
"line" : 510}
,
{
"name" : "rtsp_session_error",
"kind" : "enum member",
"line" : 511}
,
{
"name" : "ftp_bad_file_list",
"kind" : "enum member",
"line" : 512}
,
{
"name" : "chunk_failed",
"kind" : "enum member",
"line" : 513}
,
{
"name" : "curl_last",
"kind" : "enum member",
"line" : 514}
]
}
,
{
"name" : "CURLcode",
"kind" : "alias",
"type" : "int",
"line" : 517}
,
{
"name" : "curl_conv_callback",
"kind" : "alias",
"type" : "int function(char* buffer, ulong length)",
"line" : 520}
,
{
"name" : "curl_ssl_ctx_callback",
"kind" : "alias",
"type" : "int function(void* curl, void* ssl_ctx, void* userptr)",
"line" : 527}
,
{
"name" : "CurlProxy",
"kind" : "enum",
"line" : 530,
"base" : "int",
"members" : [
{
"name" : "http",
"kind" : "enum member",
"line" : 531}
,
{
"name" : "http_1_0",
"kind" : "enum member",
"line" : 532}
,
{
"name" : "socks4",
"kind" : "enum member",
"line" : 533}
,
{
"name" : "socks5",
"kind" : "enum member",
"line" : 534}
,
{
"name" : "socks4a",
"kind" : "enum member",
"line" : 535}
,
{
"name" : "socks5_hostname",
"kind" : "enum member",
"line" : 536}
]
}
,
{
"name" : "curl_proxytype",
"kind" : "alias",
"type" : "int",
"line" : 541}
,
{
"name" : "CurlAuth",
"kind" : "enum",
"line" : 544,
"base" : "long",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 545}
,
{
"name" : "basic",
"kind" : "enum member",
"line" : 546}
,
{
"name" : "digest",
"kind" : "enum member",
"line" : 547}
,
{
"name" : "gssnegotiate",
"kind" : "enum member",
"line" : 548}
,
{
"name" : "ntlm",
"kind" : "enum member",
"line" : 549}
,
{
"name" : "digest_ie",
"kind" : "enum member",
"line" : 550}
,
{
"name" : "only",
"kind" : "enum member",
"line" : 551}
,
{
"name" : "any",
"kind" : "enum member",
"line" : 554}
,
{
"name" : "anysafe",
"kind" : "enum member",
"line" : 555}
]
}
,
{
"name" : "CurlSshAuth",
"kind" : "enum",
"line" : 559,
"base" : "int",
"members" : [
{
"name" : "any",
"kind" : "enum member",
"line" : 560}
,
{
"name" : "none",
"kind" : "enum member",
"line" : 561}
,
{
"name" : "publickey",
"kind" : "enum member",
"line" : 562}
,
{
"name" : "password",
"kind" : "enum member",
"line" : 563}
,
{
"name" : "host",
"kind" : "enum member",
"line" : 564}
,
{
"name" : "keyboard",
"kind" : "enum member",
"line" : 565}
,
{
"name" : "default_",
"kind" : "enum member",
"line" : 566}
]
}
,
{
"name" : "CURL_ERROR_SIZE",
"kind" : "variable",
"type" : "int",
"line" : 569}
,
{
"name" : "CurlKHType",
"kind" : "enum",
"line" : 573,
"base" : "int",
"members" : [
{
"name" : "unknown",
"kind" : "enum member",
"line" : 574}
,
{
"name" : "rsa1",
"kind" : "enum member",
"line" : 575}
,
{
"name" : "rsa",
"kind" : "enum member",
"line" : 576}
,
{
"name" : "dss",
"kind" : "enum member",
"line" : 577}
]
}
,
{
"name" : "curl_khkey",
"kind" : "struct",
"line" : 581,
"members" : [
{
"name" : "key",
"kind" : "variable",
"type" : "char*",
"line" : 582}
,
{
"name" : "len",
"kind" : "variable",
"type" : "ulong",
"line" : 584}
,
{
"name" : "keytype",
"kind" : "variable",
"type" : "CurlKHType",
"line" : 585}
]
}
,
{
"name" : "CurlKHStat",
"kind" : "enum",
"line" : 590,
"base" : "int",
"members" : [
{
"name" : "fine_add_to_file",
"kind" : "enum member",
"line" : 591}
,
{
"name" : "fine",
"kind" : "enum member",
"line" : 592}
,
{
"name" : "reject",
"kind" : "enum member",
"line" : 593}
,
{
"name" : "defer",
"kind" : "enum member",
"line" : 594}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 597}
]
}
,
{
"name" : "CurlKHMatch",
"kind" : "enum",
"line" : 601,
"base" : "int",
"members" : [
{
"name" : "ok",
"kind" : "enum member",
"line" : 602}
,
{
"name" : "mismatch",
"kind" : "enum member",
"line" : 603}
,
{
"name" : "missing",
"kind" : "enum member",
"line" : 604}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 605}
]
}
,
{
"name" : "curl_sshkeycallback",
"kind" : "alias",
"type" : "int function(void* easy, curl_khkey* knownkey, curl_khkey* foundkey, CurlKHMatch m, void* clientp)",
"line" : 614}
,
{
"name" : "CurlUseSSL",
"kind" : "enum",
"line" : 617,
"base" : "int",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 618}
,
{
"name" : "tryssl",
"kind" : "enum member",
"line" : 619}
,
{
"name" : "control",
"kind" : "enum member",
"line" : 620}
,
{
"name" : "all",
"kind" : "enum member",
"line" : 621}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 622}
]
}
,
{
"name" : "curl_usessl",
"kind" : "alias",
"type" : "int",
"line" : 625}
,
{
"name" : "CurlFtpSSL",
"kind" : "enum",
"line" : 628,
"base" : "int",
"members" : [
{
"name" : "ccc_none",
"kind" : "enum member",
"line" : 629}
,
{
"name" : "ccc_passive",
"kind" : "enum member",
"line" : 630}
,
{
"name" : "ccc_active",
"kind" : "enum member",
"line" : 631}
,
{
"name" : "ccc_last",
"kind" : "enum member",
"line" : 632}
]
}
,
{
"name" : "curl_ftpccc",
"kind" : "alias",
"type" : "int",
"line" : 635}
,
{
"name" : "CurlFtpAuth",
"kind" : "enum",
"line" : 638,
"base" : "int",
"members" : [
{
"name" : "defaultauth",
"kind" : "enum member",
"line" : 639}
,
{
"name" : "ssl",
"kind" : "enum member",
"line" : 640}
,
{
"name" : "tls",
"kind" : "enum member",
"line" : 641}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 642}
]
}
,
{
"name" : "curl_ftpauth",
"kind" : "alias",
"type" : "int",
"line" : 645}
,
{
"name" : "CurlFtp",
"kind" : "enum",
"line" : 648,
"base" : "int",
"members" : [
{
"name" : "create_dir_none",
"kind" : "enum member",
"line" : 649}
,
{
"name" : "create_dir",
"kind" : "enum member",
"line" : 650}
,
{
"name" : "create_dir_retry",
"kind" : "enum member",
"line" : 652}
,
{
"name" : "create_dir_last",
"kind" : "enum member",
"line" : 654}
]
}
,
{
"name" : "curl_ftpcreatedir",
"kind" : "alias",
"type" : "int",
"line" : 657}
,
{
"name" : "CurlFtpMethod",
"kind" : "enum",
"line" : 660,
"base" : "int",
"members" : [
{
"name" : "defaultmethod",
"kind" : "enum member",
"line" : 661}
,
{
"name" : "multicwd",
"kind" : "enum member",
"line" : 662}
,
{
"name" : "nocwd",
"kind" : "enum member",
"line" : 663}
,
{
"name" : "singlecwd",
"kind" : "enum member",
"line" : 664}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 665}
]
}
,
{
"name" : "curl_ftpmethod",
"kind" : "alias",
"type" : "int",
"line" : 668}
,
{
"name" : "CurlProto",
"kind" : "enum",
"line" : 671,
"base" : "int",
"members" : [
{
"name" : "http",
"kind" : "enum member",
"line" : 672}
,
{
"name" : "https",
"kind" : "enum member",
"line" : 673}
,
{
"name" : "ftp",
"kind" : "enum member",
"line" : 674}
,
{
"name" : "ftps",
"kind" : "enum member",
"line" : 675}
,
{
"name" : "scp",
"kind" : "enum member",
"line" : 676}
,
{
"name" : "sftp",
"kind" : "enum member",
"line" : 677}
,
{
"name" : "telnet",
"kind" : "enum member",
"line" : 678}
,
{
"name" : "ldap",
"kind" : "enum member",
"line" : 679}
,
{
"name" : "ldaps",
"kind" : "enum member",
"line" : 680}
,
{
"name" : "dict",
"kind" : "enum member",
"line" : 681}
,
{
"name" : "file",
"kind" : "enum member",
"line" : 682}
,
{
"name" : "tftp",
"kind" : "enum member",
"line" : 683}
,
{
"name" : "imap",
"kind" : "enum member",
"line" : 684}
,
{
"name" : "imaps",
"kind" : "enum member",
"line" : 685}
,
{
"name" : "pop3",
"kind" : "enum member",
"line" : 686}
,
{
"name" : "pop3s",
"kind" : "enum member",
"line" : 687}
,
{
"name" : "smtp",
"kind" : "enum member",
"line" : 688}
,
{
"name" : "smtps",
"kind" : "enum member",
"line" : 689}
,
{
"name" : "rtsp",
"kind" : "enum member",
"line" : 690}
,
{
"name" : "rtmp",
"kind" : "enum member",
"line" : 691}
,
{
"name" : "rtmpt",
"kind" : "enum member",
"line" : 692}
,
{
"name" : "rtmpe",
"kind" : "enum member",
"line" : 693}
,
{
"name" : "rtmpte",
"kind" : "enum member",
"line" : 694}
,
{
"name" : "rtmps",
"kind" : "enum member",
"line" : 695}
,
{
"name" : "rtmpts",
"kind" : "enum member",
"line" : 696}
,
{
"name" : "gopher",
"kind" : "enum member",
"line" : 697}
,
{
"name" : "all",
"kind" : "enum member",
"line" : 698}
]
}
,
{
"name" : "CURLOPTTYPE_LONG",
"kind" : "variable",
"type" : "int",
"line" : 703}
,
{
"name" : "CURLOPTTYPE_OBJECTPOINT",
"kind" : "variable",
"type" : "int",
"line" : 705}
,
{
"name" : "CURLOPTTYPE_FUNCTIONPOINT",
"kind" : "variable",
"type" : "int",
"line" : 707}
,
{
"name" : "CURLOPTTYPE_OFF_T",
"kind" : "variable",
"type" : "int",
"line" : 710}
,
{
"name" : "LONG",
"kind" : "alias",
"line" : 716}
,
{
"name" : "OBJECTPOINT",
"kind" : "alias",
"line" : 718}
,
{
"name" : "FUNCTIONPOINT",
"kind" : "alias",
"line" : 720}
,
{
"name" : "OFF_T",
"kind" : "alias",
"line" : 723}
,
{
"name" : "CurlOption",
"kind" : "enum",
"line" : 726,
"base" : "int",
"members" : [
{
"name" : "file",
"kind" : "enum member",
"line" : 728}
,
{
"name" : "url",
"kind" : "enum member",
"line" : 730}
,
{
"name" : "port",
"kind" : "enum member",
"line" : 732}
,
{
"name" : "proxy",
"kind" : "enum member",
"line" : 734}
,
{
"name" : "userpwd",
"kind" : "enum member",
"line" : 736}
,
{
"name" : "proxyuserpwd",
"kind" : "enum member",
"line" : 738}
,
{
"name" : "range",
"kind" : "enum member",
"line" : 740}
,
{
"name" : "infile",
"kind" : "enum member",
"line" : 744}
,
{
"name" : "errorbuffer",
"kind" : "enum member",
"line" : 747}
,
{
"name" : "writefunction",
"kind" : "enum member",
"line" : 750}
,
{
"name" : "readfunction",
"kind" : "enum member",
"line" : 753}
,
{
"name" : "timeout",
"kind" : "enum member",
"line" : 755}
,
{
"name" : "infilesize",
"kind" : "enum member",
"line" : 765}
,
{
"name" : "postfields",
"kind" : "enum member",
"line" : 767}
,
{
"name" : "referer",
"kind" : "enum member",
"line" : 769}
,
{
"name" : "ftpport",
"kind" : "enum member",
"line" : 772}
,
{
"name" : "useragent",
"kind" : "enum member",
"line" : 774}
,
{
"name" : "low_speed_limit",
"kind" : "enum member",
"line" : 782}
,
{
"name" : "low_speed_time",
"kind" : "enum member",
"line" : 784}
,
{
"name" : "resume_from",
"kind" : "enum member",
"line" : 791}
,
{
"name" : "cookie",
"kind" : "enum member",
"line" : 793}
,
{
"name" : "httpheader",
"kind" : "enum member",
"line" : 795}
,
{
"name" : "httppost",
"kind" : "enum member",
"line" : 797}
,
{
"name" : "sslcert",
"kind" : "enum member",
"line" : 799}
,
{
"name" : "keypasswd",
"kind" : "enum member",
"line" : 801}
,
{
"name" : "crlf",
"kind" : "enum member",
"line" : 803}
,
{
"name" : "quote",
"kind" : "enum member",
"line" : 805}
,
{
"name" : "writeheader",
"kind" : "enum member",
"line" : 808}
,
{
"name" : "cookiefile",
"kind" : "enum member",
"line" : 811}
,
{
"name" : "sslversion",
"kind" : "enum member",
"line" : 814}
,
{
"name" : "timecondition",
"kind" : "enum member",
"line" : 816}
,
{
"name" : "timevalue",
"kind" : "enum member",
"line" : 819}
,
{
"name" : "customrequest",
"kind" : "enum member",
"line" : 826}
,
{
"name" : "stderr",
"kind" : "enum member",
"line" : 828}
,
{
"name" : "postquote",
"kind" : "enum member",
"line" : 832}
,
{
"name" : "writeinfo",
"kind" : "enum member",
"line" : 835}
,
{
"name" : "verbose",
"kind" : "enum member",
"line" : 836}
,
{
"name" : "header",
"kind" : "enum member",
"line" : 837}
,
{
"name" : "noprogress",
"kind" : "enum member",
"line" : 838}
,
{
"name" : "nobody",
"kind" : "enum member",
"line" : 839}
,
{
"name" : "failonerror",
"kind" : "enum member",
"line" : 840}
,
{
"name" : "upload",
"kind" : "enum member",
"line" : 841}
,
{
"name" : "post",
"kind" : "enum member",
"line" : 842}
,
{
"name" : "dirlistonly",
"kind" : "enum member",
"line" : 843}
,
{
"name" : "append",
"kind" : "enum member",
"line" : 844}
,
{
"name" : "netrc",
"kind" : "enum member",
"line" : 847}
,
{
"name" : "followlocation",
"kind" : "enum member",
"line" : 848}
,
{
"name" : "transfertext",
"kind" : "enum member",
"line" : 849}
,
{
"name" : "put",
"kind" : "enum member",
"line" : 850}
,
{
"name" : "progressfunction",
"kind" : "enum member",
"line" : 856}
,
{
"name" : "progressdata",
"kind" : "enum member",
"line" : 858}
,
{
"name" : "autoreferer",
"kind" : "enum member",
"line" : 860}
,
{
"name" : "proxyport",
"kind" : "enum member",
"line" : 863}
,
{
"name" : "postfieldsize",
"kind" : "enum member",
"line" : 865}
,
{
"name" : "httpproxytunnel",
"kind" : "enum member",
"line" : 867}
,
{
"name" : "intrface",
"kind" : "enum member",
"line" : 869}
,
{
"name" : "krblevel",
"kind" : "enum member",
"line" : 873}
,
{
"name" : "ssl_verifypeer",
"kind" : "enum member",
"line" : 875}
,
{
"name" : "cainfo",
"kind" : "enum member",
"line" : 878}
,
{
"name" : "maxredirs",
"kind" : "enum member",
"line" : 883}
,
{
"name" : "filetime",
"kind" : "enum member",
"line" : 886}
,
{
"name" : "telnetoptions",
"kind" : "enum member",
"line" : 888}
,
{
"name" : "maxconnects",
"kind" : "enum member",
"line" : 890}
,
{
"name" : "closepolicy",
"kind" : "enum member",
"line" : 893}
,
{
"name" : "fresh_connect",
"kind" : "enum member",
"line" : 899}
,
{
"name" : "forbid_reuse",
"kind" : "enum member",
"line" : 903}
,
{
"name" : "random_file",
"kind" : "enum member",
"line" : 906}
,
{
"name" : "egdsocket",
"kind" : "enum member",
"line" : 908}
,
{
"name" : "connecttimeout",
"kind" : "enum member",
"line" : 912}
,
{
"name" : "headerfunction",
"kind" : "enum member",
"line" : 915}
,
{
"name" : "httpget",
"kind" : "enum member",
"line" : 919}
,
{
"name" : "ssl_verifyhost",
"kind" : "enum member",
"line" : 923}
,
{
"name" : "cookiejar",
"kind" : "enum member",
"line" : 926}
,
{
"name" : "ssl_cipher_list",
"kind" : "enum member",
"line" : 928}
,
{
"name" : "http_version",
"kind" : "enum member",
"line" : 931}
,
{
"name" : "ftp_use_epsv",
"kind" : "enum member",
"line" : 935}
,
{
"name" : "sslcerttype",
"kind" : "enum member",
"line" : 937}
,
{
"name" : "sslkey",
"kind" : "enum member",
"line" : 939}
,
{
"name" : "sslkeytype",
"kind" : "enum member",
"line" : 941}
,
{
"name" : "sslengine",
"kind" : "enum member",
"line" : 943}
,
{
"name" : "sslengine_default",
"kind" : "enum member",
"line" : 947}
,
{
"name" : "dns_use_global_cache",
"kind" : "enum member",
"line" : 949}
,
{
"name" : "dns_cache_timeout",
"kind" : "enum member",
"line" : 951}
,
{
"name" : "prequote",
"kind" : "enum member",
"line" : 953}
,
{
"name" : "debugfunction",
"kind" : "enum member",
"line" : 955}
,
{
"name" : "debugdata",
"kind" : "enum member",
"line" : 957}
,
{
"name" : "cookiesession",
"kind" : "enum member",
"line" : 959}
,
{
"name" : "capath",
"kind" : "enum member",
"line" : 962}
,
{
"name" : "buffersize",
"kind" : "enum member",
"line" : 964}
,
{
"name" : "nosignal",
"kind" : "enum member",
"line" : 968}
,
{
"name" : "share",
"kind" : "enum member",
"line" : 970}
,
{
"name" : "proxytype",
"kind" : "enum member",
"line" : 973}
,
{
"name" : "encoding",
"kind" : "enum member",
"line" : 976}
,
{
"name" : "private_opt",
"kind" : "enum member",
"line" : 978}
,
{
"name" : "http200aliases",
"kind" : "enum member",
"line" : 980}
,
{
"name" : "unrestricted_auth",
"kind" : "enum member",
"line" : 984}
,
{
"name" : "ftp_use_eprt",
"kind" : "enum member",
"line" : 988}
,
{
"name" : "httpauth",
"kind" : "enum member",
"line" : 992}
,
{
"name" : "ssl_ctx_function",
"kind" : "enum member",
"line" : 996}
,
{
"name" : "ssl_ctx_data",
"kind" : "enum member",
"line" : 999}
,
{
"name" : "ftp_create_missing_dirs",
"kind" : "enum member",
"line" : 1004}
,
{
"name" : "proxyauth",
"kind" : "enum member",
"line" : 1008}
,
{
"name" : "ftp_response_timeout",
"kind" : "enum member",
"line" : 1013}
,
{
"name" : "ipresolve",
"kind" : "enum member",
"line" : 1017}
,
{
"name" : "maxfilesize",
"kind" : "enum member",
"line" : 1023}
,
{
"name" : "infilesize_large",
"kind" : "enum member",
"line" : 1027}
,
{
"name" : "resume_from_large",
"kind" : "enum member",
"line" : 1031}
,
{
"name" : "maxfilesize_large",
"kind" : "enum member",
"line" : 1035}
,
{
"name" : "netrc_file",
"kind" : "enum member",
"line" : 1040}
,
{
"name" : "use_ssl",
"kind" : "enum member",
"line" : 1046}
,
{
"name" : "postfieldsize_large",
"kind" : "enum member",
"line" : 1048}
,
{
"name" : "tcp_nodelay",
"kind" : "enum member",
"line" : 1050}
,
{
"name" : "ftpsslauth",
"kind" : "enum member",
"line" : 1069}
,
{
"name" : "ioctlfunction",
"kind" : "enum member",
"line" : 1070}
,
{
"name" : "ioctldata",
"kind" : "enum member",
"line" : 1071}
,
{
"name" : "ftp_account",
"kind" : "enum member",
"line" : 1077}
,
{
"name" : "cookielist",
"kind" : "enum member",
"line" : 1079}
,
{
"name" : "ignore_content_length",
"kind" : "enum member",
"line" : 1081}
,
{
"name" : "ftp_skip_pasv_ip",
"kind" : "enum member",
"line" : 1086}
,
{
"name" : "ftp_filemethod",
"kind" : "enum member",
"line" : 1089}
,
{
"name" : "localport",
"kind" : "enum member",
"line" : 1091}
,
{
"name" : "localportrange",
"kind" : "enum member",
"line" : 1095}
,
{
"name" : "connect_only",
"kind" : "enum member",
"line" : 1098}
,
{
"name" : "conv_from_network_function",
"kind" : "enum member",
"line" : 1101}
,
{
"name" : "conv_to_network_function",
"kind" : "enum member",
"line" : 1104}
,
{
"name" : "conv_from_utf8_function",
"kind" : "enum member",
"line" : 1108}
,
{
"name" : "max_send_speed_large",
"kind" : "enum member",
"line" : 1111}
,
{
"name" : "max_recv_speed_large",
"kind" : "enum member",
"line" : 1112}
,
{
"name" : "ftp_alternative_to_user",
"kind" : "enum member",
"line" : 1114}
,
{
"name" : "sockoptfunction",
"kind" : "enum member",
"line" : 1116}
,
{
"name" : "sockoptdata",
"kind" : "enum member",
"line" : 1117}
,
{
"name" : "ssl_sessionid_cache",
"kind" : "enum member",
"line" : 1120}
,
{
"name" : "ssh_auth_types",
"kind" : "enum member",
"line" : 1122}
,
{
"name" : "ssh_public_keyfile",
"kind" : "enum member",
"line" : 1124}
,
{
"name" : "ssh_private_keyfile",
"kind" : "enum member",
"line" : 1125}
,
{
"name" : "ftp_ssl_ccc",
"kind" : "enum member",
"line" : 1127}
,
{
"name" : "timeout_ms",
"kind" : "enum member",
"line" : 1129}
,
{
"name" : "connecttimeout_ms",
"kind" : "enum member",
"line" : 1130}
,
{
"name" : "http_transfer_decoding",
"kind" : "enum member",
"line" : 1133}
,
{
"name" : "http_content_decoding",
"kind" : "enum member",
"line" : 1134}
,
{
"name" : "new_file_perms",
"kind" : "enum member",
"line" : 1137}
,
{
"name" : "new_directory_perms",
"kind" : "enum member",
"line" : 1138}
,
{
"name" : "postredir",
"kind" : "enum member",
"line" : 1141}
,
{
"name" : "ssh_host_public_key_md5",
"kind" : "enum member",
"line" : 1143}
,
{
"name" : "opensocketfunction",
"kind" : "enum member",
"line" : 1148}
,
{
"name" : "opensocketdata",
"kind" : "enum member",
"line" : 1149}
,
{
"name" : "copypostfields",
"kind" : "enum member",
"line" : 1151}
,
{
"name" : "proxy_transfer_mode",
"kind" : "enum member",
"line" : 1153}
,
{
"name" : "seekfunction",
"kind" : "enum member",
"line" : 1155}
,
{
"name" : "seekdata",
"kind" : "enum member",
"line" : 1156}
,
{
"name" : "crlfile",
"kind" : "enum member",
"line" : 1158}
,
{
"name" : "issuercert",
"kind" : "enum member",
"line" : 1160}
,
{
"name" : "address_scope",
"kind" : "enum member",
"line" : 1162}
,
{
"name" : "certinfo",
"kind" : "enum member",
"line" : 1166}
,
{
"name" : "username",
"kind" : "enum member",
"line" : 1168}
,
{
"name" : "password",
"kind" : "enum member",
"line" : 1169}
,
{
"name" : "proxyusername",
"kind" : "enum member",
"line" : 1171}
,
{
"name" : "proxypassword",
"kind" : "enum member",
"line" : 1172}
,
{
"name" : "noproxy",
"kind" : "enum member",
"line" : 1180}
,
{
"name" : "tftp_blksize",
"kind" : "enum member",
"line" : 1182}
,
{
"name" : "socks5_gssapi_service",
"kind" : "enum member",
"line" : 1184}
,
{
"name" : "socks5_gssapi_nec",
"kind" : "enum member",
"line" : 1186}
,
{
"name" : "protocols",
"kind" : "enum member",
"line" : 1191}
,
{
"name" : "redir_protocols",
"kind" : "enum member",
"line" : 1196}
,
{
"name" : "ssh_knownhosts",
"kind" : "enum member",
"line" : 1198}
,
{
"name" : "ssh_keyfunction",
"kind" : "enum member",
"line" : 1201}
,
{
"name" : "ssh_keydata",
"kind" : "enum member",
"line" : 1203}
,
{
"name" : "mail_from",
"kind" : "enum member",
"line" : 1205}
,
{
"name" : "mail_rcpt",
"kind" : "enum member",
"line" : 1207}
,
{
"name" : "ftp_use_pret",
"kind" : "enum member",
"line" : 1209}
,
{
"name" : "rtsp_request",
"kind" : "enum member",
"line" : 1211}
,
{
"name" : "rtsp_session_id",
"kind" : "enum member",
"line" : 1213}
,
{
"name" : "rtsp_stream_uri",
"kind" : "enum member",
"line" : 1215}
,
{
"name" : "rtsp_transport",
"kind" : "enum member",
"line" : 1217}
,
{
"name" : "rtsp_client_cseq",
"kind" : "enum member",
"line" : 1219}
,
{
"name" : "rtsp_server_cseq",
"kind" : "enum member",
"line" : 1221}
,
{
"name" : "interleavedata",
"kind" : "enum member",
"line" : 1223}
,
{
"name" : "interleavefunction",
"kind" : "enum member",
"line" : 1225}
,
{
"name" : "wildcardmatch",
"kind" : "enum member",
"line" : 1227}
,
{
"name" : "chunk_bgn_function",
"kind" : "enum member",
"line" : 1230}
,
{
"name" : "chunk_end_function",
"kind" : "enum member",
"line" : 1233}
,
{
"name" : "fnmatch_function",
"kind" : "enum member",
"line" : 1235}
,
{
"name" : "chunk_data",
"kind" : "enum member",
"line" : 1237}
,
{
"name" : "fnmatch_data",
"kind" : "enum member",
"line" : 1239}
,
{
"name" : "resolve",
"kind" : "enum member",
"line" : 1241}
,
{
"name" : "tlsauth_username",
"kind" : "enum member",
"line" : 1243}
,
{
"name" : "tlsauth_password",
"kind" : "enum member",
"line" : 1245}
,
{
"name" : "tlsauth_type",
"kind" : "enum member",
"line" : 1247}
,
{
"name" : "lastentry",
"kind" : "enum member",
"line" : 1249}
]
}
,
{
"name" : "CURLoption",
"kind" : "alias",
"type" : "int",
"line" : 1252}
,
{
"name" : "CURLOPT_SERVER_RESPONSE_TIMEOUT",
"kind" : "variable",
"type" : "CurlOption",
"line" : 1254}
,
{
"name" : "CurlIpResolve",
"kind" : "enum",
"line" : 1259,
"base" : "int",
"members" : [
{
"name" : "whatever",
"kind" : "enum member",
"line" : 1260}
,
{
"name" : "v4",
"kind" : "enum member",
"line" : 1261}
,
{
"name" : "v6",
"kind" : "enum member",
"line" : 1262}
]
}
,
{
"name" : "CURLOPT_WRITEDATA",
"kind" : "variable",
"type" : "CurlOption",
"line" : 1266}
,
{
"name" : "CURLOPT_READDATA",
"kind" : "variable",
"type" : "CurlOption",
"line" : 1268}
,
{
"name" : "CURLOPT_HEADERDATA",
"kind" : "variable",
"type" : "CurlOption",
"line" : 1270}
,
{
"name" : "CURLOPT_RTSPHEADER",
"kind" : "variable",
"type" : "CurlOption",
"line" : 1272}
,
{
"name" : "CurlHttpVersion",
"kind" : "enum",
"line" : 1275,
"base" : "int",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 1276}
,
{
"name" : "v1_0",
"kind" : "enum member",
"line" : 1279}
,
{
"name" : "v1_1",
"kind" : "enum member",
"line" : 1280}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1281}
]
}
,
{
"name" : "CurlRtspReq",
"kind" : "enum",
"line" : 1287,
"base" : "int",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 1288}
,
{
"name" : "options",
"kind" : "enum member",
"line" : 1289}
,
{
"name" : "describe",
"kind" : "enum member",
"line" : 1290}
,
{
"name" : "announce",
"kind" : "enum member",
"line" : 1291}
,
{
"name" : "setup",
"kind" : "enum member",
"line" : 1292}
,
{
"name" : "play",
"kind" : "enum member",
"line" : 1293}
,
{
"name" : "pause",
"kind" : "enum member",
"line" : 1294}
,
{
"name" : "teardown",
"kind" : "enum member",
"line" : 1295}
,
{
"name" : "get_parameter",
"kind" : "enum member",
"line" : 1296}
,
{
"name" : "set_parameter",
"kind" : "enum member",
"line" : 1297}
,
{
"name" : "record",
"kind" : "enum member",
"line" : 1298}
,
{
"name" : "receive",
"kind" : "enum member",
"line" : 1299}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1300}
]
}
,
{
"name" : "CurlNetRcOption",
"kind" : "enum",
"line" : 1304,
"base" : "int",
"members" : [
{
"name" : "ignored",
"kind" : "enum member",
"line" : 1305}
,
{
"name" : "optional",
"kind" : "enum member",
"line" : 1306}
,
{
"name" : "required",
"kind" : "enum member",
"line" : 1307}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1310}
]
}
,
{
"name" : "CurlSslVersion",
"kind" : "enum",
"line" : 1314,
"base" : "int",
"members" : [
{
"name" : "default_version",
"kind" : "enum member",
"line" : 1315}
,
{
"name" : "tlsv1",
"kind" : "enum member",
"line" : 1316}
,
{
"name" : "sslv2",
"kind" : "enum member",
"line" : 1317}
,
{
"name" : "sslv3",
"kind" : "enum member",
"line" : 1318}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1319}
]
}
,
{
"name" : "CurlTlsAuth",
"kind" : "enum",
"line" : 1323,
"base" : "int",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 1324}
,
{
"name" : "srp",
"kind" : "enum member",
"line" : 1325}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1326}
]
}
,
{
"name" : "CurlRedir",
"kind" : "enum",
"line" : 1332,
"base" : "int",
"members" : [
{
"name" : "get_all",
"kind" : "enum member",
"line" : 1333}
,
{
"name" : "post_301",
"kind" : "enum member",
"line" : 1334}
,
{
"name" : "post_302",
"kind" : "enum member",
"line" : 1335}
,
{
"name" : "post_all",
"kind" : "enum member",
"line" : 1337}
]
}
,
{
"name" : "CurlTimeCond",
"kind" : "enum",
"line" : 1340,
"base" : "int",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 1341}
,
{
"name" : "ifmodsince",
"kind" : "enum member",
"line" : 1342}
,
{
"name" : "ifunmodsince",
"kind" : "enum member",
"line" : 1343}
,
{
"name" : "lastmod",
"kind" : "enum member",
"line" : 1344}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1345}
]
}
,
{
"name" : "curl_TimeCond",
"kind" : "alias",
"type" : "int",
"line" : 1348}
,
{
"name" : "curl_strequal",
"kind" : "function",
"type" : "intC (char* s1, char* s2)",
"line" : 1354}
,
{
"name" : "curl_strnequal",
"kind" : "function",
"type" : "intC (char* s1, char* s2, ulong n)",
"line" : 1356}
,
{
"name" : "CurlForm",
"kind" : "enum",
"line" : 1358,
"base" : "int",
"members" : [
{
"name" : "nothing",
"kind" : "enum member",
"line" : 1359}
,
{
"name" : "copyname",
"kind" : "enum member",
"line" : 1360}
,
{
"name" : "ptrname",
"kind" : "enum member",
"line" : 1361}
,
{
"name" : "namelength",
"kind" : "enum member",
"line" : 1362}
,
{
"name" : "copycontents",
"kind" : "enum member",
"line" : 1363}
,
{
"name" : "ptrcontents",
"kind" : "enum member",
"line" : 1364}
,
{
"name" : "contentslength",
"kind" : "enum member",
"line" : 1365}
,
{
"name" : "filecontent",
"kind" : "enum member",
"line" : 1366}
,
{
"name" : "array",
"kind" : "enum member",
"line" : 1367}
,
{
"name" : "obsolete",
"kind" : "enum member",
"line" : 1368}
,
{
"name" : "file",
"kind" : "enum member",
"line" : 1369}
,
{
"name" : "buffer",
"kind" : "enum member",
"line" : 1370}
,
{
"name" : "bufferptr",
"kind" : "enum member",
"line" : 1371}
,
{
"name" : "bufferlength",
"kind" : "enum member",
"line" : 1372}
,
{
"name" : "contenttype",
"kind" : "enum member",
"line" : 1373}
,
{
"name" : "contentheader",
"kind" : "enum member",
"line" : 1374}
,
{
"name" : "filename",
"kind" : "enum member",
"line" : 1375}
,
{
"name" : "end",
"kind" : "enum member",
"line" : 1376}
,
{
"name" : "obsolete2",
"kind" : "enum member",
"line" : 1377}
,
{
"name" : "stream",
"kind" : "enum member",
"line" : 1378}
,
{
"name" : "lastentry",
"kind" : "enum member",
"line" : 1379}
]
}
,
{
"name" : "CURLformoption",
"kind" : "alias",
"type" : "int",
"line" : 1381}
,
{
"name" : "curl_forms",
"kind" : "struct",
"line" : 1386,
"members" : [
{
"name" : "option",
"kind" : "variable",
"type" : "int",
"line" : 1387}
,
{
"name" : "value",
"kind" : "variable",
"type" : "char*",
"line" : 1388}
]
}
,
{
"name" : "CurlFormAdd",
"kind" : "enum",
"line" : 1407,
"base" : "int",
"members" : [
{
"name" : "ok",
"kind" : "enum member",
"line" : 1408}
,
{
"name" : "memory",
"kind" : "enum member",
"line" : 1409}
,
{
"name" : "option_twice",
"kind" : "enum member",
"line" : 1410}
,
{
"name" : "null_ptr",
"kind" : "enum member",
"line" : 1411}
,
{
"name" : "unknown_option",
"kind" : "enum member",
"line" : 1412}
,
{
"name" : "incomplete",
"kind" : "enum member",
"line" : 1413}
,
{
"name" : "illegal_array",
"kind" : "enum member",
"line" : 1414}
,
{
"name" : "disabled",
"kind" : "enum member",
"line" : 1415}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1416}
]
}
,
{
"name" : "CURLFORMcode",
"kind" : "alias",
"type" : "int",
"line" : 1419}
,
{
"name" : "curl_formadd",
"kind" : "function",
"type" : "intC (curl_httppost** httppost, curl_httppost** last_post,...)",
"line" : 1432}
,
{
"name" : "curl_formget_callback",
"kind" : "alias",
"type" : "ulong C function(void* arg, char* buf, ulong len)",
"line" : 1442}
,
{
"name" : "curl_formget",
"kind" : "function",
"type" : "intC (curl_httppost* form, void* arg, ulong C function(void* arg, char* buf, ulong len) append)",
"line" : 1454}
,
{
"name" : "curl_formfree",
"kind" : "function",
"type" : "voidC (curl_httppost* form)",
"line" : 1462}
,
{
"name" : "curl_getenv",
"kind" : "function",
"type" : "char*C (char* variable)",
"line" : 1472}
,
{
"name" : "curl_version",
"kind" : "function",
"type" : "char*C ()",
"line" : 1481}
,
{
"name" : "curl_easy_escape",
"kind" : "function",
"type" : "char*C (void* handle, char* string, int length)",
"line" : 1492}
,
{
"name" : "curl_escape",
"kind" : "function",
"type" : "char*C (char* string, int length)",
"line" : 1495}
,
{
"name" : "curl_easy_unescape",
"kind" : "function",
"type" : "char*C (void* handle, char* string, int length, int* outlength)",
"line" : 1509}
,
{
"name" : "curl_unescape",
"kind" : "function",
"type" : "char*C (char* string, int length)",
"line" : 1512}
,
{
"name" : "curl_free",
"kind" : "function",
"type" : "voidC (void* p)",
"line" : 1522}
,
{
"name" : "curl_global_init",
"kind" : "function",
"type" : "intC (long flags)",
"line" : 1534}
,
{
"name" : "curl_global_init_mem",
"kind" : "function",
"type" : "intC (long flags, void* function(ulong size) m, void function(void*) f, void* function(void* ptr, ulong size) r, char* function(char* str) s, void* function(ulong nmemb, ulong size) c)",
"line" : 1549}
,
{
"name" : "curl_global_cleanup",
"kind" : "function",
"type" : "voidC ()",
"line" : 1559}
,
{
"name" : "curl_slist",
"kind" : "struct",
"line" : 1566,
"members" : [
{
"name" : "data",
"kind" : "variable",
"type" : "char*",
"line" : 1567}
,
{
"name" : "next",
"kind" : "variable",
"type" : "curl_slist*",
"line" : 1568}
]
}
,
{
"name" : "curl_slist_append",
"kind" : "function",
"type" : "curl_slist*C (curl_slist*, char*)",
"line" : 1579}
,
{
"name" : "curl_slist_free_all",
"kind" : "function",
"type" : "voidC (curl_slist*)",
"line" : 1588}
,
{
"name" : "curl_getdate",
"kind" : "function",
"type" : "longC (char* p, long* unused)",
"line" : 1599}
,
{
"name" : "curl_certinfo",
"kind" : "struct",
"line" : 1604,
"members" : [
{
"name" : "num_of_certs",
"kind" : "variable",
"type" : "int",
"line" : 1605}
,
{
"name" : "certinfo",
"kind" : "variable",
"type" : "curl_slist**",
"line" : 1606}
]
}
,
{
"name" : "CURLINFO_STRING",
"kind" : "variable",
"type" : "int",
"line" : 1614}
,
{
"name" : "CURLINFO_LONG",
"kind" : "variable",
"type" : "int",
"line" : 1616}
,
{
"name" : "CURLINFO_DOUBLE",
"kind" : "variable",
"type" : "int",
"line" : 1618}
,
{
"name" : "CURLINFO_SLIST",
"kind" : "variable",
"type" : "int",
"line" : 1620}
,
{
"name" : "CURLINFO_MASK",
"kind" : "variable",
"type" : "int",
"line" : 1622}
,
{
"name" : "CURLINFO_TYPEMASK",
"kind" : "variable",
"type" : "int",
"line" : 1625}
,
{
"name" : "CurlInfo",
"kind" : "enum",
"line" : 1628,
"base" : "int",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 1629}
,
{
"name" : "effective_url",
"kind" : "enum member",
"line" : 1630}
,
{
"name" : "response_code",
"kind" : "enum member",
"line" : 1631}
,
{
"name" : "total_time",
"kind" : "enum member",
"line" : 1632}
,
{
"name" : "namelookup_time",
"kind" : "enum member",
"line" : 1633}
,
{
"name" : "connect_time",
"kind" : "enum member",
"line" : 1634}
,
{
"name" : "pretransfer_time",
"kind" : "enum member",
"line" : 1635}
,
{
"name" : "size_upload",
"kind" : "enum member",
"line" : 1636}
,
{
"name" : "size_download",
"kind" : "enum member",
"line" : 1637}
,
{
"name" : "speed_download",
"kind" : "enum member",
"line" : 1638}
,
{
"name" : "speed_upload",
"kind" : "enum member",
"line" : 1639}
,
{
"name" : "header_size",
"kind" : "enum member",
"line" : 1640}
,
{
"name" : "request_size",
"kind" : "enum member",
"line" : 1641}
,
{
"name" : "ssl_verifyresult",
"kind" : "enum member",
"line" : 1642}
,
{
"name" : "filetime",
"kind" : "enum member",
"line" : 1643}
,
{
"name" : "content_length_download",
"kind" : "enum member",
"line" : 1644}
,
{
"name" : "content_length_upload",
"kind" : "enum member",
"line" : 1645}
,
{
"name" : "starttransfer_time",
"kind" : "enum member",
"line" : 1646}
,
{
"name" : "content_type",
"kind" : "enum member",
"line" : 1647}
,
{
"name" : "redirect_time",
"kind" : "enum member",
"line" : 1648}
,
{
"name" : "redirect_count",
"kind" : "enum member",
"line" : 1649}
,
{
"name" : "private_info",
"kind" : "enum member",
"line" : 1650}
,
{
"name" : "http_connectcode",
"kind" : "enum member",
"line" : 1651}
,
{
"name" : "httpauth_avail",
"kind" : "enum member",
"line" : 1652}
,
{
"name" : "proxyauth_avail",
"kind" : "enum member",
"line" : 1653}
,
{
"name" : "os_errno",
"kind" : "enum member",
"line" : 1654}
,
{
"name" : "num_connects",
"kind" : "enum member",
"line" : 1655}
,
{
"name" : "ssl_engines",
"kind" : "enum member",
"line" : 1656}
,
{
"name" : "cookielist",
"kind" : "enum member",
"line" : 1657}
,
{
"name" : "lastsocket",
"kind" : "enum member",
"line" : 1658}
,
{
"name" : "ftp_entry_path",
"kind" : "enum member",
"line" : 1659}
,
{
"name" : "redirect_url",
"kind" : "enum member",
"line" : 1660}
,
{
"name" : "primary_ip",
"kind" : "enum member",
"line" : 1661}
,
{
"name" : "appconnect_time",
"kind" : "enum member",
"line" : 1662}
,
{
"name" : "certinfo",
"kind" : "enum member",
"line" : 1663}
,
{
"name" : "condition_unmet",
"kind" : "enum member",
"line" : 1664}
,
{
"name" : "rtsp_session_id",
"kind" : "enum member",
"line" : 1665}
,
{
"name" : "rtsp_client_cseq",
"kind" : "enum member",
"line" : 1666}
,
{
"name" : "rtsp_server_cseq",
"kind" : "enum member",
"line" : 1667}
,
{
"name" : "rtsp_cseq_recv",
"kind" : "enum member",
"line" : 1668}
,
{
"name" : "primary_port",
"kind" : "enum member",
"line" : 1669}
,
{
"name" : "local_ip",
"kind" : "enum member",
"line" : 1670}
,
{
"name" : "local_port",
"kind" : "enum member",
"line" : 1671}
,
{
"name" : "lastone",
"kind" : "enum member",
"line" : 1673}
]
}
,
{
"name" : "CURLINFO",
"kind" : "alias",
"type" : "int",
"line" : 1676}
,
{
"name" : "CURLINFO_HTTP_CODE",
"kind" : "variable",
"type" : "CurlInfo",
"line" : 1680}
,
{
"name" : "CurlClosePolicy",
"kind" : "enum",
"line" : 1683,
"base" : "int",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 1684}
,
{
"name" : "oldest",
"kind" : "enum member",
"line" : 1685}
,
{
"name" : "least_recently_used",
"kind" : "enum member",
"line" : 1686}
,
{
"name" : "least_traffic",
"kind" : "enum member",
"line" : 1687}
,
{
"name" : "slowest",
"kind" : "enum member",
"line" : 1688}
,
{
"name" : "callback",
"kind" : "enum member",
"line" : 1689}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1690}
]
}
,
{
"name" : "curl_closepolicy",
"kind" : "alias",
"type" : "int",
"line" : 1693}
,
{
"name" : "CurlGlobal",
"kind" : "enum",
"line" : 1696,
"base" : "int",
"members" : [
{
"name" : "ssl",
"kind" : "enum member",
"line" : 1697}
,
{
"name" : "win32",
"kind" : "enum member",
"line" : 1698}
,
{
"name" : "all",
"kind" : "enum member",
"line" : 1700}
,
{
"name" : "nothing",
"kind" : "enum member",
"line" : 1701}
,
{
"name" : "default_",
"kind" : "enum member",
"line" : 1702}
]
}
,
{
"name" : "CurlLockData",
"kind" : "enum",
"line" : 1710,
"base" : "int",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 1711}
,
{
"name" : "share",
"kind" : "enum member",
"line" : 1716}
,
{
"name" : "cookie",
"kind" : "enum member",
"line" : 1717}
,
{
"name" : "dns",
"kind" : "enum member",
"line" : 1718}
,
{
"name" : "ssl_session",
"kind" : "enum member",
"line" : 1719}
,
{
"name" : "connect",
"kind" : "enum member",
"line" : 1720}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1721}
]
}
,
{
"name" : "curl_lock_data",
"kind" : "alias",
"type" : "int",
"line" : 1724}
,
{
"name" : "CurlLockAccess",
"kind" : "enum",
"line" : 1727,
"base" : "int",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 1728}
,
{
"name" : "shared_access",
"kind" : "enum member",
"line" : 1729}
,
{
"name" : "single",
"kind" : "enum member",
"line" : 1730}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1731}
]
}
,
{
"name" : "curl_lock_access",
"kind" : "alias",
"type" : "int",
"line" : 1734}
,
{
"name" : "curl_lock_function",
"kind" : "alias",
"type" : "void function(void* handle, int data, int locktype, void* userptr)",
"line" : 1737}
,
{
"name" : "curl_unlock_function",
"kind" : "alias",
"type" : "void function(void* handle, int data, void* userptr)",
"line" : 1739}
,
{
"name" : "CURLSH",
"kind" : "alias",
"type" : "void",
"line" : 1742}
,
{
"name" : "CurlShError",
"kind" : "enum",
"line" : 1745,
"base" : "int",
"members" : [
{
"name" : "ok",
"kind" : "enum member",
"line" : 1746}
,
{
"name" : "bad_option",
"kind" : "enum member",
"line" : 1747}
,
{
"name" : "in_use",
"kind" : "enum member",
"line" : 1748}
,
{
"name" : "invalid",
"kind" : "enum member",
"line" : 1749}
,
{
"name" : "nomem",
"kind" : "enum member",
"line" : 1750}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1751}
]
}
,
{
"name" : "CURLSHcode",
"kind" : "alias",
"type" : "int",
"line" : 1754}
,
{
"name" : "CurlShOption",
"kind" : "enum",
"line" : 1758,
"base" : "int",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 1759}
,
{
"name" : "share",
"kind" : "enum member",
"line" : 1760}
,
{
"name" : "unshare",
"kind" : "enum member",
"line" : 1761}
,
{
"name" : "lockfunc",
"kind" : "enum member",
"line" : 1762}
,
{
"name" : "unlockfunc",
"kind" : "enum member",
"line" : 1763}
,
{
"name" : "userdata",
"kind" : "enum member",
"line" : 1764}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1766}
]
}
,
{
"name" : "CURLSHoption",
"kind" : "alias",
"type" : "int",
"line" : 1769}
,
{
"name" : "curl_share_init",
"kind" : "function",
"type" : "void*C ()",
"line" : 1773}
,
{
"name" : "curl_share_setopt",
"kind" : "function",
"type" : "intC (void*, int option,...)",
"line" : 1775}
,
{
"name" : "curl_share_cleanup",
"kind" : "function",
"type" : "intC (void*)",
"line" : 1777}
,
{
"name" : "CurlVer",
"kind" : "enum",
"line" : 1785,
"base" : "int",
"members" : [
{
"name" : "first",
"kind" : "enum member",
"line" : 1786}
,
{
"name" : "second",
"kind" : "enum member",
"line" : 1787}
,
{
"name" : "third",
"kind" : "enum member",
"line" : 1788}
,
{
"name" : "fourth",
"kind" : "enum member",
"line" : 1789}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 1790}
]
}
,
{
"name" : "CURLversion",
"kind" : "alias",
"type" : "int",
"line" : 1793}
,
{
"name" : "CURLVERSION_NOW",
"kind" : "variable",
"type" : "CurlVer",
"line" : 1800}
,
{
"name" : "_N28",
"kind" : "struct",
"line" : 1804,
"members" : [
{
"name" : "age",
"kind" : "variable",
"type" : "int",
"line" : 1805}
,
{
"name" : "version_",
"kind" : "variable",
"type" : "char*",
"line" : 1806}
,
{
"name" : "version_num",
"kind" : "variable",
"type" : "uint",
"line" : 1807}
,
{
"name" : "host",
"kind" : "variable",
"type" : "char*",
"line" : 1808}
,
{
"name" : "features",
"kind" : "variable",
"type" : "int",
"line" : 1809}
,
{
"name" : "ssl_version",
"kind" : "variable",
"type" : "char*",
"line" : 1810}
,
{
"name" : "ssl_version_num",
"kind" : "variable",
"type" : "long",
"line" : 1811}
,
{
"name" : "libz_version",
"kind" : "variable",
"type" : "char*",
"line" : 1812}
,
{
"name" : "protocols",
"kind" : "variable",
"type" : "char**",
"line" : 1814}
,
{
"name" : "ares",
"kind" : "variable",
"type" : "char*",
"line" : 1816}
,
{
"name" : "ares_num",
"kind" : "variable",
"type" : "int",
"line" : 1817}
,
{
"name" : "libidn",
"kind" : "variable",
"type" : "char*",
"line" : 1819}
,
{
"name" : "iconv_ver_num",
"kind" : "variable",
"type" : "int",
"line" : 1822}
,
{
"name" : "libssh_version",
"kind" : "variable",
"type" : "char*",
"line" : 1823}
]
}
,
{
"name" : "curl_version_info_data",
"kind" : "alias",
"line" : 1826}
,
{
"name" : "CurlVersion",
"kind" : "enum",
"line" : 1830,
"base" : "int",
"members" : [
{
"name" : "ipv6",
"kind" : "enum member",
"line" : 1831}
,
{
"name" : "kerberos4",
"kind" : "enum member",
"line" : 1832}
,
{
"name" : "ssl",
"kind" : "enum member",
"line" : 1833}
,
{
"name" : "libz",
"kind" : "enum member",
"line" : 1834}
,
{
"name" : "ntlm",
"kind" : "enum member",
"line" : 1835}
,
{
"name" : "gssnegotiate",
"kind" : "enum member",
"line" : 1836}
,
{
"name" : "dbg",
"kind" : "enum member",
"line" : 1837}
,
{
"name" : "asynchdns",
"kind" : "enum member",
"line" : 1838}
,
{
"name" : "spnego",
"kind" : "enum member",
"line" : 1839}
,
{
"name" : "largefile",
"kind" : "enum member",
"line" : 1840}
,
{
"name" : "idn",
"kind" : "enum member",
"line" : 1841}
,
{
"name" : "sspi",
"kind" : "enum member",
"line" : 1842}
,
{
"name" : "conv",
"kind" : "enum member",
"line" : 1843}
,
{
"name" : "curldebug",
"kind" : "enum member",
"line" : 1844}
,
{
"name" : "tlsauth_srp",
"kind" : "enum member",
"line" : 1845}
]
}
,
{
"name" : "curl_version_info",
"kind" : "function",
"type" : "_N28*C (int)",
"line" : 1857}
,
{
"name" : "curl_easy_strerror",
"kind" : "function",
"type" : "char*C (int)",
"line" : 1868}
,
{
"name" : "curl_share_strerror",
"kind" : "function",
"type" : "char*C (int)",
"line" : 1879}
,
{
"name" : "curl_easy_pause",
"kind" : "function",
"type" : "intC (void* handle, int bitmask)",
"line" : 1890}
,
{
"name" : "CurlPause",
"kind" : "enum",
"line" : 1895,
"base" : "int",
"members" : [
{
"name" : "recv",
"kind" : "enum member",
"line" : 1896}
,
{
"name" : "recv_cont",
"kind" : "enum member",
"line" : 1897}
,
{
"name" : "send",
"kind" : "enum member",
"line" : 1898}
,
{
"name" : "send_cont",
"kind" : "enum member",
"line" : 1899}
,
{
"name" : "all",
"kind" : "enum member",
"line" : 1901}
,
{
"name" : "cont",
"kind" : "enum member",
"line" : 1903}
]
}
,
{
"name" : "curl_easy_init",
"kind" : "function",
"type" : "void*C ()",
"line" : 1932}
,
{
"name" : "curl_easy_setopt",
"kind" : "function",
"type" : "intC (void* curl, int option,...)",
"line" : 1934}
,
{
"name" : "curl_easy_perform",
"kind" : "function",
"type" : "intC (void* curl)",
"line" : 1936}
,
{
"name" : "curl_easy_cleanup",
"kind" : "function",
"type" : "voidC (void* curl)",
"line" : 1938}
,
{
"name" : "curl_easy_getinfo",
"kind" : "function",
"type" : "intC (void* curl, int info,...)",
"line" : 1954}
,
{
"name" : "curl_easy_duphandle",
"kind" : "function",
"type" : "void*C (void* curl)",
"line" : 1969}
,
{
"name" : "curl_easy_reset",
"kind" : "function",
"type" : "voidC (void* curl)",
"line" : 1982}
,
{
"name" : "curl_easy_recv",
"kind" : "function",
"type" : "intC (void* curl, void* buffer, ulong buflen, ulong* n)",
"line" : 1992}
,
{
"name" : "curl_easy_send",
"kind" : "function",
"type" : "intC (void* curl, void* buffer, ulong buflen, ulong* n)",
"line" : 2002}
,
{
"name" : "CURLM",
"kind" : "alias",
"type" : "void",
"line" : 2037}
,
{
"name" : "CurlM",
"kind" : "enum",
"line" : 2040,
"base" : "int",
"members" : [
{
"name" : "call_multi_perform",
"kind" : "enum member",
"line" : 2041}
,
{
"name" : "ok",
"kind" : "enum member",
"line" : 2042}
,
{
"name" : "bad_handle",
"kind" : "enum member",
"line" : 2043}
,
{
"name" : "bad_easy_handle",
"kind" : "enum member",
"line" : 2044}
,
{
"name" : "out_of_memory",
"kind" : "enum member",
"line" : 2045}
,
{
"name" : "internal_error",
"kind" : "enum member",
"line" : 2046}
,
{
"name" : "bad_socket",
"kind" : "enum member",
"line" : 2047}
,
{
"name" : "unknown_option",
"kind" : "enum member",
"line" : 2048}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 2049}
]
}
,
{
"name" : "CURLMcode",
"kind" : "alias",
"type" : "int",
"line" : 2052}
,
{
"name" : "CURLM_CALL_MULTI_SOCKET",
"kind" : "variable",
"type" : "CurlM",
"line" : 2057}
,
{
"name" : "CurlMsg",
"kind" : "enum",
"line" : 2061,
"base" : "int",
"members" : [
{
"name" : "none",
"kind" : "enum member",
"line" : 2062}
,
{
"name" : "done",
"kind" : "enum member",
"line" : 2063}
,
{
"name" : "last",
"kind" : "enum member",
"line" : 2065}
]
}
,
{
"name" : "CURLMSG",
"kind" : "alias",
"type" : "int",
"line" : 2068}
,
{
"name" : "_N31",
"kind" : "union",
"line" : 2072,
"members" : [
{
"name" : "whatever",
"kind" : "variable",
"type" : "void*",
"line" : 2073}
,
{
"name" : "result",
"kind" : "variable",
"type" : "int",
"line" : 2074}
]
}
,
{
"name" : "CURLMsg",
"kind" : "struct",
"line" : 2079,
"members" : [
{
"name" : "msg",
"kind" : "variable",
"type" : "int",
"line" : 2080}
,
{
"name" : "easy_handle",
"kind" : "variable",
"type" : "void*",
"line" : 2081}
,
{
"name" : "data",
"kind" : "variable",
"type" : "_N31",
"line" : 2082}
]
}
,
{
"name" : "curl_multi_init",
"kind" : "function",
"type" : "void*C ()",
"line" : 2092}
,
{
"name" : "curl_multi_add_handle",
"kind" : "function",
"type" : "intC (void* multi_handle, void* curl_handle)",
"line" : 2101}
,
{
"name" : "curl_multi_remove_handle",
"kind" : "function",
"type" : "intC (void* multi_handle, void* curl_handle)",
"line" : 2110}
,
{
"name" : "fd_set",
"kind" : "alias",
"type" : "int",
"line" : 2123}
,
{
"name" : "curl_multi_fdset",
"kind" : "function",
"type" : "intC (void* multi_handle, int* read_fd_set, int* write_fd_set, int* exc_fd_set, int* max_fd)",
"line" : 2125}
,
{
"name" : "curl_multi_perform",
"kind" : "function",
"type" : "intC (void* multi_handle, int* running_handles)",
"line" : 2143}
,
{
"name" : "curl_multi_cleanup",
"kind" : "function",
"type" : "intC (void* multi_handle)",
"line" : 2155}
,
{
"name" : "curl_multi_info_read",
"kind" : "function",
"type" : "CURLMsg*C (void* multi_handle, int* msgs_in_queue)",
"line" : 2185}
,
{
"name" : "curl_multi_strerror",
"kind" : "function",
"type" : "char*C (int)",
"line" : 2196}
,
{
"name" : "CurlPoll",
"kind" : "enum",
"line" : 2207,
"base" : "int",
"members" : [
{
"name" : "none_",
"kind" : "enum member",
"line" : 2208}
,
{
"name" : "in_",
"kind" : "enum member",
"line" : 2209}
,
{
"name" : "out_",
"kind" : "enum member",
"line" : 2210}
,
{
"name" : "inout_",
"kind" : "enum member",
"line" : 2211}
,
{
"name" : "remove_",
"kind" : "enum member",
"line" : 2212}
]
}
,
{
"name" : "CURL_SOCKET_TIMEOUT",
"kind" : "alias",
"line" : 2216}
,
{
"name" : "CurlCSelect",
"kind" : "enum",
"line" : 2219,
"base" : "int",
"members" : [
{
"name" : "in_",
"kind" : "enum member",
"line" : 2220}
,
{
"name" : "out_",
"kind" : "enum member",
"line" : 2221}
,
{
"name" : "err_",
"kind" : "enum member",
"line" : 2222}
]
}
,
{
"name" : "curl_socket_callback",
"kind" : "alias",
"type" : "int C function(void* easy, socket_t s, int what, void* userp, void* socketp)",
"line" : 2231}
,
{
"name" : "curl_multi_timer_callback",
"kind" : "alias",
"type" : "int C function(void* multi, long timeout_ms, void* userp)",
"line" : 2249}
,
{
"name" : "curl_multi_socket",
"kind" : "function",
"type" : "intC (void* multi_handle, socket_t s, int* running_handles)",
"line" : 2251}
,
{
"name" : "curl_multi_socket_action",
"kind" : "function",
"type" : "intC (void* multi_handle, socket_t s, int ev_bitmask, int* running_handles)",
"line" : 2253}
,
{
"name" : "curl_multi_socket_all",
"kind" : "function",
"type" : "intC (void* multi_handle, int* running_handles)",
"line" : 2255}
,
{
"name" : "curl_multi_timeout",
"kind" : "function",
"type" : "intC (void* multi_handle, long* milliseconds)",
"line" : 2271}
,
{
"name" : "CurlMOption",
"kind" : "enum",
"line" : 2274,
"base" : "int",
"members" : [
{
"name" : "socketfunction",
"kind" : "enum member",
"line" : 2275}
,
{
"name" : "socketdata",
"kind" : "enum member",
"line" : 2276}
,
{
"name" : "pipelining",
"kind" : "enum member",
"line" : 2277}
,
{
"name" : "timerfunction",
"kind" : "enum member",
"line" : 2278}
,
{
"name" : "timerdata",
"kind" : "enum member",
"line" : 2279}
,
{
"name" : "maxconnects",
"kind" : "enum member",
"line" : 2280}
,
{
"name" : "lastentry",
"kind" : "enum member",
"line" : 2281}
]
}
,
{
"name" : "CURLMoption",
"kind" : "alias",
"type" : "int",
"line" : 2284}
,
{
"name" : "curl_multi_setopt",
"kind" : "function",
"type" : "intC (void* multi_handle, int option,...)",
"line" : 2294}
,
{
"name" : "curl_multi_assign",
"kind" : "function",
"type" : "intC (void* multi_handle, socket_t sockfd, void* sockp)",
"line" : 2306}
]
}
,
{
"name" : "sqlite3_bindings",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/etc\/c\/sqlite3.d",
"members" : [
{
"name" : "SQLITE_VERSION",
"kind" : "variable",
"type" : "string",
"line" : 40}
,
{
"name" : "SQLITE_VERSION_NUMBER",
"kind" : "variable",
"type" : "int",
"line" : 42}
,
{
"name" : "SQLITE_SOURCE_ID",
"kind" : "variable",
"type" : "string",
"line" : 44}
,
{
"name" : "sqlite3_version",
"kind" : "variable",
"type" : "const(char*)",
"line" : 49}
,
{
"name" : "sqlite3_libversion",
"kind" : "function",
"type" : "const(char*)C ()",
"line" : 51}
,
{
"name" : "sqlite3_sourceid",
"kind" : "function",
"type" : "const(char*)C ()",
"line" : 53}
,
{
"name" : "sqlite3_libversion_number",
"kind" : "function",
"type" : "intC ()",
"line" : 55}
,
{
"name" : "sqlite3_compileoption_used",
"kind" : "function",
"type" : "intC (const const(char*) zOptName)",
"line" : 60}
,
{
"name" : "sqlite3_compileoption_get",
"kind" : "function",
"type" : "const(char*)C (int N)",
"line" : 62}
,
{
"name" : "sqlite3_threadsafe",
"kind" : "function",
"type" : "intC ()",
"line" : 67}
,
{
"name" : "sqlite3",
"kind" : "struct",
"line" : 72}
,
{
"name" : "sqlite3_int64",
"kind" : "alias",
"type" : "long",
"line" : 75}
,
{
"name" : "sqlite3_uint64",
"kind" : "alias",
"type" : "ulong",
"line" : 77}
,
{
"name" : "sqlite3_close",
"kind" : "function",
"type" : "intC (sqlite3*)",
"line" : 83}
,
{
"name" : "sqlite3_callback",
"kind" : "alias",
"type" : "int C function(void*, int, char**, char**)",
"line" : 90}
,
{
"name" : "sqlite3_exec",
"kind" : "function",
"type" : "intC (sqlite3*, const const(char*) sql, int C function(void*, int, char**, char**) callback, void*, char** errmsg)",
"line" : 95}
,
{
"name" : "SQLITE_OK",
"kind" : "variable",
"type" : "int",
"line" : 107}
,
{
"name" : "SQLITE_ERROR",
"kind" : "variable",
"type" : "int",
"line" : 111}
,
{
"name" : "SQLITE_INTERNAL",
"kind" : "variable",
"type" : "int",
"line" : 112}
,
{
"name" : "SQLITE_PERM",
"kind" : "variable",
"type" : "int",
"line" : 113}
,
{
"name" : "SQLITE_ABORT",
"kind" : "variable",
"type" : "int",
"line" : 114}
,
{
"name" : "SQLITE_BUSY",
"kind" : "variable",
"type" : "int",
"line" : 115}
,
{
"name" : "SQLITE_LOCKED",
"kind" : "variable",
"type" : "int",
"line" : 116}
,
{
"name" : "SQLITE_NOMEM",
"kind" : "variable",
"type" : "int",
"line" : 117}
,
{
"name" : "SQLITE_READONLY",
"kind" : "variable",
"type" : "int",
"line" : 118}
,
{
"name" : "SQLITE_INTERRUPT",
"kind" : "variable",
"type" : "int",
"line" : 119}
,
{
"name" : "SQLITE_IOERR",
"kind" : "variable",
"type" : "int",
"line" : 120}
,
{
"name" : "SQLITE_CORRUPT",
"kind" : "variable",
"type" : "int",
"line" : 121}
,
{
"name" : "SQLITE_NOTFOUND",
"kind" : "variable",
"type" : "int",
"line" : 122}
,
{
"name" : "SQLITE_FULL",
"kind" : "variable",
"type" : "int",
"line" : 123}
,
{
"name" : "SQLITE_CANTOPEN",
"kind" : "variable",
"type" : "int",
"line" : 124}
,
{
"name" : "SQLITE_PROTOCOL",
"kind" : "variable",
"type" : "int",
"line" : 125}
,
{
"name" : "SQLITE_EMPTY",
"kind" : "variable",
"type" : "int",
"line" : 126}
,
{
"name" : "SQLITE_SCHEMA",
"kind" : "variable",
"type" : "int",
"line" : 127}
,
{
"name" : "SQLITE_TOOBIG",
"kind" : "variable",
"type" : "int",
"line" : 128}
,
{
"name" : "SQLITE_CONSTRAINT",
"kind" : "variable",
"type" : "int",
"line" : 129}
,
{
"name" : "SQLITE_MISMATCH",
"kind" : "variable",
"type" : "int",
"line" : 130}
,
{
"name" : "SQLITE_MISUSE",
"kind" : "variable",
"type" : "int",
"line" : 131}
,
{
"name" : "SQLITE_NOLFS",
"kind" : "variable",
"type" : "int",
"line" : 132}
,
{
"name" : "SQLITE_AUTH",
"kind" : "variable",
"type" : "int",
"line" : 133}
,
{
"name" : "SQLITE_FORMAT",
"kind" : "variable",
"type" : "int",
"line" : 134}
,
{
"name" : "SQLITE_RANGE",
"kind" : "variable",
"type" : "int",
"line" : 135}
,
{
"name" : "SQLITE_NOTADB",
"kind" : "variable",
"type" : "int",
"line" : 136}
,
{
"name" : "SQLITE_ROW",
"kind" : "variable",
"type" : "int",
"line" : 137}
,
{
"name" : "SQLITE_DONE",
"kind" : "variable",
"type" : "int",
"line" : 138}
,
{
"name" : "SQLITE_IOERR_READ",
"kind" : "variable",
"type" : "int",
"line" : 145}
,
{
"name" : "SQLITE_IOERR_SHORT_READ",
"kind" : "variable",
"type" : "int",
"line" : 146}
,
{
"name" : "SQLITE_IOERR_WRITE",
"kind" : "variable",
"type" : "int",
"line" : 147}
,
{
"name" : "SQLITE_IOERR_FSYNC",
"kind" : "variable",
"type" : "int",
"line" : 148}
,
{
"name" : "SQLITE_IOERR_DIR_FSYNC",
"kind" : "variable",
"type" : "int",
"line" : 149}
,
{
"name" : "SQLITE_IOERR_TRUNCATE",
"kind" : "variable",
"type" : "int",
"line" : 150}
,
{
"name" : "SQLITE_IOERR_FSTAT",
"kind" : "variable",
"type" : "int",
"line" : 151}
,
{
"name" : "SQLITE_IOERR_UNLOCK",
"kind" : "variable",
"type" : "int",
"line" : 152}
,
{
"name" : "SQLITE_IOERR_RDLOCK",
"kind" : "variable",
"type" : "int",
"line" : 153}
,
{
"name" : "SQLITE_IOERR_DELETE",
"kind" : "variable",
"type" : "int",
"line" : 154}
,
{
"name" : "SQLITE_IOERR_BLOCKED",
"kind" : "variable",
"type" : "int",
"line" : 155}
,
{
"name" : "SQLITE_IOERR_NOMEM",
"kind" : "variable",
"type" : "int",
"line" : 156}
,
{
"name" : "SQLITE_IOERR_ACCESS",
"kind" : "variable",
"type" : "int",
"line" : 157}
,
{
"name" : "SQLITE_IOERR_CHECKRESERVEDLOCK",
"kind" : "variable",
"type" : "int",
"line" : 158}
,
{
"name" : "SQLITE_IOERR_LOCK",
"kind" : "variable",
"type" : "int",
"line" : 159}
,
{
"name" : "SQLITE_IOERR_CLOSE",
"kind" : "variable",
"type" : "int",
"line" : 160}
,
{
"name" : "SQLITE_IOERR_DIR_CLOSE",
"kind" : "variable",
"type" : "int",
"line" : 161}
,
{
"name" : "SQLITE_IOERR_SHMOPEN",
"kind" : "variable",
"type" : "int",
"line" : 162}
,
{
"name" : "SQLITE_IOERR_SHMSIZE",
"kind" : "variable",
"type" : "int",
"line" : 163}
,
{
"name" : "SQLITE_IOERR_SHMLOCK",
"kind" : "variable",
"type" : "int",
"line" : 164}
,
{
"name" : "SQLITE_LOCKED_SHAREDCACHE",
"kind" : "variable",
"type" : "int",
"line" : 165}
,
{
"name" : "SQLITE_BUSY_RECOVERY",
"kind" : "variable",
"type" : "int",
"line" : 166}
,
{
"name" : "SQLITE_CANTOPEN_NOTEMPDIR",
"kind" : "variable",
"type" : "int",
"line" : 167}
,
{
"name" : "SQLITE_OPEN_READONLY",
"kind" : "variable",
"type" : "int",
"line" : 173}
,
{
"name" : "SQLITE_OPEN_READWRITE",
"kind" : "variable",
"type" : "int",
"line" : 174}
,
{
"name" : "SQLITE_OPEN_CREATE",
"kind" : "variable",
"type" : "int",
"line" : 175}
,
{
"name" : "SQLITE_OPEN_DELETEONCLOSE",
"kind" : "variable",
"type" : "int",
"line" : 176}
,
{
"name" : "SQLITE_OPEN_EXCLUSIVE",
"kind" : "variable",
"type" : "int",
"line" : 177}
,
{
"name" : "SQLITE_OPEN_AUTOPROXY",
"kind" : "variable",
"type" : "int",
"line" : 178}
,
{
"name" : "SQLITE_OPEN_MAIN_DB",
"kind" : "variable",
"type" : "int",
"line" : 179}
,
{
"name" : "SQLITE_OPEN_TEMP_DB",
"kind" : "variable",
"type" : "int",
"line" : 180}
,
{
"name" : "SQLITE_OPEN_TRANSIENT_DB",
"kind" : "variable",
"type" : "int",
"line" : 181}
,
{
"name" : "SQLITE_OPEN_MAIN_JOURNAL",
"kind" : "variable",
"type" : "int",
"line" : 182}
,
{
"name" : "SQLITE_OPEN_TEMP_JOURNAL",
"kind" : "variable",
"type" : "int",
"line" : 183}
,
{
"name" : "SQLITE_OPEN_SUBJOURNAL",
"kind" : "variable",
"type" : "int",
"line" : 184}
,
{
"name" : "SQLITE_OPEN_MASTER_JOURNAL",
"kind" : "variable",
"type" : "int",
"line" : 185}
,
{
"name" : "SQLITE_OPEN_NOMUTEX",
"kind" : "variable",
"type" : "int",
"line" : 186}
,
{
"name" : "SQLITE_OPEN_FULLMUTEX",
"kind" : "variable",
"type" : "int",
"line" : 187}
,
{
"name" : "SQLITE_OPEN_SHAREDCACHE",
"kind" : "variable",
"type" : "int",
"line" : 188}
,
{
"name" : "SQLITE_OPEN_PRIVATECACHE",
"kind" : "variable",
"type" : "int",
"line" : 189}
,
{
"name" : "SQLITE_OPEN_WAL",
"kind" : "variable",
"type" : "int",
"line" : 190}
,
{
"name" : "SQLITE_IOCAP_ATOMIC",
"kind" : "variable",
"type" : "int",
"line" : 196}
,
{
"name" : "SQLITE_IOCAP_ATOMIC512",
"kind" : "variable",
"type" : "int",
"line" : 197}
,
{
"name" : "SQLITE_IOCAP_ATOMIC1K",
"kind" : "variable",
"type" : "int",
"line" : 198}
,
{
"name" : "SQLITE_IOCAP_ATOMIC2K",
"kind" : "variable",
"type" : "int",
"line" : 199}
,
{
"name" : "SQLITE_IOCAP_ATOMIC4K",
"kind" : "variable",
"type" : "int",
"line" : 200}
,
{
"name" : "SQLITE_IOCAP_ATOMIC8K",
"kind" : "variable",
"type" : "int",
"line" : 201}
,
{
"name" : "SQLITE_IOCAP_ATOMIC16K",
"kind" : "variable",
"type" : "int",
"line" : 202}
,
{
"name" : "SQLITE_IOCAP_ATOMIC32K",
"kind" : "variable",
"type" : "int",
"line" : 203}
,
{
"name" : "SQLITE_IOCAP_ATOMIC64K",
"kind" : "variable",
"type" : "int",
"line" : 204}
,
{
"name" : "SQLITE_IOCAP_SAFE_APPEND",
"kind" : "variable",
"type" : "int",
"line" : 205}
,
{
"name" : "SQLITE_IOCAP_SEQUENTIAL",
"kind" : "variable",
"type" : "int",
"line" : 206}
,
{
"name" : "SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN",
"kind" : "variable",
"type" : "int",
"line" : 207}
,
{
"name" : "SQLITE_LOCK_NONE",
"kind" : "variable",
"type" : "int",
"line" : 213}
,
{
"name" : "SQLITE_LOCK_SHARED",
"kind" : "variable",
"type" : "int",
"line" : 214}
,
{
"name" : "SQLITE_LOCK_RESERVED",
"kind" : "variable",
"type" : "int",
"line" : 215}
,
{
"name" : "SQLITE_LOCK_PENDING",
"kind" : "variable",
"type" : "int",
"line" : 216}
,
{
"name" : "SQLITE_LOCK_EXCLUSIVE",
"kind" : "variable",
"type" : "int",
"line" : 217}
,
{
"name" : "SQLITE_SYNC_NORMAL",
"kind" : "variable",
"type" : "int",
"line" : 223}
,
{
"name" : "SQLITE_SYNC_FULL",
"kind" : "variable",
"type" : "int",
"line" : 224}
,
{
"name" : "SQLITE_SYNC_DATAONLY",
"kind" : "variable",
"type" : "int",
"line" : 225}
,
{
"name" : "sqlite3_file",
"kind" : "struct",
"line" : 230,
"members" : [
{
"name" : "pMethods",
"kind" : "variable",
"type" : "const(sqlite3_io_methods*)",
"line" : 231}
]
}
,
{
"name" : "sqlite3_io_methods",
"kind" : "struct",
"line" : 238,
"members" : [
{
"name" : "iVersion",
"kind" : "variable",
"type" : "int",
"line" : 239}
,
{
"name" : "xClose",
"kind" : "variable",
"type" : "int C function(sqlite3_file*)",
"line" : 240}
,
{
"name" : "xRead",
"kind" : "variable",
"type" : "int C function(sqlite3_file*, void*, int iAmt, long iOfst)",
"line" : 241}
,
{
"name" : "xWrite",
"kind" : "variable",
"type" : "int C function(sqlite3_file*, const const(void*), int iAmt, long iOfst)",
"line" : 242}
,
{
"name" : "xTruncate",
"kind" : "variable",
"type" : "int C function(sqlite3_file*, long size)",
"line" : 243}
,
{
"name" : "xSync",
"kind" : "variable",
"type" : "int C function(sqlite3_file*, int flags)",
"line" : 244}
,
{
"name" : "xFileSize",
"kind" : "variable",
"type" : "int C function(sqlite3_file*, long* pSize)",
"line" : 245}
,
{
"name" : "xLock",
"kind" : "variable",
"type" : "int C function(sqlite3_file*, int flags)",
"line" : 246}
,
{
"name" : "xUnlock",
"kind" : "variable",
"type" : "int C function(sqlite3_file*, int flags)",
"line" : 247}
,
{
"name" : "xCheckReservedLock",
"kind" : "variable",
"type" : "int C function(sqlite3_file*, int* pResOut)",
"line" : 248}
,
{
"name" : "xFileControl",
"kind" : "variable",
"type" : "int C function(sqlite3_file*, int op, void* pArg)",
"line" : 249}
,
{
"name" : "xSectorSize",
"kind" : "variable",
"type" : "int C function(sqlite3_file*)",
"line" : 250}
,
{
"name" : "xDeviceCharacteristics",
"kind" : "variable",
"type" : "int C function(sqlite3_file*)",
"line" : 251}
,
{
"name" : "xShmMap",
"kind" : "variable",
"type" : "int C function(sqlite3_file*, int iPg, int pgsz, int, void**)",
"line" : 253}
,
{
"name" : "xShmLock",
"kind" : "variable",
"type" : "int C function(sqlite3_file*, int offset, int n, int flags)",
"line" : 254}
,
{
"name" : "xShmBarrier",
"kind" : "variable",
"type" : "void C function(sqlite3_file*)",
"line" : 255}
,
{
"name" : "xShmUnmap",
"kind" : "variable",
"type" : "int C function(sqlite3_file*, int flags)",
"line" : 256}
]
}
,
{
"name" : "SQLITE_FCNTL_LOCKSTATE",
"kind" : "variable",
"type" : "int",
"line" : 265}
,
{
"name" : "SQLITE_GET_LOCKPROXYFILE",
"kind" : "variable",
"type" : "int",
"line" : 266}
,
{
"name" : "SQLITE_SET_LOCKPROXYFILE",
"kind" : "variable",
"type" : "int",
"line" : 267}
,
{
"name" : "SQLITE_LAST_ERRNO",
"kind" : "variable",
"type" : "int",
"line" : 268}
,
{
"name" : "SQLITE_FCNTL_SIZE_HINT",
"kind" : "variable",
"type" : "int",
"line" : 269}
,
{
"name" : "SQLITE_FCNTL_CHUNK_SIZE",
"kind" : "variable",
"type" : "int",
"line" : 270}
,
{
"name" : "SQLITE_FCNTL_FILE_POINTER",
"kind" : "variable",
"type" : "int",
"line" : 271}
,
{
"name" : "SQLITE_FCNTL_SYNC_OMITTED",
"kind" : "variable",
"type" : "int",
"line" : 272}
,
{
"name" : "sqlite3_mutex",
"kind" : "struct",
"line" : 277}
,
{
"name" : "xDlSymReturn",
"kind" : "alias",
"type" : "void* C function()",
"line" : 283}
,
{
"name" : "sqlite3_syscall_ptr",
"kind" : "alias",
"type" : "void C function()",
"line" : 285}
,
{
"name" : "sqlite3_vfs",
"kind" : "struct",
"line" : 287,
"members" : [
{
"name" : "iVersion",
"kind" : "variable",
"type" : "int",
"line" : 288}
,
{
"name" : "szOsFile",
"kind" : "variable",
"type" : "int",
"line" : 289}
,
{
"name" : "mxPathname",
"kind" : "variable",
"type" : "int",
"line" : 290}
,
{
"name" : "pNext",
"kind" : "variable",
"type" : "sqlite3_vfs*",
"line" : 291}
,
{
"name" : "zName",
"kind" : "variable",
"type" : "const(char*)",
"line" : 292}
,
{
"name" : "pAppData",
"kind" : "variable",
"type" : "void*",
"line" : 293}
,
{
"name" : "xOpen",
"kind" : "variable",
"type" : "int C function(sqlite3_vfs*, const const(char*) zName, sqlite3_file*, int flags, int* pOutFlags)",
"line" : 295}
,
{
"name" : "xDelete",
"kind" : "variable",
"type" : "int C function(sqlite3_vfs*, const const(char*) zName, int syncDir)",
"line" : 296}
,
{
"name" : "xAccess",
"kind" : "variable",
"type" : "int C function(sqlite3_vfs*, const const(char*) zName, int flags, int* pResOut)",
"line" : 297}
,
{
"name" : "xFullPathname",
"kind" : "variable",
"type" : "int C function(sqlite3_vfs*, const const(char*) zName, int nOut, char* zOut)",
"line" : 298}
,
{
"name" : "xDlOpen",
"kind" : "variable",
"type" : "void* C function(sqlite3_vfs*, const const(char*) zFilename)",
"line" : 299}
,
{
"name" : "xDlError",
"kind" : "variable",
"type" : "void C function(sqlite3_vfs*, int nByte, char* zErrMsg)",
"line" : 300}
,
{
"name" : "xDlSym",
"kind" : "variable",
"type" : "void* C function() C function(sqlite3_vfs*, void*, const const(char*) zSymbol)*",
"line" : 301}
,
{
"name" : "xDlClose",
"kind" : "variable",
"type" : "void C function(sqlite3_vfs*, void*)",
"line" : 302}
,
{
"name" : "xRandomness",
"kind" : "variable",
"type" : "int C function(sqlite3_vfs*, int nByte, char* zOut)",
"line" : 303}
,
{
"name" : "xSleep",
"kind" : "variable",
"type" : "int C function(sqlite3_vfs*, int microseconds)",
"line" : 304}
,
{
"name" : "xCurrentTime",
"kind" : "variable",
"type" : "int C function(sqlite3_vfs*, double*)",
"line" : 305}
,
{
"name" : "xGetLastError",
"kind" : "variable",
"type" : "int C function(sqlite3_vfs*, int nByte, char* zOut)",
"line" : 306}
,
{
"name" : "xCurrentTimeInt64",
"kind" : "variable",
"type" : "int C function(sqlite3_vfs*, long*)",
"line" : 311}
]
}
,
{
"name" : "SQLITE_ACCESS_EXISTS",
"kind" : "variable",
"type" : "int",
"line" : 323}
,
{
"name" : "SQLITE_ACCESS_READWRITE",
"kind" : "variable",
"type" : "int",
"line" : 325}
,
{
"name" : "SQLITE_ACCESS_READ",
"kind" : "variable",
"type" : "int",
"line" : 326}
,
{
"name" : "SQLITE_SHM_UNLOCK",
"kind" : "variable",
"type" : "int",
"line" : 332}
,
{
"name" : "SQLITE_SHM_LOCK",
"kind" : "variable",
"type" : "int",
"line" : 333}
,
{
"name" : "SQLITE_SHM_SHARED",
"kind" : "variable",
"type" : "int",
"line" : 334}
,
{
"name" : "SQLITE_SHM_EXCLUSIVE",
"kind" : "variable",
"type" : "int",
"line" : 335}
,
{
"name" : "SQLITE_SHM_NLOCK",
"kind" : "variable",
"type" : "int",
"line" : 341}
,
{
"name" : "sqlite3_initialize",
"kind" : "function",
"type" : "intC ()",
"line" : 347}
,
{
"name" : "sqlite3_shutdown",
"kind" : "function",
"type" : "intC ()",
"line" : 349}
,
{
"name" : "sqlite3_os_init",
"kind" : "function",
"type" : "intC ()",
"line" : 351}
,
{
"name" : "sqlite3_os_end",
"kind" : "function",
"type" : "intC ()",
"line" : 353}
,
{
"name" : "sqlite3_config",
"kind" : "function",
"type" : "intC (int,...)",
"line" : 358}
,
{
"name" : "sqlite3_db_config",
"kind" : "function",
"type" : "intC (sqlite3*, int op,...)",
"line" : 363}
,
{
"name" : "sqlite3_mem_methods",
"kind" : "struct",
"line" : 368,
"members" : [
{
"name" : "xMalloc",
"kind" : "variable",
"type" : "void* C function(int)",
"line" : 369}
,
{
"name" : "xFree",
"kind" : "variable",
"type" : "void C function(void*)",
"line" : 370}
,
{
"name" : "xRealloc",
"kind" : "variable",
"type" : "void* C function(void*, int)",
"line" : 371}
,
{
"name" : "xSize",
"kind" : "variable",
"type" : "int C function(void*)",
"line" : 372}
,
{
"name" : "xRoundup",
"kind" : "variable",
"type" : "int C function(int)",
"line" : 373}
,
{
"name" : "xInit",
"kind" : "variable",
"type" : "int C function(void*)",
"line" : 374}
,
{
"name" : "xShutdown",
"kind" : "variable",
"type" : "void C function(void*)",
"line" : 375}
,
{
"name" : "pAppData",
"kind" : "variable",
"type" : "void*",
"line" : 376}
]
}
,
{
"name" : "SQLITE_CONFIG_SINGLETHREAD",
"kind" : "variable",
"type" : "int",
"line" : 383}
,
{
"name" : "SQLITE_CONFIG_MULTITHREAD",
"kind" : "variable",
"type" : "int",
"line" : 384}
,
{
"name" : "SQLITE_CONFIG_SERIALIZED",
"kind" : "variable",
"type" : "int",
"line" : 385}
,
{
"name" : "SQLITE_CONFIG_MALLOC",
"kind" : "variable",
"type" : "int",
"line" : 386}
,
{
"name" : "SQLITE_CONFIG_GETMALLOC",
"kind" : "variable",
"type" : "int",
"line" : 387}
,
{
"name" : "SQLITE_CONFIG_SCRATCH",
"kind" : "variable",
"type" : "int",
"line" : 388}
,
{
"name" : "SQLITE_CONFIG_PAGECACHE",
"kind" : "variable",
"type" : "int",
"line" : 389}
,
{
"name" : "SQLITE_CONFIG_HEAP",
"kind" : "variable",
"type" : "int",
"line" : 390}
,
{
"name" : "SQLITE_CONFIG_MEMSTATUS",
"kind" : "variable",
"type" : "int",
"line" : 391}
,
{
"name" : "SQLITE_CONFIG_MUTEX",
"kind" : "variable",
"type" : "int",
"line" : 392}
,
{
"name" : "SQLITE_CONFIG_GETMUTEX",
"kind" : "variable",
"type" : "int",
"line" : 393}
,
{
"name" : "SQLITE_CONFIG_LOOKASIDE",
"kind" : "variable",
"type" : "int",
"line" : 397}
,
{
"name" : "SQLITE_CONFIG_PCACHE",
"kind" : "variable",
"type" : "int",
"line" : 398}
,
{
"name" : "SQLITE_CONFIG_GETPCACHE",
"kind" : "variable",
"type" : "int",
"line" : 399}
,
{
"name" : "SQLITE_CONFIG_LOG",
"kind" : "variable",
"type" : "int",
"line" : 400}
,
{
"name" : "SQLITE_DBCONFIG_LOOKASIDE",
"kind" : "variable",
"type" : "int",
"line" : 406}
,
{
"name" : "SQLITE_DBCONFIG_ENABLE_FKEY",
"kind" : "variable",
"type" : "int",
"line" : 407}
,
{
"name" : "SQLITE_DBCONFIG_ENABLE_TRIGGER",
"kind" : "variable",
"type" : "int",
"line" : 408}
,
{
"name" : "sqlite3_extended_result_codes",
"kind" : "function",
"type" : "intC (sqlite3*, int onoff)",
"line" : 414}
,
{
"name" : "sqlite3_last_insert_rowid",
"kind" : "function",
"type" : "longC (sqlite3*)",
"line" : 419}
,
{
"name" : "sqlite3_changes",
"kind" : "function",
"type" : "intC (sqlite3*)",
"line" : 424}
,
{
"name" : "sqlite3_total_changes",
"kind" : "function",
"type" : "intC (sqlite3*)",
"line" : 429}
,
{
"name" : "sqlite3_interrupt",
"kind" : "function",
"type" : "voidC (sqlite3*)",
"line" : 434}
,
{
"name" : "sqlite3_complete",
"kind" : "function",
"type" : "intC (const const(char*) sql)",
"line" : 439}
,
{
"name" : "sqlite3_complete16",
"kind" : "function",
"type" : "intC (const const(void*) sql)",
"line" : 441}
,
{
"name" : "sqlite3_busy_handler",
"kind" : "function",
"type" : "intC (sqlite3*, int C function(void*, int), void*)",
"line" : 446}
,
{
"name" : "sqlite3_busy_timeout",
"kind" : "function",
"type" : "intC (sqlite3*, int ms)",
"line" : 451}
,
{
"name" : "sqlite3_get_table",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(char*) zSql, char*** pazResult, int* pnRow, int* pnColumn, char** pzErrmsg)",
"line" : 456}
,
{
"name" : "sqlite3_free_table",
"kind" : "function",
"type" : "voidC (char** result)",
"line" : 465}
,
{
"name" : "va_list",
"kind" : "alias",
"type" : "char*",
"line" : 468}
,
{
"name" : "sqlite3_mprintf",
"kind" : "function",
"type" : "char*C (const const(char*),...)",
"line" : 473}
,
{
"name" : "sqlite3_vmprintf",
"kind" : "function",
"type" : "char*C (const const(char*), char*)",
"line" : 474}
,
{
"name" : "sqlite3_snprintf",
"kind" : "function",
"type" : "char*C (int, char*, const const(char*),...)",
"line" : 475}
,
{
"name" : "sqlite3_vsnprintf",
"kind" : "function",
"type" : "char*C (int, char*, const const(char*), char*)",
"line" : 476}
,
{
"name" : "sqlite3_malloc",
"kind" : "function",
"type" : "void*C (int)",
"line" : 481}
,
{
"name" : "sqlite3_realloc",
"kind" : "function",
"type" : "void*C (void*, int)",
"line" : 483}
,
{
"name" : "sqlite3_free",
"kind" : "function",
"type" : "voidC (void*)",
"line" : 485}
,
{
"name" : "sqlite3_memory_used",
"kind" : "function",
"type" : "longC ()",
"line" : 490}
,
{
"name" : "sqlite3_memory_highwater",
"kind" : "function",
"type" : "longC (int resetFlag)",
"line" : 491}
,
{
"name" : "sqlite3_randomness",
"kind" : "function",
"type" : "voidC (int N, void* P)",
"line" : 496}
,
{
"name" : "sqlite3_set_authorizer",
"kind" : "function",
"type" : "intC (sqlite3*, int C function(void*, int, const const(char*), const const(char*), const const(char*), const const(char*)) xAuth, void* pUserData)",
"line" : 501}
,
{
"name" : "SQLITE_DENY",
"kind" : "variable",
"type" : "int",
"line" : 511}
,
{
"name" : "SQLITE_IGNORE",
"kind" : "variable",
"type" : "int",
"line" : 512}
,
{
"name" : "SQLITE_CREATE_INDEX",
"kind" : "variable",
"type" : "int",
"line" : 519}
,
{
"name" : "SQLITE_CREATE_TABLE",
"kind" : "variable",
"type" : "int",
"line" : 520}
,
{
"name" : "SQLITE_CREATE_TEMP_INDEX",
"kind" : "variable",
"type" : "int",
"line" : 521}
,
{
"name" : "SQLITE_CREATE_TEMP_TABLE",
"kind" : "variable",
"type" : "int",
"line" : 522}
,
{
"name" : "SQLITE_CREATE_TEMP_TRIGGER",
"kind" : "variable",
"type" : "int",
"line" : 523}
,
{
"name" : "SQLITE_CREATE_TEMP_VIEW",
"kind" : "variable",
"type" : "int",
"line" : 524}
,
{
"name" : "SQLITE_CREATE_TRIGGER",
"kind" : "variable",
"type" : "int",
"line" : 525}
,
{
"name" : "SQLITE_CREATE_VIEW",
"kind" : "variable",
"type" : "int",
"line" : 526}
,
{
"name" : "SQLITE_DELETE",
"kind" : "variable",
"type" : "int",
"line" : 527}
,
{
"name" : "SQLITE_DROP_INDEX",
"kind" : "variable",
"type" : "int",
"line" : 528}
,
{
"name" : "SQLITE_DROP_TABLE",
"kind" : "variable",
"type" : "int",
"line" : 529}
,
{
"name" : "SQLITE_DROP_TEMP_INDEX",
"kind" : "variable",
"type" : "int",
"line" : 530}
,
{
"name" : "SQLITE_DROP_TEMP_TABLE",
"kind" : "variable",
"type" : "int",
"line" : 531}
,
{
"name" : "SQLITE_DROP_TEMP_TRIGGER",
"kind" : "variable",
"type" : "int",
"line" : 532}
,
{
"name" : "SQLITE_DROP_TEMP_VIEW",
"kind" : "variable",
"type" : "int",
"line" : 533}
,
{
"name" : "SQLITE_DROP_TRIGGER",
"kind" : "variable",
"type" : "int",
"line" : 534}
,
{
"name" : "SQLITE_DROP_VIEW",
"kind" : "variable",
"type" : "int",
"line" : 535}
,
{
"name" : "SQLITE_INSERT",
"kind" : "variable",
"type" : "int",
"line" : 536}
,
{
"name" : "SQLITE_PRAGMA",
"kind" : "variable",
"type" : "int",
"line" : 537}
,
{
"name" : "SQLITE_READ",
"kind" : "variable",
"type" : "int",
"line" : 538}
,
{
"name" : "SQLITE_SELECT",
"kind" : "variable",
"type" : "int",
"line" : 539}
,
{
"name" : "SQLITE_TRANSACTION",
"kind" : "variable",
"type" : "int",
"line" : 540}
,
{
"name" : "SQLITE_UPDATE",
"kind" : "variable",
"type" : "int",
"line" : 541}
,
{
"name" : "SQLITE_ATTACH",
"kind" : "variable",
"type" : "int",
"line" : 542}
,
{
"name" : "SQLITE_DETACH",
"kind" : "variable",
"type" : "int",
"line" : 543}
,
{
"name" : "SQLITE_ALTER_TABLE",
"kind" : "variable",
"type" : "int",
"line" : 544}
,
{
"name" : "SQLITE_REINDEX",
"kind" : "variable",
"type" : "int",
"line" : 545}
,
{
"name" : "SQLITE_ANALYZE",
"kind" : "variable",
"type" : "int",
"line" : 546}
,
{
"name" : "SQLITE_CREATE_VTABLE",
"kind" : "variable",
"type" : "int",
"line" : 547}
,
{
"name" : "SQLITE_DROP_VTABLE",
"kind" : "variable",
"type" : "int",
"line" : 548}
,
{
"name" : "SQLITE_FUNCTION",
"kind" : "variable",
"type" : "int",
"line" : 549}
,
{
"name" : "SQLITE_SAVEPOINT",
"kind" : "variable",
"type" : "int",
"line" : 550}
,
{
"name" : "SQLITE_COPY",
"kind" : "variable",
"type" : "int",
"line" : 551}
,
{
"name" : "sqlite3_trace",
"kind" : "function",
"type" : "void*C (sqlite3*, void C function(void*, const const(char*)) xTrace, void*)",
"line" : 556}
,
{
"name" : "sqlite3_profile",
"kind" : "function",
"type" : "void*C (sqlite3*, void C function(void*, const const(char*), ulong) xProfile, void*)",
"line" : 558}
,
{
"name" : "sqlite3_progress_handler",
"kind" : "function",
"type" : "voidC (sqlite3*, int, int C function(void*), void*)",
"line" : 564}
,
{
"name" : "sqlite3_open",
"kind" : "function",
"type" : "intC (const const(char*) filename, sqlite3** ppDb)",
"line" : 569}
,
{
"name" : "sqlite3_open16",
"kind" : "function",
"type" : "intC (const const(void*) filename, sqlite3** ppDb)",
"line" : 574}
,
{
"name" : "sqlite3_open_v2",
"kind" : "function",
"type" : "intC (const const(char*) filename, sqlite3** ppDb, int flags, const const(char*) zVfs)",
"line" : 579}
,
{
"name" : "sqlite3_errcode",
"kind" : "function",
"type" : "intC (sqlite3* db)",
"line" : 589}
,
{
"name" : "sqlite3_extended_errcode",
"kind" : "function",
"type" : "intC (sqlite3* db)",
"line" : 591}
,
{
"name" : "sqlite3_errmsg",
"kind" : "function",
"type" : "const(char*)C (sqlite3*)",
"line" : 593}
,
{
"name" : "sqlite3_errmsg16",
"kind" : "function",
"type" : "const(void*)C (sqlite3*)",
"line" : 595}
,
{
"name" : "sqlite3_stmt",
"kind" : "struct",
"line" : 600}
,
{
"name" : "sqlite3_limit",
"kind" : "function",
"type" : "intC (sqlite3*, int id, int newVal)",
"line" : 605}
,
{
"name" : "SQLITE_LIMIT_LENGTH",
"kind" : "variable",
"type" : "int",
"line" : 611}
,
{
"name" : "SQLITE_LIMIT_SQL_LENGTH",
"kind" : "variable",
"type" : "int",
"line" : 612}
,
{
"name" : "SQLITE_LIMIT_COLUMN",
"kind" : "variable",
"type" : "int",
"line" : 613}
,
{
"name" : "SQLITE_LIMIT_EXPR_DEPTH",
"kind" : "variable",
"type" : "int",
"line" : 614}
,
{
"name" : "SQLITE_LIMIT_COMPOUND_SELECT",
"kind" : "variable",
"type" : "int",
"line" : 615}
,
{
"name" : "SQLITE_LIMIT_VDBE_OP",
"kind" : "variable",
"type" : "int",
"line" : 616}
,
{
"name" : "SQLITE_LIMIT_FUNCTION_ARG",
"kind" : "variable",
"type" : "int",
"line" : 617}
,
{
"name" : "SQLITE_LIMIT_ATTACHED",
"kind" : "variable",
"type" : "int",
"line" : 618}
,
{
"name" : "SQLITE_LIMIT_LIKE_PATTERN_LENGTH",
"kind" : "variable",
"type" : "int",
"line" : 619}
,
{
"name" : "SQLITE_LIMIT_VARIABLE_NUMBER",
"kind" : "variable",
"type" : "int",
"line" : 620}
,
{
"name" : "SQLITE_LIMIT_TRIGGER_DEPTH",
"kind" : "variable",
"type" : "int",
"line" : 621}
,
{
"name" : "sqlite3_prepare",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(char*) zSql, int nByte, sqlite3_stmt** ppStmt, const const(char**) pzTail)",
"line" : 626}
,
{
"name" : "sqlite3_prepare_v2",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(char*) zSql, int nByte, sqlite3_stmt** ppStmt, const const(char**) pzTail)",
"line" : 634}
,
{
"name" : "sqlite3_prepare16",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(void*) zSql, int nByte, sqlite3_stmt** ppStmt, const const(void**) pzTail)",
"line" : 642}
,
{
"name" : "sqlite3_prepare16_v2",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(void*) zSql, int nByte, sqlite3_stmt** ppStmt, const const(void**) pzTail)",
"line" : 650}
,
{
"name" : "sqlite3_sql",
"kind" : "function",
"type" : "const(char*)C (sqlite3_stmt* pStmt)",
"line" : 661}
,
{
"name" : "sqlite3_stmt_readonly",
"kind" : "function",
"type" : "intC (sqlite3_stmt* pStmt)",
"line" : 666}
,
{
"name" : "sqlite3_value",
"kind" : "struct",
"line" : 671}
,
{
"name" : "sqlite3_context",
"kind" : "struct",
"line" : 676}
,
{
"name" : "sqlite3_bind_blob",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int, const const(void*), int n, void C function(void*))",
"line" : 681}
,
{
"name" : "sqlite3_bind_double",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int, double)",
"line" : 683}
,
{
"name" : "sqlite3_bind_int",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int, int)",
"line" : 685}
,
{
"name" : "sqlite3_bind_int64",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int, long)",
"line" : 687}
,
{
"name" : "sqlite3_bind_null",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int)",
"line" : 689}
,
{
"name" : "sqlite3_bind_text",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int, const const(char*), int n, void C function(void*))",
"line" : 691}
,
{
"name" : "sqlite3_bind_text16",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int, const const(void*), int, void C function(void*))",
"line" : 693}
,
{
"name" : "sqlite3_bind_value",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int, const const(sqlite3_value*))",
"line" : 695}
,
{
"name" : "sqlite3_bind_zeroblob",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int, int n)",
"line" : 697}
,
{
"name" : "sqlite3_bind_parameter_count",
"kind" : "function",
"type" : "intC (sqlite3_stmt*)",
"line" : 702}
,
{
"name" : "sqlite3_bind_parameter_name",
"kind" : "function",
"type" : "const(char*)C (sqlite3_stmt*, int)",
"line" : 707}
,
{
"name" : "sqlite3_bind_parameter_index",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, const const(char*) zName)",
"line" : 712}
,
{
"name" : "sqlite3_clear_bindings",
"kind" : "function",
"type" : "intC (sqlite3_stmt*)",
"line" : 717}
,
{
"name" : "sqlite3_column_count",
"kind" : "function",
"type" : "intC (sqlite3_stmt* pStmt)",
"line" : 722}
,
{
"name" : "sqlite3_column_name",
"kind" : "function",
"type" : "const(char*)C (sqlite3_stmt*, int N)",
"line" : 727}
,
{
"name" : "sqlite3_column_name16",
"kind" : "function",
"type" : "const(void*)C (sqlite3_stmt*, int N)",
"line" : 729}
,
{
"name" : "sqlite3_column_database_name",
"kind" : "function",
"type" : "const(char*)C (sqlite3_stmt*, int)",
"line" : 734}
,
{
"name" : "sqlite3_column_database_name16",
"kind" : "function",
"type" : "const(void*)C (sqlite3_stmt*, int)",
"line" : 736}
,
{
"name" : "sqlite3_column_table_name",
"kind" : "function",
"type" : "const(char*)C (sqlite3_stmt*, int)",
"line" : 738}
,
{
"name" : "sqlite3_column_table_name16",
"kind" : "function",
"type" : "const(void*)C (sqlite3_stmt*, int)",
"line" : 740}
,
{
"name" : "sqlite3_column_origin_name",
"kind" : "function",
"type" : "const(char*)C (sqlite3_stmt*, int)",
"line" : 742}
,
{
"name" : "sqlite3_column_origin_name16",
"kind" : "function",
"type" : "const(void*)C (sqlite3_stmt*, int)",
"line" : 744}
,
{
"name" : "sqlite3_column_decltype",
"kind" : "function",
"type" : "const(char*)C (sqlite3_stmt*, int)",
"line" : 749}
,
{
"name" : "sqlite3_column_decltype16",
"kind" : "function",
"type" : "const(void*)C (sqlite3_stmt*, int)",
"line" : 751}
,
{
"name" : "sqlite3_step",
"kind" : "function",
"type" : "intC (sqlite3_stmt*)",
"line" : 756}
,
{
"name" : "sqlite3_data_count",
"kind" : "function",
"type" : "intC (sqlite3_stmt* pStmt)",
"line" : 761}
,
{
"name" : "SQLITE_INTEGER",
"kind" : "variable",
"type" : "int",
"line" : 767}
,
{
"name" : "SQLITE_FLOAT",
"kind" : "variable",
"type" : "int",
"line" : 768}
,
{
"name" : "SQLITE_BLOB",
"kind" : "variable",
"type" : "int",
"line" : 769}
,
{
"name" : "SQLITE_NULL",
"kind" : "variable",
"type" : "int",
"line" : 770}
,
{
"name" : "SQLITE3_TEXT",
"kind" : "variable",
"type" : "int",
"line" : 771}
,
{
"name" : "sqlite3_column_blob",
"kind" : "function",
"type" : "const(void*)C (sqlite3_stmt*, int iCol)",
"line" : 776}
,
{
"name" : "sqlite3_column_bytes",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int iCol)",
"line" : 778}
,
{
"name" : "sqlite3_column_bytes16",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int iCol)",
"line" : 780}
,
{
"name" : "sqlite3_column_double",
"kind" : "function",
"type" : "doubleC (sqlite3_stmt*, int iCol)",
"line" : 782}
,
{
"name" : "sqlite3_column_int",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int iCol)",
"line" : 784}
,
{
"name" : "sqlite3_column_int64",
"kind" : "function",
"type" : "longC (sqlite3_stmt*, int iCol)",
"line" : 786}
,
{
"name" : "sqlite3_column_text",
"kind" : "function",
"type" : "const(char*)C (sqlite3_stmt*, int iCol)",
"line" : 788}
,
{
"name" : "sqlite3_column_text16",
"kind" : "function",
"type" : "const(void*)C (sqlite3_stmt*, int iCol)",
"line" : 790}
,
{
"name" : "sqlite3_column_type",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int iCol)",
"line" : 792}
,
{
"name" : "sqlite3_column_value",
"kind" : "function",
"type" : "sqlite3_value*C (sqlite3_stmt*, int iCol)",
"line" : 794}
,
{
"name" : "sqlite3_finalize",
"kind" : "function",
"type" : "intC (sqlite3_stmt* pStmt)",
"line" : 799}
,
{
"name" : "sqlite3_reset",
"kind" : "function",
"type" : "intC (sqlite3_stmt* pStmt)",
"line" : 804}
,
{
"name" : "sqlite3_create_function",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(char*) zFunctionName, int nArg, int eTextRep, void* pApp, void C function(sqlite3_context*, int, sqlite3_value**) xFunc, void C function(sqlite3_context*, int, sqlite3_value**) xStep, void C function(sqlite3_context*) xFinal)",
"line" : 809}
,
{
"name" : "sqlite3_create_function16",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(void*) zFunctionName, int nArg, int eTextRep, void* pApp, void C function(sqlite3_context*, int, sqlite3_value**) xFunc, void C function(sqlite3_context*, int, sqlite3_value**) xStep, void C function(sqlite3_context*) xFinal)",
"line" : 820}
,
{
"name" : "sqlite3_create_function_v2",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(char*) zFunctionName, int nArg, int eTextRep, void* pApp, void C function(sqlite3_context*, int, sqlite3_value**) xFunc, void C function(sqlite3_context*, int, sqlite3_value**) xStep, void C function(sqlite3_context*) xFinal, void C function(void*) xDestroy)",
"line" : 831}
,
{
"name" : "SQLITE_UTF8",
"kind" : "variable",
"type" : "int",
"line" : 850}
,
{
"name" : "SQLITE_UTF16LE",
"kind" : "variable",
"type" : "int",
"line" : 851}
,
{
"name" : "SQLITE_UTF16BE",
"kind" : "variable",
"type" : "int",
"line" : 852}
,
{
"name" : "SQLITE_UTF16",
"kind" : "variable",
"type" : "int",
"line" : 855}
,
{
"name" : "SQLITE_ANY",
"kind" : "variable",
"type" : "int",
"line" : 856}
,
{
"name" : "SQLITE_UTF16_ALIGNED",
"kind" : "variable",
"type" : "int",
"line" : 857}
,
{
"name" : "sqlite3_value_blob",
"kind" : "function",
"type" : "const(void*)C (sqlite3_value*)",
"line" : 862}
,
{
"name" : "sqlite3_value_bytes",
"kind" : "function",
"type" : "intC (sqlite3_value*)",
"line" : 864}
,
{
"name" : "sqlite3_value_bytes16",
"kind" : "function",
"type" : "intC (sqlite3_value*)",
"line" : 866}
,
{
"name" : "sqlite3_value_double",
"kind" : "function",
"type" : "doubleC (sqlite3_value*)",
"line" : 868}
,
{
"name" : "sqlite3_value_int",
"kind" : "function",
"type" : "intC (sqlite3_value*)",
"line" : 870}
,
{
"name" : "sqlite3_value_int64",
"kind" : "function",
"type" : "longC (sqlite3_value*)",
"line" : 872}
,
{
"name" : "sqlite3_value_text",
"kind" : "function",
"type" : "const(char*)C (sqlite3_value*)",
"line" : 874}
,
{
"name" : "sqlite3_value_text16",
"kind" : "function",
"type" : "const(void*)C (sqlite3_value*)",
"line" : 876}
,
{
"name" : "sqlite3_value_text16le",
"kind" : "function",
"type" : "const(void*)C (sqlite3_value*)",
"line" : 878}
,
{
"name" : "sqlite3_value_text16be",
"kind" : "function",
"type" : "const(void*)C (sqlite3_value*)",
"line" : 880}
,
{
"name" : "sqlite3_value_type",
"kind" : "function",
"type" : "intC (sqlite3_value*)",
"line" : 882}
,
{
"name" : "sqlite3_value_numeric_type",
"kind" : "function",
"type" : "intC (sqlite3_value*)",
"line" : 884}
,
{
"name" : "sqlite3_aggregate_context",
"kind" : "function",
"type" : "void*C (sqlite3_context*, int nBytes)",
"line" : 889}
,
{
"name" : "sqlite3_user_data",
"kind" : "function",
"type" : "void*C (sqlite3_context*)",
"line" : 894}
,
{
"name" : "sqlite3_context_db_handle",
"kind" : "function",
"type" : "sqlite3*C (sqlite3_context*)",
"line" : 899}
,
{
"name" : "sqlite3_get_auxdata",
"kind" : "function",
"type" : "void*C (sqlite3_context*, int N)",
"line" : 904}
,
{
"name" : "sqlite3_set_auxdata",
"kind" : "function",
"type" : "voidC (sqlite3_context*, int N, void*, void C function(void*))",
"line" : 906}
,
{
"name" : "sqlite3_destructor_type",
"kind" : "alias",
"type" : "void C function(void*)",
"line" : 912}
,
{
"name" : "SQLITE_STATIC",
"kind" : "variable",
"type" : "void C function(void*)",
"line" : 915}
,
{
"name" : "SQLITE_TRANSIENT",
"kind" : "variable",
"type" : "void C function(void*)",
"line" : 916}
,
{
"name" : "sqlite3_result_blob",
"kind" : "function",
"type" : "voidC (sqlite3_context*, const const(void*), int, void C function(void*))",
"line" : 921}
,
{
"name" : "sqlite3_result_double",
"kind" : "function",
"type" : "voidC (sqlite3_context*, double)",
"line" : 923}
,
{
"name" : "sqlite3_result_error",
"kind" : "function",
"type" : "voidC (sqlite3_context*, const const(char*), int)",
"line" : 925}
,
{
"name" : "sqlite3_result_error16",
"kind" : "function",
"type" : "voidC (sqlite3_context*, const const(void*), int)",
"line" : 927}
,
{
"name" : "sqlite3_result_error_toobig",
"kind" : "function",
"type" : "voidC (sqlite3_context*)",
"line" : 929}
,
{
"name" : "sqlite3_result_error_nomem",
"kind" : "function",
"type" : "voidC (sqlite3_context*)",
"line" : 931}
,
{
"name" : "sqlite3_result_error_code",
"kind" : "function",
"type" : "voidC (sqlite3_context*, int)",
"line" : 933}
,
{
"name" : "sqlite3_result_int",
"kind" : "function",
"type" : "voidC (sqlite3_context*, int)",
"line" : 935}
,
{
"name" : "sqlite3_result_int64",
"kind" : "function",
"type" : "voidC (sqlite3_context*, long)",
"line" : 937}
,
{
"name" : "sqlite3_result_null",
"kind" : "function",
"type" : "voidC (sqlite3_context*)",
"line" : 939}
,
{
"name" : "sqlite3_result_text",
"kind" : "function",
"type" : "voidC (sqlite3_context*, const const(char*), int, void C function(void*))",
"line" : 941}
,
{
"name" : "sqlite3_result_text16",
"kind" : "function",
"type" : "voidC (sqlite3_context*, const const(void*), int, void C function(void*))",
"line" : 943}
,
{
"name" : "sqlite3_result_text16le",
"kind" : "function",
"type" : "voidC (sqlite3_context*, const const(void*), int, void C function(void*))",
"line" : 945}
,
{
"name" : "sqlite3_result_text16be",
"kind" : "function",
"type" : "voidC (sqlite3_context*, const const(void*), int, void C function(void*))",
"line" : 947}
,
{
"name" : "sqlite3_result_value",
"kind" : "function",
"type" : "voidC (sqlite3_context*, sqlite3_value*)",
"line" : 949}
,
{
"name" : "sqlite3_result_zeroblob",
"kind" : "function",
"type" : "voidC (sqlite3_context*, int n)",
"line" : 951}
,
{
"name" : "sqlite3_create_collation",
"kind" : "function",
"type" : "intC (sqlite3*, const const(char*) zName, int eTextRep, void* pArg, int C function(void*, int, const const(void*), int, const const(void*)) xCompare)",
"line" : 956}
,
{
"name" : "sqlite3_create_collation_v2",
"kind" : "function",
"type" : "intC (sqlite3*, const const(char*) zName, int eTextRep, void* pArg, int C function(void*, int, const const(void*), int, const const(void*)) xCompare, void C function(void*) xDestroy)",
"line" : 964}
,
{
"name" : "sqlite3_create_collation16",
"kind" : "function",
"type" : "intC (sqlite3*, const const(void*) zName, int eTextRep, void* pArg, int C function(void*, int, const const(void*), int, const const(void*)) xCompare)",
"line" : 973}
,
{
"name" : "sqlite3_collation_needed",
"kind" : "function",
"type" : "intC (sqlite3*, void*, void C function(void*, sqlite3*, int eTextRep, const const(char*)))",
"line" : 984}
,
{
"name" : "sqlite3_collation_needed16",
"kind" : "function",
"type" : "intC (sqlite3*, void*, void C function(void*, sqlite3*, int eTextRep, const const(void*)))",
"line" : 990}
,
{
"name" : "sqlite3_key",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(void*) pKey, int nKey)",
"line" : 997}
,
{
"name" : "sqlite3_rekey",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(void*) pKey, int nKey)",
"line" : 1010}
,
{
"name" : "sqlite3_activate_see",
"kind" : "function",
"type" : "voidC (const const(char*) zPassPhrase)",
"line" : 1019}
,
{
"name" : "sqlite3_activate_cerod",
"kind" : "function",
"type" : "voidC (const const(char*) zPassPhrase)",
"line" : 1027}
,
{
"name" : "sqlite3_sleep",
"kind" : "function",
"type" : "intC (int)",
"line" : 1034}
,
{
"name" : "sqlite3_temp_directory",
"kind" : "variable",
"type" : "char*",
"line" : 1039}
,
{
"name" : "sqlite3_get_autocommit",
"kind" : "function",
"type" : "intC (sqlite3*)",
"line" : 1044}
,
{
"name" : "sqlite3_db_handle",
"kind" : "function",
"type" : "sqlite3*C (sqlite3_stmt*)",
"line" : 1049}
,
{
"name" : "sqlite3_next_stmt",
"kind" : "function",
"type" : "sqlite3_stmt*C (sqlite3* pDb, sqlite3_stmt* pStmt)",
"line" : 1054}
,
{
"name" : "sqlite3_commit_hook",
"kind" : "function",
"type" : "void*C (sqlite3*, int C function(void*), void*)",
"line" : 1059}
,
{
"name" : "sqlite3_rollback_hook",
"kind" : "function",
"type" : "void*C (sqlite3*, void C function(void*), void*)",
"line" : 1061}
,
{
"name" : "sqlite3_update_hook",
"kind" : "function",
"type" : "void*C (sqlite3*, void C function(void*, int, char*, char*, long), void*)",
"line" : 1066}
,
{
"name" : "sqlite3_enable_shared_cache",
"kind" : "function",
"type" : "intC (int)",
"line" : 1075}
,
{
"name" : "sqlite3_release_memory",
"kind" : "function",
"type" : "intC (int)",
"line" : 1080}
,
{
"name" : "sqlite3_soft_heap_limit64",
"kind" : "function",
"type" : "longC (long N)",
"line" : 1085}
,
{
"name" : "sqlite3_table_column_metadata",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(char*) zDbName, const const(char*) zTableName, const const(char*) zColumnName, char** pzDataType, char** pzCollSeq, int* pNotNull, int* pPrimaryKey, int* pAutoinc)",
"line" : 1090}
,
{
"name" : "sqlite3_load_extension",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(char*) zFile, const const(char*) zProc, char** pzErrMsg)",
"line" : 1105}
,
{
"name" : "sqlite3_enable_load_extension",
"kind" : "function",
"type" : "intC (sqlite3* db, int onoff)",
"line" : 1115}
,
{
"name" : "sqlite3_auto_extension",
"kind" : "function",
"type" : "intC (void C function() xEntryPoint)",
"line" : 1120}
,
{
"name" : "sqlite3_reset_auto_extension",
"kind" : "function",
"type" : "voidC ()",
"line" : 1125}
,
{
"name" : "mapFunction",
"kind" : "alias",
"type" : "void C function(sqlite3_context*, int, sqlite3_value**)",
"line" : 1140}
,
{
"name" : "sqlite3_module",
"kind" : "struct",
"line" : 1143,
"members" : [
{
"name" : "iVersion",
"kind" : "variable",
"type" : "int",
"line" : 1144}
,
{
"name" : "xCreate",
"kind" : "variable",
"type" : "int C function(sqlite3*, void* pAux, int argc, const const(char**) argv, sqlite3_vtab** ppVTab, char**)",
"line" : 1147}
,
{
"name" : "xConnect",
"kind" : "variable",
"type" : "int C function(sqlite3*, void* pAux, int argc, const const(char**) argv, sqlite3_vtab** ppVTab, char**)",
"line" : 1150}
,
{
"name" : "xBestIndex",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab* pVTab, sqlite3_index_info*)",
"line" : 1151}
,
{
"name" : "xDisconnect",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab* pVTab)",
"line" : 1152}
,
{
"name" : "xDestroy",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab* pVTab)",
"line" : 1153}
,
{
"name" : "xOpen",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab* pVTab, sqlite3_vtab_cursor** ppCursor)",
"line" : 1154}
,
{
"name" : "xClose",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab_cursor*)",
"line" : 1155}
,
{
"name" : "xFilter",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab_cursor*, int idxNum, const const(char*) idxStr, int argc, sqlite3_value** argv)",
"line" : 1157}
,
{
"name" : "xNext",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab_cursor*)",
"line" : 1158}
,
{
"name" : "xEof",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab_cursor*)",
"line" : 1159}
,
{
"name" : "xColumn",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab_cursor*, sqlite3_context*, int)",
"line" : 1160}
,
{
"name" : "xRowid",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab_cursor*, long* pRowid)",
"line" : 1161}
,
{
"name" : "xUpdate",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab*, int, sqlite3_value**, long*)",
"line" : 1162}
,
{
"name" : "xBegin",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab* pVTab)",
"line" : 1163}
,
{
"name" : "xSync",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab* pVTab)",
"line" : 1164}
,
{
"name" : "xCommit",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab* pVTab)",
"line" : 1165}
,
{
"name" : "xRollback",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab* pVTab)",
"line" : 1166}
,
{
"name" : "xFindFunction",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab* pVtab, int nArg, const const(char*) zName, void C function(sqlite3_context*, int, sqlite3_value**)*, void** ppArg)",
"line" : 1169}
,
{
"name" : "xRename",
"kind" : "variable",
"type" : "int C function(sqlite3_vtab* pVtab, const const(char*) zNew)",
"line" : 1170}
]
}
,
{
"name" : "sqlite3_index_info",
"kind" : "struct",
"line" : 1176,
"members" : [
{
"name" : "sqlite3_index_constraint",
"kind" : "struct",
"line" : 1177,
"members" : [
{
"name" : "iColumn",
"kind" : "variable",
"type" : "int",
"line" : 1178}
,
{
"name" : "op",
"kind" : "variable",
"type" : "char",
"line" : 1179}
,
{
"name" : "usable",
"kind" : "variable",
"type" : "char",
"line" : 1180}
,
{
"name" : "iTermOffset",
"kind" : "variable",
"type" : "int",
"line" : 1181}
]
}
,
{
"name" : "sqlite3_index_orderby",
"kind" : "struct",
"line" : 1183,
"members" : [
{
"name" : "iColumn",
"kind" : "variable",
"type" : "int",
"line" : 1184}
,
{
"name" : "desc",
"kind" : "variable",
"type" : "char",
"line" : 1185}
]
}
,
{
"name" : "sqlite3_index_constraint_usage",
"kind" : "struct",
"line" : 1187,
"members" : [
{
"name" : "argvIndex",
"kind" : "variable",
"type" : "int",
"line" : 1188}
,
{
"name" : "omit",
"kind" : "variable",
"type" : "char",
"line" : 1189}
]
}
,
{
"name" : "nConstraint",
"kind" : "variable",
"type" : "int",
"line" : 1192}
,
{
"name" : "aConstraint",
"kind" : "variable",
"type" : "sqlite3_index_constraint*",
"line" : 1193}
,
{
"name" : "nOrderBy",
"kind" : "variable",
"type" : "int",
"line" : 1194}
,
{
"name" : "aOrderBy",
"kind" : "variable",
"type" : "sqlite3_index_orderby*",
"line" : 1195}
,
{
"name" : "aConstraintUsage",
"kind" : "variable",
"type" : "sqlite3_index_constraint_usage*",
"line" : 1197}
,
{
"name" : "idxNum",
"kind" : "variable",
"type" : "int",
"line" : 1198}
,
{
"name" : "idxStr",
"kind" : "variable",
"type" : "char*",
"line" : 1199}
,
{
"name" : "needToFreeIdxStr",
"kind" : "variable",
"type" : "int",
"line" : 1200}
,
{
"name" : "orderByConsumed",
"kind" : "variable",
"type" : "int",
"line" : 1201}
,
{
"name" : "estimatedCost",
"kind" : "variable",
"type" : "double",
"line" : 1202}
]
}
,
{
"name" : "SQLITE_INDEX_CONSTRAINT_EQ",
"kind" : "variable",
"type" : "int",
"line" : 1209}
,
{
"name" : "SQLITE_INDEX_CONSTRAINT_GT",
"kind" : "variable",
"type" : "int",
"line" : 1210}
,
{
"name" : "SQLITE_INDEX_CONSTRAINT_LE",
"kind" : "variable",
"type" : "int",
"line" : 1211}
,
{
"name" : "SQLITE_INDEX_CONSTRAINT_LT",
"kind" : "variable",
"type" : "int",
"line" : 1212}
,
{
"name" : "SQLITE_INDEX_CONSTRAINT_GE",
"kind" : "variable",
"type" : "int",
"line" : 1213}
,
{
"name" : "SQLITE_INDEX_CONSTRAINT_MATCH",
"kind" : "variable",
"type" : "int",
"line" : 1214}
,
{
"name" : "sqlite3_create_module",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(char*) zName, const const(sqlite3_module*) p, void* pClientData)",
"line" : 1219}
,
{
"name" : "sqlite3_create_module_v2",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(char*) zName, const const(sqlite3_module*) p, void* pClientData, void C function(void*) xDestroy)",
"line" : 1226}
,
{
"name" : "sqlite3_vtab",
"kind" : "struct",
"line" : 1237,
"members" : [
{
"name" : "pModule",
"kind" : "variable",
"type" : "const(sqlite3_module*)",
"line" : 1238}
,
{
"name" : "nRef",
"kind" : "variable",
"type" : "int",
"line" : 1239}
,
{
"name" : "zErrMsg",
"kind" : "variable",
"type" : "char*",
"line" : 1240}
]
}
,
{
"name" : "sqlite3_vtab_cursor",
"kind" : "struct",
"line" : 1247,
"members" : [
{
"name" : "pVtab",
"kind" : "variable",
"type" : "sqlite3_vtab*",
"line" : 1248}
]
}
,
{
"name" : "sqlite3_declare_vtab",
"kind" : "function",
"type" : "intC (sqlite3*, const const(char*) zSQL)",
"line" : 1255}
,
{
"name" : "sqlite3_overload_function",
"kind" : "function",
"type" : "intC (sqlite3*, const const(char*) zFuncName, int nArg)",
"line" : 1260}
,
{
"name" : "sqlite3_blob",
"kind" : "struct",
"line" : 1275}
,
{
"name" : "sqlite3_blob_open",
"kind" : "function",
"type" : "intC (sqlite3*, const const(char*) zDb, const const(char*) zTable, const const(char*) zColumn, long iRow, int flags, sqlite3_blob** ppBlob)",
"line" : 1280}
,
{
"name" : "sqlite3_blob_reopen",
"kind" : "function",
"type" : "intC (sqlite3_blob*, long)",
"line" : 1293}
,
{
"name" : "sqlite3_blob_close",
"kind" : "function",
"type" : "intC (sqlite3_blob*)",
"line" : 1298}
,
{
"name" : "sqlite3_blob_bytes",
"kind" : "function",
"type" : "intC (sqlite3_blob*)",
"line" : 1303}
,
{
"name" : "sqlite3_blob_read",
"kind" : "function",
"type" : "intC (sqlite3_blob*, void* Z, int N, int iOffset)",
"line" : 1308}
,
{
"name" : "sqlite3_blob_write",
"kind" : "function",
"type" : "intC (sqlite3_blob*, const const(void*) z, int n, int iOffset)",
"line" : 1313}
,
{
"name" : "sqlite3_vfs_find",
"kind" : "function",
"type" : "sqlite3_vfs*C (const const(char*) zVfsName)",
"line" : 1318}
,
{
"name" : "sqlite3_vfs_register",
"kind" : "function",
"type" : "intC (sqlite3_vfs*, int makeDflt)",
"line" : 1320}
,
{
"name" : "sqlite3_vfs_unregister",
"kind" : "function",
"type" : "intC (sqlite3_vfs*)",
"line" : 1322}
,
{
"name" : "sqlite3_mutex_alloc",
"kind" : "function",
"type" : "sqlite3_mutex*C (int)",
"line" : 1327}
,
{
"name" : "sqlite3_mutex_free",
"kind" : "function",
"type" : "voidC (sqlite3_mutex*)",
"line" : 1329}
,
{
"name" : "sqlite3_mutex_enter",
"kind" : "function",
"type" : "voidC (sqlite3_mutex*)",
"line" : 1331}
,
{
"name" : "sqlite3_mutex_try",
"kind" : "function",
"type" : "intC (sqlite3_mutex*)",
"line" : 1333}
,
{
"name" : "sqlite3_mutex_leave",
"kind" : "function",
"type" : "voidC (sqlite3_mutex*)",
"line" : 1335}
,
{
"name" : "sqlite3_mutex_methods",
"kind" : "struct",
"line" : 1340,
"members" : [
{
"name" : "xMutexInit",
"kind" : "variable",
"type" : "int C function()",
"line" : 1341}
,
{
"name" : "xMutexEnd",
"kind" : "variable",
"type" : "int C function()",
"line" : 1342}
,
{
"name" : "xMutexAlloc",
"kind" : "variable",
"type" : "sqlite3_mutex* C function(int)",
"line" : 1343}
,
{
"name" : "xMutexFree",
"kind" : "variable",
"type" : "void C function(sqlite3_mutex*)",
"line" : 1344}
,
{
"name" : "xMutexEnter",
"kind" : "variable",
"type" : "void C function(sqlite3_mutex*)",
"line" : 1345}
,
{
"name" : "xMutexTry",
"kind" : "variable",
"type" : "int C function(sqlite3_mutex*)",
"line" : 1346}
,
{
"name" : "xMutexLeave",
"kind" : "variable",
"type" : "void C function(sqlite3_mutex*)",
"line" : 1347}
,
{
"name" : "xMutexHeld",
"kind" : "variable",
"type" : "int C function(sqlite3_mutex*)",
"line" : 1348}
,
{
"name" : "xMutexNotheld",
"kind" : "variable",
"type" : "int C function(sqlite3_mutex*)",
"line" : 1349}
]
}
,
{
"name" : "sqlite3_mutex_held",
"kind" : "function",
"type" : "intC (sqlite3_mutex*)",
"line" : 1357}
,
{
"name" : "sqlite3_mutex_notheld",
"kind" : "function",
"type" : "intC (sqlite3_mutex*)",
"line" : 1359}
,
{
"name" : "SQLITE_MUTEX_FAST",
"kind" : "variable",
"type" : "int",
"line" : 1366}
,
{
"name" : "SQLITE_MUTEX_RECURSIVE",
"kind" : "variable",
"type" : "int",
"line" : 1367}
,
{
"name" : "SQLITE_MUTEX_STATIC_MASTER",
"kind" : "variable",
"type" : "int",
"line" : 1368}
,
{
"name" : "SQLITE_MUTEX_STATIC_MEM",
"kind" : "variable",
"type" : "int",
"line" : 1371}
,
{
"name" : "SQLITE_MUTEX_STATIC_MEM2",
"kind" : "variable",
"type" : "int",
"line" : 1372}
,
{
"name" : "SQLITE_MUTEX_STATIC_OPEN",
"kind" : "variable",
"type" : "int",
"line" : 1373}
,
{
"name" : "SQLITE_MUTEX_STATIC_PRNG",
"kind" : "variable",
"type" : "int",
"line" : 1374}
,
{
"name" : "SQLITE_MUTEX_STATIC_LRU",
"kind" : "variable",
"type" : "int",
"line" : 1375}
,
{
"name" : "SQLITE_MUTEX_STATIC_LRU2",
"kind" : "variable",
"type" : "int",
"line" : 1376}
,
{
"name" : "SQLITE_MUTEX_STATIC_PMEM",
"kind" : "variable",
"type" : "int",
"line" : 1377}
,
{
"name" : "sqlite3_db_mutex",
"kind" : "function",
"type" : "sqlite3_mutex*C (sqlite3*)",
"line" : 1382}
,
{
"name" : "sqlite3_file_control",
"kind" : "function",
"type" : "intC (sqlite3*, const const(char*) zDbName, int op, void*)",
"line" : 1387}
,
{
"name" : "sqlite3_test_control",
"kind" : "function",
"type" : "intC (int op,...)",
"line" : 1392}
,
{
"name" : "SQLITE_TESTCTRL_FIRST",
"kind" : "variable",
"type" : "int",
"line" : 1398}
,
{
"name" : "SQLITE_TESTCTRL_PRNG_SAVE",
"kind" : "variable",
"type" : "int",
"line" : 1399}
,
{
"name" : "SQLITE_TESTCTRL_PRNG_RESTORE",
"kind" : "variable",
"type" : "int",
"line" : 1400}
,
{
"name" : "SQLITE_TESTCTRL_PRNG_RESET",
"kind" : "variable",
"type" : "int",
"line" : 1401}
,
{
"name" : "SQLITE_TESTCTRL_BITVEC_TEST",
"kind" : "variable",
"type" : "int",
"line" : 1402}
,
{
"name" : "SQLITE_TESTCTRL_FAULT_INSTALL",
"kind" : "variable",
"type" : "int",
"line" : 1403}
,
{
"name" : "SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS",
"kind" : "variable",
"type" : "int",
"line" : 1404}
,
{
"name" : "SQLITE_TESTCTRL_PENDING_BYTE",
"kind" : "variable",
"type" : "int",
"line" : 1405}
,
{
"name" : "SQLITE_TESTCTRL_ASSERT",
"kind" : "variable",
"type" : "int",
"line" : 1406}
,
{
"name" : "SQLITE_TESTCTRL_ALWAYS",
"kind" : "variable",
"type" : "int",
"line" : 1407}
,
{
"name" : "SQLITE_TESTCTRL_RESERVE",
"kind" : "variable",
"type" : "int",
"line" : 1408}
,
{
"name" : "SQLITE_TESTCTRL_OPTIMIZATIONS",
"kind" : "variable",
"type" : "int",
"line" : 1409}
,
{
"name" : "SQLITE_TESTCTRL_ISKEYWORD",
"kind" : "variable",
"type" : "int",
"line" : 1410}
,
{
"name" : "SQLITE_TESTCTRL_PGHDRSZ",
"kind" : "variable",
"type" : "int",
"line" : 1411}
,
{
"name" : "SQLITE_TESTCTRL_SCRATCHMALLOC",
"kind" : "variable",
"type" : "int",
"line" : 1412}
,
{
"name" : "SQLITE_TESTCTRL_LAST",
"kind" : "variable",
"type" : "int",
"line" : 1413}
,
{
"name" : "sqlite3_status",
"kind" : "function",
"type" : "intC (int op, int* pCurrent, int* pHighwater, int resetFlag)",
"line" : 1418}
,
{
"name" : "SQLITE_STATUS_MEMORY_USED",
"kind" : "variable",
"type" : "int",
"line" : 1425}
,
{
"name" : "SQLITE_STATUS_PAGECACHE_USED",
"kind" : "variable",
"type" : "int",
"line" : 1426}
,
{
"name" : "SQLITE_STATUS_PAGECACHE_OVERFLOW",
"kind" : "variable",
"type" : "int",
"line" : 1427}
,
{
"name" : "SQLITE_STATUS_SCRATCH_USED",
"kind" : "variable",
"type" : "int",
"line" : 1428}
,
{
"name" : "SQLITE_STATUS_SCRATCH_OVERFLOW",
"kind" : "variable",
"type" : "int",
"line" : 1429}
,
{
"name" : "SQLITE_STATUS_MALLOC_SIZE",
"kind" : "variable",
"type" : "int",
"line" : 1430}
,
{
"name" : "SQLITE_STATUS_PARSER_STACK",
"kind" : "variable",
"type" : "int",
"line" : 1431}
,
{
"name" : "SQLITE_STATUS_PAGECACHE_SIZE",
"kind" : "variable",
"type" : "int",
"line" : 1432}
,
{
"name" : "SQLITE_STATUS_SCRATCH_SIZE",
"kind" : "variable",
"type" : "int",
"line" : 1433}
,
{
"name" : "SQLITE_STATUS_MALLOC_COUNT",
"kind" : "variable",
"type" : "int",
"line" : 1434}
,
{
"name" : "sqlite3_db_status",
"kind" : "function",
"type" : "intC (sqlite3*, int op, int* pCur, int* pHiwtr, int resetFlg)",
"line" : 1439}
,
{
"name" : "SQLITE_DBSTATUS_LOOKASIDE_USED",
"kind" : "variable",
"type" : "int",
"line" : 1445}
,
{
"name" : "SQLITE_DBSTATUS_CACHE_USED",
"kind" : "variable",
"type" : "int",
"line" : 1446}
,
{
"name" : "SQLITE_DBSTATUS_SCHEMA_USED",
"kind" : "variable",
"type" : "int",
"line" : 1447}
,
{
"name" : "SQLITE_DBSTATUS_STMT_USED",
"kind" : "variable",
"type" : "int",
"line" : 1448}
,
{
"name" : "SQLITE_DBSTATUS_LOOKASIDE_HIT",
"kind" : "variable",
"type" : "int",
"line" : 1449}
,
{
"name" : "SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE",
"kind" : "variable",
"type" : "int",
"line" : 1450}
,
{
"name" : "SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL",
"kind" : "variable",
"type" : "int",
"line" : 1451}
,
{
"name" : "SQLITE_DBSTATUS_MAX",
"kind" : "variable",
"type" : "int",
"line" : 1454}
,
{
"name" : "sqlite3_stmt_status",
"kind" : "function",
"type" : "intC (sqlite3_stmt*, int op, int resetFlg)",
"line" : 1460}
,
{
"name" : "SQLITE_STMTSTATUS_FULLSCAN_STEP",
"kind" : "variable",
"type" : "int",
"line" : 1466}
,
{
"name" : "SQLITE_STMTSTATUS_SORT",
"kind" : "variable",
"type" : "int",
"line" : 1467}
,
{
"name" : "SQLITE_STMTSTATUS_AUTOINDEX",
"kind" : "variable",
"type" : "int",
"line" : 1468}
,
{
"name" : "sqlite3_pcache",
"kind" : "struct",
"line" : 1473}
,
{
"name" : "sqlite3_pcache_methods",
"kind" : "struct",
"line" : 1478,
"members" : [
{
"name" : "pArg",
"kind" : "variable",
"type" : "void*",
"line" : 1479}
,
{
"name" : "xInit",
"kind" : "variable",
"type" : "int C function(void*)",
"line" : 1480}
,
{
"name" : "xShutdown",
"kind" : "variable",
"type" : "void C function(void*)",
"line" : 1481}
,
{
"name" : "xCreate",
"kind" : "variable",
"type" : "sqlite3_pcache* C function(int szPage, int bPurgeable)",
"line" : 1482}
,
{
"name" : "xCachesize",
"kind" : "variable",
"type" : "void C function(sqlite3_pcache*, int nCachesize)",
"line" : 1483}
,
{
"name" : "xPagecount",
"kind" : "variable",
"type" : "int C function(sqlite3_pcache*)",
"line" : 1484}
,
{
"name" : "xFetch",
"kind" : "variable",
"type" : "void* C function(sqlite3_pcache*, uint key, int createFlag)",
"line" : 1485}
,
{
"name" : "xUnpin",
"kind" : "variable",
"type" : "void C function(sqlite3_pcache*, void*, int discard)",
"line" : 1486}
,
{
"name" : "xRekey",
"kind" : "variable",
"type" : "void C function(sqlite3_pcache*, void*, uint oldKey, uint newKey)",
"line" : 1487}
,
{
"name" : "xTruncate",
"kind" : "variable",
"type" : "void C function(sqlite3_pcache*, uint iLimit)",
"line" : 1488}
,
{
"name" : "xDestroy",
"kind" : "variable",
"type" : "void C function(sqlite3_pcache*)",
"line" : 1489}
]
}
,
{
"name" : "sqlite3_backup",
"kind" : "struct",
"line" : 1495}
,
{
"name" : "sqlite3_backup_init",
"kind" : "function",
"type" : "sqlite3_backup*C (sqlite3* pDest, const const(char*) zDestName, sqlite3* pSource, const const(char*) zSourceName)",
"line" : 1500}
,
{
"name" : "sqlite3_backup_step",
"kind" : "function",
"type" : "intC (sqlite3_backup* p, int nPage)",
"line" : 1507}
,
{
"name" : "sqlite3_backup_finish",
"kind" : "function",
"type" : "intC (sqlite3_backup* p)",
"line" : 1509}
,
{
"name" : "sqlite3_backup_remaining",
"kind" : "function",
"type" : "intC (sqlite3_backup* p)",
"line" : 1511}
,
{
"name" : "sqlite3_backup_pagecount",
"kind" : "function",
"type" : "intC (sqlite3_backup* p)",
"line" : 1513}
,
{
"name" : "sqlite3_unlock_notify",
"kind" : "function",
"type" : "intC (sqlite3* pBlocked, void C function(void** apArg, int nArg) xNotify, void* pNotifyArg)",
"line" : 1518}
,
{
"name" : "sqlite3_strnicmp",
"kind" : "function",
"type" : "intC (const const(char*), const const(char*), int)",
"line" : 1528}
,
{
"name" : "sqlite3_log",
"kind" : "function",
"type" : "voidC (int iErrCode, const const(char*) zFormat,...)",
"line" : 1533}
,
{
"name" : "sqlite3_wal_hook",
"kind" : "function",
"type" : "void*C (sqlite3*, int C function(void*, sqlite3*, const const(char*), int), void*)",
"line" : 1538}
,
{
"name" : "sqlite3_wal_autocheckpoint",
"kind" : "function",
"type" : "intC (sqlite3* db, int N)",
"line" : 1547}
,
{
"name" : "sqlite3_wal_checkpoint",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(char*) zDb)",
"line" : 1552}
,
{
"name" : "sqlite3_wal_checkpoint_v2",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(char*) zDb, int eMode, int* pnLog, int* pnCkpt)",
"line" : 1557}
,
{
"name" : "SQLITE_CHECKPOINT_PASSIVE",
"kind" : "variable",
"type" : "int",
"line" : 1569}
,
{
"name" : "SQLITE_CHECKPOINT_FULL",
"kind" : "variable",
"type" : "int",
"line" : 1570}
,
{
"name" : "SQLITE_CHECKPOINT_RESTART",
"kind" : "variable",
"type" : "int",
"line" : 1571}
,
{
"name" : "sqlite3_rtree_geometry_callback",
"kind" : "function",
"type" : "intC (sqlite3* db, const const(char*) zGeom, int C function(sqlite3_rtree_geometry*, int nCoord, double* aCoord, int* pRes) xGeom, void* pContext)",
"line" : 1600}
,
{
"name" : "sqlite3_rtree_geometry",
"kind" : "struct",
"line" : 1612,
"members" : [
{
"name" : "pContext",
"kind" : "variable",
"type" : "void*",
"line" : 1613}
,
{
"name" : "nParam",
"kind" : "variable",
"type" : "int",
"line" : 1614}
,
{
"name" : "aParam",
"kind" : "variable",
"type" : "double*",
"line" : 1615}
,
{
"name" : "pUser",
"kind" : "variable",
"type" : "void*",
"line" : 1616}
,
{
"name" : "xDelUser",
"kind" : "variable",
"type" : "void C function(void*)",
"line" : 1617}
]
}
]
}
,
{
"name" : "etc.c.zlib",
"kind" : "module",
"file" : "\/usr\/include\/d\/dmd\/phobos\/etc\/c\/zlib.d",
"members" : [
{
"name" : "ZLIB_VERSION",
"kind" : "variable",
"type" : "const(char[])",
"line" : 74}
,
{
"name" : "ZLIB_VERNUM",
"kind" : "variable",
"type" : "const(int)",
"line" : 77}
,
{
"name" : "alloc_func",
"kind" : "alias",
"type" : "void* C function(void* opaque, uint items, uint size)",
"line" : 80}
,
{
"name" : "free_func",
"kind" : "alias",
"type" : "void C function(void* opaque, void* address)",
"line" : 83}
,
{
"name" : "z_stream",
"kind" : "struct",
"line" : 118,
"members" : [
{
"name" : "next_in",
"kind" : "variable",
"type" : "ubyte*",
"line" : 119}
,
{
"name" : "avail_in",
"kind" : "variable",
"type" : "uint",
"line" : 120}
,
{
"name" : "total_in",
"kind" : "variable",
"type" : "ulong",
"line" : 121}
,
{
"name" : "next_out",
"kind" : "variable",
"type" : "ubyte*",
"line" : 123}
,
{
"name" : "avail_out",
"kind" : "variable",
"type" : "uint",
"line" : 124}
,
{
"name" : "total_out",
"kind" : "variable",
"type" : "ulong",
"line" : 125}
,
{
"name" : "msg",
"kind" : "variable",
"type" : "char*",
"line" : 127}
,
{
"name" : "state",
"kind" : "variable",
"type" : "void*",
"line" : 128}
,
{
"name" : "zalloc",
"kind" : "variable",
"type" : "void* C function(void* opaque, uint items, uint size)",
"line" : 130}
,
{
"name" : "zfree",
"kind" : "variable",
"type" : "void C function(void* opaque, void* address)",
"line" : 131}
,
{
"name" : "opaque",
"kind" : "variable",
"type" : "void*",
"line" : 132}
,
{
"name" : "data_type",
"kind" : "variable",
"type" : "int",
"line" : 134}
,
{
"name" : "adler",
"kind" : "variable",
"type" : "ulong",
"line" : 135}
,
{
"name" : "reserved",
"kind" : "variable",
"type" : "ulong",
"line" : 136}
]
}
,
{
"name" : "z_streamp",
"kind" : "alias",
"type" : "z_stream*",
"line" : 140}
,
{
"name" : "gz_header",
"kind" : "struct",
"line" : 146,
"members" : [
{
"name" : "text",
"kind" : "variable",
"type" : "int",
"line" : 147}
,
{
"name" : "time",
"kind" : "variable",
"type" : "ulong",
"line" : 148}
,
{
"name" : "xflags",
"kind" : "variable",
"type" : "int",
"line" : 149}
,
{
"name" : "os",
"kind" : "variable",
"type" : "int",
"line" : 150}
,
{
"name" : "extra",
"kind" : "variable",
"type" : "byte*",
"line" : 151}
,
{
"name" : "extra_len",
"kind" : "variable",
"type" : "uint",
"line" : 152}
,
{
"name" : "extra_max",
"kind" : "variable",
"type" : "uint",
"line" : 153}
,
{
"name" : "name",
"kind" : "variable",
"type" : "byte*",
"line" : 154}
,
{
"name" : "name_max",
"kind" : "variable",
"type" : "uint",
"line" : 155}
,
{
"name" : "comment",
"kind" : "variable",
"type" : "byte*",
"line" : 156}
,
{
"name" : "comm_max",
"kind" : "variable",
"type" : "uint",
"line" : 157}
,
{
"name" : "hcrc",
"kind" : "variable",
"type" : "int",
"line" : 158}
,
{
"name" : "done",
"kind" : "variable",
"type" : "int",
"line" : 159}
]
}
,
{
"name" : "gz_headerp",
"kind" : "alias",
"type" : "gz_header*",
"line" : 164}
,
{
"name" : "Z_NO_FLUSH",
"kind" : "enum member",
"line" : 171}
,
{
"name" : "Z_PARTIAL_FLUSH",
"kind" : "enum member",
"line" : 172}
,
{
"name" : "Z_SYNC_FLUSH",
"kind" : "enum member",
"line" : 173}
,
{
"name" : "Z_FULL_FLUSH",
"kind" : "enum member",
"line" : 174}
,
{
"name" : "Z_FINISH",
"kind" : "enum member",
"line" : 175}
,
{
"name" : "Z_BLOCK",
"kind" : "enum member",
"line" : 176}
,
{
"name" : "Z_TREES",
"kind" : "enum member",
"line" : 177}
,
{
"name" : "Z_OK",
"kind" : "enum member",
"line" : 183}
,
{
"name" : "Z_STREAM_END",
"kind" : "enum member",
"line" : 184}
,
{
"name" : "Z_NEED_DICT",
"kind" : "enum member",
"line" : 185}
,
{
"name" : "Z_ERRNO",
"kind" : "enum member",
"line" : 186}
,
{
"name" : "Z_STREAM_ERROR",
"kind" : "enum member",
"line" : 187}
,
{
"name" : "Z_DATA_ERROR",
"kind" : "enum member",
"line" : 188}
,
{
"name" : "Z_MEM_ERROR",
"kind" : "enum member",
"line" : 189}
,
{
"name" : "Z_BUF_ERROR",
"kind" : "enum member",
"line" : 190}
,
{
"name" : "Z_VERSION_ERROR",
"kind" : "enum member",
"line" : 191}
,
{
"name" : "Z_NO_COMPRESSION",
"kind" : "enum member",
"line" : 199}
,
{
"name" : "Z_BEST_SPEED",
"kind" : "enum member",
"line" : 200}
,
{
"name" : "Z_BEST_COMPRESSION",
"kind" : "enum member",
"line" : 201}
,
{
"name" : "Z_DEFAULT_COMPRESSION",
"kind" : "enum member",
"line" : 202}
,
{
"name" : "Z_FILTERED",
"kind" : "enum member",
"line" : 208}
,
{
"name" : "Z_HUFFMAN_ONLY",
"kind" : "enum member",
"line" : 209}
,
{
"name" : "Z_RLE",
"kind" : "enum member",
"line" : 210}
,
{
"name" : "Z_FIXED",
"kind" : "enum member",
"line" : 211}
,
{
"name" : "Z_DEFAULT_STRATEGY",
"kind" : "enum member",
"line" : 212}
,
{
"name" : "Z_BINARY",
"kind" : "enum member",
"line" : 218}
,
{
"name" : "Z_TEXT",
"kind" : "enum member",
"line" : 219}
,
{
"name" : "Z_UNKNOWN",
"kind" : "enum member",
"line" : 220}
,
{
"name" : "Z_ASCII",
"kind" : "enum member",
"line" : 222}
,
{
"name" : "Z_DEFLATED",
"kind" : "enum member",
"line" : 228}
,
{
"name" : "Z_NULL",
"kind" : "variable",
"type" : "const(int)",
"line" : 232}
,
{
"name" : "zlibVersion",
"kind" : "function",
"type" : "char*C ()",
"line" : 236}
,
{
"name" : "deflateInit",
"kind" : "function",
"type" : "intC (z_stream* strm, int level)",
"line" : 243}
,
{
"name" : "deflate",
"kind" : "function",
"type" : "intC (z_stream* strm, int flush)",
"line" : 268}
,
{
"name" : "deflateEnd",
"kind" : "function",
"type" : "intC (z_stream* strm)",
"line" : 354}
,
{
"name" : "inflateInit",
"kind" : "function",
"type" : "intC (z_stream* strm)",
"line" : 368}
,
{
"name" : "inflate",
"kind" : "function",
"type" : "intC (z_stream* strm, int flush)",
"line" : 391}
,
{
"name" : "inflateEnd",
"kind" : "function",
"type" : "intC (z_stream* strm)",
"line" : 490}
,
{
"name" : "deflateInit2",
"kind" : "function",
"type" : "intC (z_stream* strm, int level, int method, int windowBits, int memLevel, int strategy)",
"line" : 507}
,
{
"name" : "deflateSetDictionary",
"kind" : "function",
"type" : "intC (z_stream* strm, ubyte* dictionary, uint dictLength)",
"line" : 569}
,
{
"name" : "deflateCopy",
"kind" : "function",
"type" : "intC (z_stream* dest, z_stream* source)",
"line" : 606}
,
{
"name" : "deflateReset",
"kind" : "function",
"type" : "intC (z_stream* strm)",
"line" : 623}
,
{
"name" : "inflatePrime",
"kind" : "function",
"type" : "intC (z_stream* strm, int bits, int value)",
"line" : 634}
,
{
"name" : "inflateGetHeader",
"kind" : "function",
"type" : "intC (z_stream* strm, gz_header* head)",
"line" : 648}
,
{
"name" : "deflateParams",
"kind" : "function",
"type" : "intC (z_stream* strm, int level, int strategy)",
"line" : 687}
,
{
"name" : "deflateTune",
"kind" : "function",
"type" : "intC (z_stream* strm, int good_length, int max_lazy, int nice_length, int max_chain)",
"line" : 706}
,
{
"name" : "deflateBound",
"kind" : "function",
"type" : "intC (z_stream* strm, ulong sourceLen)",
"line" : 720}
,
{
"name" : "deflatePrime",
"kind" : "function",
"type" : "intC (z_stream* strm, int bits, int value)",
"line" : 728}
,
{
"name" : "deflateSetHeader",
"kind" : "function",
"type" : "intC (z_stream* strm, gz_header* head)",
"line" : 742}
,
{
"name" : "inflateInit2",
"kind" : "function",
"type" : "intC (z_stream* strm, int windowBits)",
"line" : 765}
,
{
"name" : "inflateSync",
"kind" : "function",
"type" : "intC (z_stream* strm)",
"line" : 829}
,
{
"name" : "inflateCopy",
"kind" : "function",
"type" : "intC (z_stream* dest, z_stream* source)",
"line" : 844}
,
{
"name" : "inflateReset",
"kind" : "function",
"type" : "intC (z_stream* strm)",
"line" : 859}
,
{
"name" : "inflateBackInit",
"kind" : "function",
"type" : "intC (z_stream* strm, int windowBits, ubyte* window)",
"line" : 870}
,
{
"name" : "in_func",
"kind" : "alias",
"type" : "uint C function(void*, ubyte**)",
"line" : 893}
,
{
"name" : "out_func",
"kind" : "alias",
"type" : "int C function(void*, ubyte*, uint)",
"line" : 894}
,
{
"name" : "inflateBack",
"kind" : "function",
"type" : "intC (z_stream* strm, uint C function(void*, ubyte**) f_in, void* in_desc, int C function(void*, ubyte*, uint) f_out, void* out_desc)",
"line" : 896}
,
{
"name" : "inflateBackEnd",
"kind" : "function",
"type" : "intC (z_stream* strm)",
"line" : 967}
,
{
"name" : "zlibCompileFlags",
"kind" : "function",
"type" : "uintC ()",
"line" : 975}
,
{
"name" : "compress",
"kind" : "function",
"type" : "intC (ubyte* dest, ulong* destLen, ubyte* source, ulong sourceLen)",
"line" : 1026}
,
{
"name" : "compress2",
"kind" : "function",
"type" : "intC (ubyte* dest, ulong* destLen, ubyte* source, ulong sourceLen, int level)",
"line" : 1043}
,
{
"name" : "compressBound",
"kind" : "function",
"type" : "ulongC (ulong sourceLen)",
"line" : 1061}
,
{
"name" : "uncompress",
"kind" : "function",
"type" : "intC (ubyte* dest, ulong* destLen, ubyte* source, ulong sourceLen)",
"line" : 1068}
,
{
"name" : "gzFile",
"kind" : "typedef",
"type" : "gzFile",
"line" : 1089,
"base" : "void*"}
,
{
"name" : "z_off_t",
"kind" : "alias",
"type" : "int",
"line" : 1090}
,
{
"name" : "gzopen",
"kind" : "function",
"type" : "gzFileC (char* path, char* mode)",
"line" : 1092}
,
{
"name" : "gzdopen",
"kind" : "function",
"type" : "gzFileC (int fd, char* mode)",
"line" : 1109}
,
{
"name" : "gzsetparams",
"kind" : "function",
"type" : "intC (gzFile file, int level, int strategy)",
"line" : 1122}
,
{
"name" : "gzread",
"kind" : "function",
"type" : "intC (gzFile file, void* buf, uint len)",
"line" : 1130}
,
{
"name" : "gzwrite",
"kind" : "function",
"type" : "intC (gzFile file, void* buf, uint len)",
"line" : 1138}
,
{
"name" : "gzprintf",
"kind" : "function",
"type" : "intC (gzFile file, char* format,...)",
"line" : 1145}
,
{
"name" : "gzputs",
"kind" : "function",
"type" : "intC (gzFile file, char* s)",
"line" : 1158}
,
{
"name" : "gzgets",
"kind" : "function",
"type" : "char*C (gzFile file, char* buf, int len)",
"line" : 1165}
,
{
"name" : "gzputc",
"kind" : "function",
"type" : "intC (gzFile file, int c)",
"line" : 1174}
,
{
"name" : "gzgetc",
"kind" : "function",
"type" : "intC (gzFile file)",
"line" : 1180}
,
{
"name" : "gzungetc",
"kind" : "function",
"type" : "intC (int c, gzFile file)",
"line" : 1186}
,
{
"name" : "gzflush",
"kind" : "function",
"type" : "intC (gzFile file, int flush)",
"line" : 1196}
,
{
"name" : "gzseek",
"kind" : "function",
"type" : "intC (gzFile file, int offset, int whence)",
"line" : 1206}
,
{
"name" : "gzrewind",
"kind" : "function",
"type" : "intC (gzFile file)",
"line" : 1223}
,
{
"name" : "gztell",
"kind" : "function",
"type" : "intC (gzFile file)",
"line" : 1230}
,
{
"name" : "gzeof",
"kind" : "function",
"type" : "intC (gzFile file)",
"line" : 1239}
,
{
"name" : "gzdirect",
"kind" : "function",
"type" : "intC (gzFile file)",
"line" : 1245}
,
{
"name" : "gzclose",
"kind" : "function",
"type" : "intC (gzFile file)",
"line" : 1251}
,
{
"name" : "gzerror",
"kind" : "function",
"type" : "char*C (gzFile file, int* errnum)",
"line" : 1258}
,
{
"name" : "gzclearerr",
"kind" : "function",
"type" : "voidC (gzFile file)",
"line" : 1267}
,
{
"name" : "adler32",
"kind" : "function",
"type" : "uintC (uint adler, ubyte* buf, uint len)",
"line" : 1282}
,
{
"name" : "adler32_combine",
"kind" : "function",
"type" : "uintC (uint adler1, uint adler2, int len2)",
"line" : 1299}
,
{
"name" : "crc32",
"kind" : "function",
"type" : "uintC (uint crc, ubyte* buf, uint len)",
"line" : 1307}
,
{
"name" : "crc32_combine",
"kind" : "function",
"type" : "uintC (uint crc1, uint crc2, int len2)",
"line" : 1323}
,
{
"name" : "deflateInit_",
"kind" : "function",
"type" : "intC (z_stream* strm, int level, const const(char*) versionx, int stream_size)",
"line" : 1339}
,
{
"name" : "inflateInit_",
"kind" : "function",
"type" : "intC (z_stream* strm, const const(char*) versionx, int stream_size)",
"line" : 1344}
,
{
"name" : "deflateInit2_",
"kind" : "function",
"type" : "intC (z_stream* strm, int level, int method, int windowBits, int memLevel, int strategy, const const(char*) versionx, int stream_size)",
"line" : 1348}
,
{
"name" : "inflateBackInit_",
"kind" : "function",
"type" : "intC (z_stream* strm, int windowBits, ubyte* window, const const(char*) z_version, int stream_size)",
"line" : 1357}
,
{
"name" : "inflateInit2_",
"kind" : "function",
"type" : "intC (z_stream* strm, int windowBits, const const(char*) versionx, int stream_size)",
"line" : 1363}
,
{
"name" : "zError",
"kind" : "function",
"type" : "char*C (int err)",
"line" : 1368}
,
{
"name" : "inflateSyncPoint",
"kind" : "function",
"type" : "intC (z_stream* z)",
"line" : 1369}
,
{
"name" : "get_crc_table",
"kind" : "function",
"type" : "uint*C ()",
"line" : 1370}
]
}
]
