Sections

The document comment is a series of Sections. A Section is a name that is the first non-blank character on a line immediately followed by a ':'. This name forms the section name. The section name is not case sensitive.
Summary

The first section is the Summary, and does not have a section name. It is first paragraph, up to a blank line or a section name. While the summary can be any length, try to keep it to one line. The Summary section is optional.
Description

The next unnamed section is the Description. It consists of all the paragraphs following the Summary until a section name is encountered or the end of the comment.

While the Description section is optional, there cannot be a Description without a Summary section.

/***********************************
 * Brief summary of what
 * myfunc does, forming the summary section.
 *
 * First paragraph of synopsis description.
 *
 * Second paragraph of
 * synopsis description.
 */

void myfunc() { }

Named sections follow the Summary and Description unnamed sections.
Standard Sections

For consistency and predictability, there are several standard sections. None of these are required to be present.

Authors:
    Lists the author(s) of the declaration.

    /**
     * Authors: Melvin D. Nerd, melvin@mailinator.com
     */

Bugs:
    Lists any known bugs.

    /**
     * Bugs: Doesn't work for negative values.
     */

Date:
    Specifies the date of the current revision. The date should be in a form parseable by std.date.

    /**
     * Date: March 14, 2003
     */

Deprecated:
    Provides an explanation for and corrective action to take if the associated declaration is marked as deprecated.

    /**
     * Deprecated: superseded by function bar().
     */

    deprecated void foo() { ... }

Examples:
    Any usage examples

    /**
     * Examples:
     * --------------------
     * writefln("3"); // writes '3' to stdout
     * --------------------
     */

History:
    Revision history.

    /**
     * History:
     *	V1 is initial version
     *
     *	V2 added feature X
     */

License:
    Any license information for copyrighted code.

    /**
     * License: use freely for any purpose
     */

    void bar() { ... }

Returns:
    Explains the return value of the function. If the function returns void, don't redundantly document it.

    /**
     * Read the file.
     * Returns: The contents of the file.
     */

    void[] readFile(char[] filename) { ... }

See_Also:
    List of other symbols and URL's to related items.

    /**
     * See_Also:
     *    foo, bar, http://www.digitalmars.com/d/phobos/index.html
     */

Standards:
    If this declaration is compliant with any particular standard, the description of it goes here.

    /**
     * Standards: Conforms to DSPEC-1234
     */

Throws:
    Lists exceptions thrown and under what circumstances they are thrown.

    /**
     * Write the file.
     * Throws: WriteException on failure.
     */

    void writeFile(char[] filename) { ... }

Version:
    Specifies the current version of the declaration.

    /**
     * Version: 1.6a
     */

Special Sections

Some sections have specialized meanings and syntax.

Copyright:
    This contains the copyright notice. The macro COPYRIGHT is set to the contents of the section when it documents the module declaration. The copyright section only gets this special treatment when it is for the module declaration.

    /** Copyright: Public Domain */

    module foo;

Params:
    Function parameters can be documented by listing them in a params section. Each line that starts with an identifier followed by an '=' starts a new parameter description. A description can span multiple lines.

    /***********************************
     * foo does this.
     * Params:
     *	x =	is for this
     *		and not for that
     *	y =	is for that
     */

    void foo(int x, int y)
    {
    }

Macros:
    The macros section follows the same syntax as the Params: section. It's a series of NAME=value pairs. The NAME is the macro name, and value is the replacement text.

    /**
     * Macros:
     *	FOO =	now is the time for
     *		all good men
     *	BAR =	bar
     *	MAGENTA =   &lt;font color=magenta&gt;&lt;/font&gt;
     */
