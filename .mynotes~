Sun, 30 Oct 2011 01:22:10 -0400 

    Thought I had saved some notes here before... oh well gone now
    
    DComposer an IDE for the D Programming Language.
    Copyright 2011 Anthony Goins
    
    
    So the program parts (modules)
    
    dcomposer   -- It all starts here, simple and to the point.
    
    dcore       -- The main components that should not depend on gtk.  Just in case I should want to switch gui libraries.
    -dproject   -- the object representing a d project (actually dmd)  Different project types should be easy to add.
    -symbols    -- class holding symbol information. Default tags include std (IE Phobos) gtk (gtkd specifically) and tags for the current project.
    -log        -- simple log module (too simple and broken ... can't get it to flush on exceptions)
    -config     -- holds all user configurable options.  Hopefully will be very extensive
    
    
    ui          -- holds all ui core components (menu-bar, tool-bar, 3 panes, status-bar, actions, accelerators)
    -docman     -- wanted this to be in dcore but it's really just a front for a gtknotebook, documentif is here too, in the future will allow non text file editing. (rad GUI stuff??)
    -document   -- for now just a slightly modified sourceview object
    -docpop     -- a simple window with a treeview for showing calltips, scopelists, symbol completion
    
    elements    -- wanted to do a plug-in system here but dmd lacks shared objects.  So going to use object factory for now
    -logui      -- shows log entries in a treeview
    -searchui   -- search dialog/page needs much work right now.. should have done a search module under dcore first
    -projectdui -- ui to dproject 
    -symview    -- list of loaded tags on the side pane
    -calltips   -- fills docpop with function signatures to reduce time looking up api/documentation from a seperate source
    -indent     -- automatically indents/outdents on brackets
    
    
*   to do before i make this thing public
    
    dcore
    - a search enging
   
    ui
    - ??? trying to keep ui minimal
    
    elements
    - buildmessages     -- treeview of dmd (gdc/ldc) error messages features ... highlite , jumpto file:line, links to bugreports online (that would be helpful) and other error help
    - terminal          -- very simple vte widget
    - scopelist         -- my name for showing all members of a symbol after typing the "."
    - symcomp           -- use docpop to show possible completion for a partial candidate
    - projectview       -- simple side pane page showing most relevant project info and actions
    - dirview           -- directory browser
    - docview           -- list of open documents on side pane properties/info for current file (or selected file)
    
*   important things to do after I make this public
    - bugsquash
    - lua scripting
    - streamline / improve gui stuff 
    - how to make it smaller almost 9 megs (dmd 2.056) (9.5 w/ 2.055)
    - 
    
*   things that will take a lot of work (and learning about).  These are things that are either must haves or I personally would love do.
    - first and foremost ... integrated debugging  what the hell good is an ide with no debugging
    
    - documentation ... a help wiki
                        any keyword or function could link to a publically edited wiki page describing things a novice would need to know.
                        simple stuff  no complex issues no questions just facts and personal experiences to emphasize correct usage.
                        such as foreach needs to specify ref or your working with a copy
                        switch needs a default and expects all enum members ....
                        all the phobos functions 
                        make it easy for users to add to the wiki right from the ide submitting examples, ambiguities, clearifications ... blah blah blah
                        
    - refactoring ... hell I really don't know what this means.  Really advanced search and replace?? But I've noticed people seem to expect it in an ide.
    

---

I've mentioned before somewhere that this project is a learning experience.  I am a self taught "programmer" (loosely used term.) I have no formal education or real world experience. this is actually the first project of any size or complexity I've undertaken.  So if you choose to try this program I expect you will be disappointed in more than one way.

A. stability ... I haven't worried about this at all yet. I have chosen a method to solve each problem then watched it fail horribly... followed by somewhat random trial and error hacks until it "seems" to work. Finally I move on to the next item.  I'm figuring its better to get as much done quickly before I get caught up in details, bored, stagnant, discouraged and give up.  I hope this does not turn out to be the death of this project.

B. Interface ... I had some really great interface ideas, damn reality got in the way,  nothing seems to flow as smoothly as I'd hoped.  But all this can be fixed given a little time but first I'm going to get meat working then put on the skin an make up.

C. Limitations ... Only D2, Only DMD, only Linux.  I plan on testing dcomposer on PC-BSD (haven't booted that up in over a year got comfortable in linux) Can't afford anything Apple makes. Don't like Windows.  I need to get GDC and LDC to make dcomposer a little more flexible.                     
        
    
    
Enough of all that

next up on my to do list ScopeList, then SymCompletion


Wed, 02 Nov 2011 01:11:28 -0400 

ok for now calltips, scopelists and symcompletion are done.
plenty of bugs but I'll come back to them later.  So much to do.

more todo list stuff

--- hoover tooltips (showing what each symbol is (name for templates, type for variables, ...
--- code navigation (goto definitions ... pretty much there already, but part of the next point1
--- document actions (short cuts and context menu additions to do more stuff
--- doc navigaton   (move thru statements blocks functions class/structs etc with handydandy short cuts
--- dirview (browse file system
--- docview (browse open documents ... and maybe imports??
---

    
