Sun, 30 Oct 2011 01:22:10 -0400 

    Thought I had saved some notes here before... oh well gone now
    
    DComposer an IDE for the D Programming Language.
    Copyright 2011 Anthony Goins
    
    
    So the program parts (modules)
    
    dcomposer   -- It all starts here, simple and to the point.
    
    dcore       -- The main components that should not depend on gtk.  Just in case I should want to switch gui libraries.
    -dproject   -- the object representing a d project (actually dmd)  Different project types should be easy to add.
    -symbols    -- class holding symbol information. Default tags include std (IE Phobos) gtk (gtkd specifically) and tags for the current project.
    -log        -- simple log module (too simple and broken ... can't get it to flush on exceptions)
    -config     -- holds all user configurable options.  Hopefully will be very extensive
    
    
    ui          -- holds all ui core components (menu-bar, tool-bar, 3 panes, status-bar, actions, accelerators)
    -docman     -- wanted this to be in dcore but it's really just a front for a gtknotebook, documentif is here too, in the future will allow non text file editing. (rad GUI stuff??)
    -document   -- for now just a slightly modified sourceview object
    -docpop     -- a simple window with a treeview for showing calltips, scopelists, symbol completion
    
    elements    -- wanted to do a plug-in system here but dmd lacks shared objects.  So going to use object factory for now
    -logui      -- shows log entries in a treeview
    -searchui   -- search dialog/page needs much work right now.. should have done a search module under dcore first
    -projectdui -- ui to dproject 
    -symview    -- list of loaded tags on the side pane
    -calltips   -- fills docpop with function signatures to reduce time looking up api/documentation from a seperate source
    -indent     -- automatically indents/outdents on brackets
    
    
*   to do before i make this thing public
    
    dcore
    - a search engine
    - ??? trying to keep ui minimal
    
    elements
    - buildmessages     -- treeview of dmd (gdc/ldc) error messages features ... highlite , jumpto file:line, links to bugreports online (that would be helpful) and other error help
    - terminal          -- very simple vte widget
    - scopelist         -- my name for showing all members of a symbol after typing the "."
    - symcomp           -- use docpop to show possible completion for a partial candidate
    - projectview       -- simple side pane page showing most relevant project info and actions
    - dirview           -- directory browser
    - docview           -- list of open documents on side pane properties/info for current file (or selected file)
    
*   important things to do after I make this public
    - bugsquash
    - lua scripting
    - streamline / improve gui stuff 
    - how to make it smaller almost 9 megs (dmd 2.056) (9.5 w/ 2.055)
    - 
    
*   things that will take a lot of work (and learning about).  These are things that are either must haves or I personally would love do.
    - first and foremost ... integrated debugging  what the hell good is an ide with no debugging
    
    - documentation ... a help wiki
                        any keyword or function could link to a publically edited wiki page describing things a novice would need to know.
                        simple stuff  no complex issues no questions just facts and personal experiences to emphasize correct usage.
                        such as foreach needs to specify ref or your working with a copy
                        switch needs a default and expects all enum members ....
                        all the phobos functions 
                        make it easy for users to add to the wiki right from the ide submitting examples, ambiguities, clearifications ... blah blah blah
                        
    - refactoring ... hell I really don't know what this means.  Really advanced search and replace?? But I've noticed people seem to expect it in an ide.
    

---

I've mentioned before somewhere that this project is a learning experience.  I am a self taught "programmer" (loosely used term.) I have no formal education or real world experience. this is actually the first project of any size or complexity I've undertaken.  So if you choose to try this program I expect you will be disappointed in more than one way.

A. stability ... I haven't worried about this at all yet. I have chosen a method to solve each problem then watched it fail horribly... followed by somewhat random trial and error hacks until it "seems" to work. Finally I move on to the next item.  I'm figuring its better to get as much done quickly before I get caught up in details, bored, stagnant, discouraged and give up.  I hope this does not turn out to be the death of this project.

B. Interface ... I had some really great interface ideas, damn reality got in the way,  nothing seems to flow as smoothly as I'd hoped.  But all this can be fixed given a little time but first I'm going to get meat working then put on the skin an make up.

C. Limitations ... Only D2, Only DMD, only Linux.  I plan on testing dcomposer on PC-BSD (haven't booted that up in over a year got comfortable in linux) Can't afford anything Apple makes. Don't like Windows.  I need to get GDC and LDC to make dcomposer a little more flexible.                     
        
    
    
Enough of all that

next up on my to do list ScopeList, then SymCompletion

========================================================================================================================
Wed, 02 Nov 2011 01:11:28 -0400 

ok for now calltips, scopelists and symcompletion are done.
plenty of bugs but I'll come back to them later.  So much to do.

more todo list stuff

--- hoover tooltips (showing what each symbol is (name for templates, type for variables, ...
--- code navigation (goto definitions ... pretty much there already, but part of the next point1
--- document actions (short cuts and context menu additions to do more stuff
--- doc navigaton   (move thru statements blocks functions class/structs etc with handydandy short cuts
--- dirview (browse file system
--- docview (browse open documents ... and maybe imports??
--- history (recent files ... lets do this soon it would be very convenient for all the testing I'm doing 

    

========================================================================================================================
04.11.2011 07:39:57

'finished' terminal. More needs to be done but it does work.

next up thoughts

--- project view
--- config ui ... this is going to be huge(new element IF function getoptions and more config core stuff)
--- search core
--- new search ui
--- new project ui ... switch to dialog and make improvements
--- recent files ... do this when I have limited time, should be a fairly simple interface to gtk history
--- dirview ... this seems so simple and obvious hard to believe it isn't an object in glade


========================================================================================================================
Thu, 10 Nov 2011 00:56:38 -0500 

Happy Bday to me... oops, past almost an hour ago, darn!

Anyway "finished" dirview tonight.

next steps in my head
- history / recent files
- create a debugger branch ... I foresee terrible trouble but I stay here just the same

- best for last ... the super duper, end all, be all, ignorance ending, king of all documentation systems!
    just a matter of implementation, time, know how, resources, determination ... oh crap.

^^ new section "what I learned today"
    if you use dirEntries return value it vaporizes 
    so don't do this...
    ---    
    auto x = dirEntries(blah, blah blah)
    writeln(x)
    foreach (y; x) ... no y's;
    ---
    I need to take a gander at std.file code.
    
========================================================================================================================
Thu, 10 Nov 2011 22:19:52 -0500 

I've been reading up on gdb/mi.

Seems pretty straight forward.
One problem I'd like to solve though is how to display d strings.
char[] show up as (ucent *)  thinking that there must be some simple way to 
convert that into a string right?

Another problem is the interface.  Gdb front ends are just so ... ugly.
So, I'm thinking keep it very simple, just the most basic functions.
    -- run /continue / run to location,cursor
    -- set clear breakpoint (no conditional breaks?)
    -- set clear watch variables (keep getting no x in current context error
    -- next line (step over) and next line (step in)
    -- no register view no assembly stuff 
    -- simple call stack
========================================================================================================================
Fri, 6 Jan 2012 22:35:15 -0500

I've had a long break from DComposer.
Now It's time to get back in head first.
But... where to start?
Errors and bugs abound.
Lots of stuff just doesn't work the way I want it to (much less the way it should.)
I'm satisfied with the basic structure, so I'm thinking of just going file by file; function by function and rewriting
everything.  No not a complete rewrite, just make sure everything is what it is supposed to be.
Thinking it will be easier than finding mistakes strung out through all the code.
But I must admit I'm reluctant to start working on anything that prevents me from seeing and testing immediate results.
It just feels better to add a few lines of code and then be able to see the results.

Okay... some thoughts on improvements (new stuff vs fixes.) 
Still need to add search as a core component.
Seperate Dproject so its just Project and then have dmd/gdc/ldc subprojects

OMG I almost forgot the most important feature of my ide!!
The help system. That was the biggest reason for starting this project.
Now I haven't even thought about it in months.  Gotta be done.

Actually decided to buckle down and learn vim... (using gvim right now)
two things
1. Makes me reconsider making an ide, at least with gtksourceview.  How can I compete with vim?
2. Makes me consider replacing gtksourceview with vim (how hard would it be to make a gtkvim widget??) or use vim keys


my 10 year old: instead of a toilet seat ... a toilet couch 
========================================================================================================================
Tuesday, 7 February 2012

Reading programming books on the kindle.  There are whole chapters devoted to why one should not do things the way I've 
been doing them.  Very interesting, very educational.  The kindle is great but I must admit I prefer holding paper in 
my hands.  

I'll be much better prepared for my next project, aint learning grand!

What I want to do now...

1.  d language help
2.  document context menus (jump to, help, snippets, whatever)
3.  lua/python scripting??
4.  oh yeah I need some icons!

========================================================================================================================

Thursday, 9 February 2012

What I'm going to work on tonight.  After I take the kids to Sandpiper to meet Erica for "lunch"

CodeCompletion -- fix scope errors --> std.file.File.  multiple '.'s do not work correctly
Icons -- something I can see and feel
Help  -- get started on this


========================================================================================================================
Saturday, 11 February 2012

CodeCompletion is much better.
BUT ... sometimes crashes on '.' input (std.c. == crash , or any one letter .l. combo?)

========================================================================================================================
Thursday, 15 March 2012

CodeCompletion is even Better now!! (still crappy tho :)

planned menu (who uses menus anymore)

SYSTEM		:	VIEW		:	DOCUMENTS	:	EDIT	:	PROJECT	:	TOOLS	:	HELP
Print 		:	Toolbar		:	New			:	Undo	:	New		:			:	Manual
Search 		: 	Side		:	New Type >	:	Redo	:	Open 	:			: 	Elements >
Preference	:	Extra 		:	Open 		: 	Cut		:	Options :			:	About 
Quit		:	Status 		:	Save 		:	Copy	: 	Refresh :			:
			:	Elements >	:	Save As		:	Paste	:	Build 	:			:
			:				:	Save All	:	Delete	:	Run		:			:
			:				:	Close 		:	Sel All	:	Run/Args:			:
			:				:	Close All	:	Sel None:			:			:
			
Big list of stuff to tweak (doesn't count things to add)

Menu 			-> organize (see above)
Toolbar 		-> icons!!!! (maybe I'll stick with unicode strings for icons??)
				-> User configurable
SidePane
	Symbols		-> show symbol ddoc comments
				-> add/remove tags from ui?
				-> if not doc stuff then something to show user more info about the symbol (ie signature or whatever)
	History		-> ctrl-H switches to page ✔
				-> allow filtering
	Project 	-> two toolbars? to see all buttons or remove some (no don't remove any)
				-> actually I kind of like this page
	Dirview		-> add a context menu
				-> real icons
				-> better sorting (sort by name but with folders first (or last))
ExtraPane
	LogView		-> maybe (big maybe) color code for engaging/disengaging vs in mainloop stuff (who doesn't like colors)
	Buildmsgs	-> needs to indicate when changed (if build messages are exactly the same can't be sure if anything happened at all)
	Debugger 	-> amputate and reattach a new one that actually makes sense
	Search 		-> implement all the features
				-> lots of room here for tweaks
	Terminal	-> Simple works not lots to do here
				-> maybe allow color font preferences if not to much c coding is needed
	Assistance	-> show more symbol info than just doc comments 
				-> prettify  the whole thing with colors and fonts .... blah blah blah

CenterPane
    Documents   -> turn off completion/calltip stuff when not editing D source code
                -> better context menu stuff

StatusBar       -> Find a Better use for it! Or any use.                


	
				
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~				
Features I'm thinking of right now
	Config/Preferences
		this is bigger than it looks.
		have to add a Reconfigure function to each core/ui/element module to allow on the fly changes
		have to supply a gui for each module
		should have took this in to account at design beginning.  Price of being a noob I guess. 
		
	External Tools
		allow using external shell commands to run with dcomposer variables
		
	VCS
		yes I want this now (force me to learn more about git at least)
	
	Print

    Format

    Bookmarks

    Auto save/backup

    Snippets
    
========================================================================================================================
Friday, 16 March 2012

Nothing accomplished today!
Feels so wrong.

========================================================================================================================
Saturday, 17 March 2012

working on new branch for assistant
so far ..
works ok with autopopups

just realized that call tips wont work when a ( returns no possible calltips throws off the whole call tip treeview

========================================================================================================================
Sunday, 17 March 2012

Done with assistant for now.
What it does...
    1.  Shows symbol information for items in autopopups
    2.  Shows a screwy kind of tooltip feature for mouse hovering
    3.  Shows symbol information when symbolview cursor changes
    4.  Jumps to symbol definitions
    5.  Follows children symbols when clicked on

Where it fails
    1.  Mouse hover feature is really annoying (unexpectedly changes the symbol)
    2.  No web link yet (can't imagine this will be too hard)
    3.  Crippled by symbols module short comings (ie unable to correctly follow function return values and/or member scoped objects)
    4.  TextView for comments is not pretty.
    5.  Child treeview model could be a treestore vs a liststore.

Other stuff
    1.  Replace insert button with a parent button.
    2.  ???

Over all I'm very satisfied.  Of course it's not perfect and others might think it's silly.
But it is mine, I made it, I think it has potential.

Anyway, I'm done with the assistant branch for now.

The critical question now is ... "What's next?"

========================================================================================================================
Monday, 3 April 2012

OMG switch from glade-gtk2 to glade.
I was actually trying to see if devhelp would be enabled in glade since it stopped working in glade-gtk2.
Nope, apparently devhelp is too old in Ubuntu repo to work.

Anyway... after opening and closing in glade several widget names had been changed.  This problem was hard to find at first
because I knew I hadn't made any changes.  What a pain in the ass!  Builder.addFromFile should really complain if some object
doesn't exist in the file. (ok ok I guess returning null is a complaint but who the hell checks return values?)

A very frustrating day.  Also could not figure out how to reliably set window position and size to equal last session.  The hard 
part was(is) setting the Paned.setPosition.  It seems to go fine, then just doesn't work. Something somewhere just resizes it
to some 'default' value.  Experimented with all the glade options just figuring out what they do.  Guess what, ended up with
a total mess.  Anyway it seems to work now (like a few times before) you just have to say the magic words before launching the app.
I foresee coming back to this one.

So what is next on the naive IDE horizon??

Preferences, a fully implemented GUI preference dialog thingy.
If I can pull this off I will be very pleased with myself.

Work (real life postal work) is threatening 6 days 10 hours.  So unless my kids surprise me and learn to cut grass, wash cars, cook,
do laundry, wash dishes, scrub toilets, etc. My programming (use loose definition plz) time may be cut back a little.

One more thing before bed.  I have a list (limited to 3 things max for each module) of to-do stuff.  Small stuff for the most part
but taken together could make a marked improvement. 

========================================================================================================================
Tuesday, 20 May 2012

Lots of problems!
1. MainWindow resizes at random! wtf.
2. upgrade to dmd 2.059 must have changed std.xml.decode setting, markups is broken
3. when "jumping to" a symbol source view will not scroll to mark properly
4. when debugging dealing with external document changes freezes everything
5. dragging text gets screwed up (I think because of autopopups)

This is what comes from messing with code when you're half (actually 99.9%) asleep and you don't have a specific goal to accomplish.

ok so far
1.- Has not repeated do not know what I fiddled with keep a weather eye out
2.* Hack Hack encode symbol name (because of template constraints) then decode (just doesn't seem right)
3.  guessing document isn't sized yet so can not scroll properly.... thinking of a simple fixed
4.  no solutions but an admonition to clean up the attempted fixes (smelly code)
5.* disabled calltips at OnDragBegin and enabled at OnDragEnd

simple stuff
A. Open projects from command line
B. --help option
C. Drag and Drop file opening

Learning plenty here.  Every little change causes a stupid headache! 
added a scrollbar parent to a notebook page in glade
now everything that referred to that page actually wants the parent.

Couldn't figure out why dirview would not sort or even call my sortfunction.
At some point I had added a refresh function that completely replaced the liststore
nullifing the sortfunction.  Feels so wrong to add the code that fixed it.

On new projects I will take more time working out kinks at the beginning.
