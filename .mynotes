Sun, 30 Oct 2011 01:22:10 -0400 

    Thought I had saved some notes here before... oh well gone now
    
    DComposer an IDE for the D Programming Language.
    Copyright 2011 Anthony Goins
    
    
    So the program parts (modules)
    
    dcomposer   -- It all starts here, simple and to the point.
    
    dcore       -- The main components that should not depend on gtk.  Just in case I should want to switch gui libraries.
    -dproject   -- the object representing a d project (actually dmd)  Different project types should be easy to add.
    -symbols    -- class holding symbol information. Default tags include std (IE Phobos) gtk (gtkd specifically) and tags for the current project.
    -log        -- simple log module (too simple and broken ... can't get it to flush on exceptions)
    -config     -- holds all user configurable options.  Hopefully will be very extensive
    
    
    ui          -- holds all ui core components (menu-bar, tool-bar, 3 panes, status-bar, actions, accelerators)
    -docman     -- wanted this to be in dcore but it's really just a front for a gtknotebook, documentif is here too, in the future will allow non text file editing. (rad GUI stuff??)
    -document   -- for now just a slightly modified sourceview object
    -docpop     -- a simple window with a treeview for showing calltips, scopelists, symbol completion
    
    elements    -- wanted to do a plug-in system here but dmd lacks shared objects.  So going to use object factory for now
    -logui      -- shows log entries in a treeview
    -searchui   -- search dialog/page needs much work right now.. should have done a search module under dcore first
    -projectdui -- ui to dproject 
    -symview    -- list of loaded tags on the side pane
    -calltips   -- fills docpop with function signatures to reduce time looking up api/documentation from a seperate source
    -indent     -- automatically indents/outdents on brackets
    
    
*   to do before i make this thing public
    
    dcore
    - a search engine
    - ??? trying to keep ui minimal
    
    elements
    - buildmessages     -- treeview of dmd (gdc/ldc) error messages features ... highlite , jumpto file:line, links to bugreports online (that would be helpful) and other error help
    - terminal          -- very simple vte widget
    - scopelist         -- my name for showing all members of a symbol after typing the "."
    - symcomp           -- use docpop to show possible completion for a partial candidate
    - projectview       -- simple side pane page showing most relevant project info and actions
    - dirview           -- directory browser
    - docview           -- list of open documents on side pane properties/info for current file (or selected file)
    
*   important things to do after I make this public
    - bugsquash
    - lua scripting
    - streamline / improve gui stuff 
    - how to make it smaller almost 9 megs (dmd 2.056) (9.5 w/ 2.055)
    - 
    
*   things that will take a lot of work (and learning about).  These are things that are either must haves or I personally would love do.
    - first and foremost ... integrated debugging  what the hell good is an ide with no debugging
    
    - documentation ... a help wiki
                        any keyword or function could link to a publically edited wiki page describing things a novice would need to know.
                        simple stuff  no complex issues no questions just facts and personal experiences to emphasize correct usage.
                        such as foreach needs to specify ref or your working with a copy
                        switch needs a default and expects all enum members ....
                        all the phobos functions 
                        make it easy for users to add to the wiki right from the ide submitting examples, ambiguities, clearifications ... blah blah blah
                        
    - refactoring ... hell I really don't know what this means.  Really advanced search and replace?? But I've noticed people seem to expect it in an ide.
    

---

I've mentioned before somewhere that this project is a learning experience.  I am a self taught "programmer" (loosely used term.) I have no formal education or real world experience. this is actually the first project of any size or complexity I've undertaken.  So if you choose to try this program I expect you will be disappointed in more than one way.

A. stability ... I haven't worried about this at all yet. I have chosen a method to solve each problem then watched it fail horribly... followed by somewhat random trial and error hacks until it "seems" to work. Finally I move on to the next item.  I'm figuring its better to get as much done quickly before I get caught up in details, bored, stagnant, discouraged and give up.  I hope this does not turn out to be the death of this project.

B. Interface ... I had some really great interface ideas, damn reality got in the way,  nothing seems to flow as smoothly as I'd hoped.  But all this can be fixed given a little time but first I'm going to get meat working then put on the skin an make up.

C. Limitations ... Only D2, Only DMD, only Linux.  I plan on testing dcomposer on PC-BSD (haven't booted that up in over a year got comfortable in linux) Can't afford anything Apple makes. Don't like Windows.  I need to get GDC and LDC to make dcomposer a little more flexible.                     
        
    
    
Enough of all that

next up on my to do list ScopeList, then SymCompletion

========================================================================================================================
Wed, 02 Nov 2011 01:11:28 -0400 

ok for now calltips, scopelists and symcompletion are done.
plenty of bugs but I'll come back to them later.  So much to do.

more todo list stuff

--- hoover tooltips (showing what each symbol is (name for templates, type for variables, ...
--- code navigation (goto definitions ... pretty much there already, but part of the next point1
--- document actions (short cuts and context menu additions to do more stuff
--- doc navigaton   (move thru statements blocks functions class/structs etc with handydandy short cuts
--- dirview (browse file system
--- docview (browse open documents ... and maybe imports??
--- history (recent files ... lets do this soon it would be very convenient for all the testing I'm doing 

    

========================================================================================================================
04.11.2011 07:39:57

'finished' terminal. More needs to be done but it does work.

next up thoughts

--- project view
--- config ui ... this is going to be huge(new element IF function getoptions and more config core stuff)
--- search core
--- new search ui
--- new project ui ... switch to dialog and make improvements
--- recent files ... do this when I have limited time, should be a fairly simple interface to gtk history
--- dirview ... this seems so simple and obvious hard to believe it isn't an object in glade


========================================================================================================================
Thu, 10 Nov 2011 00:56:38 -0500 

Happy Bday to me... oops, past almost an hour ago, darn!

Anyway "finished" dirview tonight.

next steps in my head
- history / recent files
- create a debugger branch ... I foresee terrible trouble but I stay here just the same

- best for last ... the super duper, end all, be all, ignorance ending, king of all documentation systems!
    just a matter of implementation, time, know how, resources, determination ... oh crap.

^^ new section "what I learned today"   {edit 6/10/12: oh my the text is rife with ignorance}
    if you use dirEntries return value it vaporizes 
    so don't do this...
    ---    
    auto x = dirEntries(blah, blah blah)
    writeln(x)
    foreach (y; x) ... no y's;
    ---
    I need to take a gander at std.file code.
    
    
========================================================================================================================
Thu, 10 Nov 2011 22:19:52 -0500 

I've been reading up on gdb/mi.

Seems pretty straight forward.
One problem I'd like to solve though is how to display d strings.
char[] show up as (ucent *)  thinking that there must be some simple way to 
convert that into a string right?

Another problem is the interface.  Gdb front ends are just so ... ugly.
So, I'm thinking keep it very simple, just the most basic functions.
    -- run /continue / run to location,cursor
    -- set clear breakpoint (no conditional breaks?)
    -- set clear watch variables (keep getting no x in current context error
    -- next line (step over) and next line (step in)
    -- no register view no assembly stuff 
    -- simple call stack
========================================================================================================================
Fri, 6 Jan 2012 22:35:15 -0500

I've had a long break from DComposer.
Now It's time to get back in head first.
But... where to start?
Errors and bugs abound.
Lots of stuff just doesn't work the way I want it to (much less the way it should.)
I'm satisfied with the basic structure, so I'm thinking of just going file by file; function by function and rewriting
everything.  No not a complete rewrite, just make sure everything is what it is supposed to be.
Thinking it will be easier than finding mistakes strung out through all the code.
But I must admit I'm reluctant to start working on anything that prevents me from seeing and testing immediate results.
It just feels better to add a few lines of code and then be able to see the results.

Okay... some thoughts on improvements (new stuff vs fixes.) 
Still need to add search as a core component.
Seperate Dproject so its just Project and then have dmd/gdc/ldc subprojects

OMG I almost forgot the most important feature of my ide!!
The help system. That was the biggest reason for starting this project.
Now I haven't even thought about it in months.  Gotta be done.

Actually decided to buckle down and learn vim... (using gvim right now)
two things
1. Makes me reconsider making an ide, at least with gtksourceview.  How can I compete with vim?
2. Makes me consider replacing gtksourceview with vim (how hard would it be to make a gtkvim widget??) or use vim keys


my 10 year old: instead of a toilet seat ... a toilet couch 
========================================================================================================================
Tuesday, 7 February 2012

Reading programming books on the kindle.  There are whole chapters devoted to why one should not do things the way I've 
been doing them.  Very interesting, very educational.  The kindle is great but I must admit I prefer holding paper in 
my hands.  

I'll be much better prepared for my next project, aint learning grand!

What I want to do now...

1.  d language help
2.  document context menus (jump to, help, snippets, whatever)
3.  lua/python scripting??
4.  oh yeah I need some icons!

========================================================================================================================

Thursday, 9 February 2012

What I'm going to work on tonight.  After I take the kids to Sandpiper to meet Erica for "lunch"

CodeCompletion -- fix scope errors --> std.file.File.  multiple '.'s do not work correctly
Icons -- something I can see and feel
Help  -- get started on this


========================================================================================================================
Saturday, 11 February 2012

CodeCompletion is much better.
BUT ... sometimes crashes on '.' input (std.c. == crash , or any one letter .l. combo?)

========================================================================================================================
Thursday, 15 March 2012

CodeCompletion is even Better now!! (still crappy tho :)

planned menu (who uses menus anymore)

SYSTEM		:	VIEW		:	DOCUMENTS	:	EDIT	:	PROJECT	:	TOOLS	:	HELP
Print 		:	Toolbar		:	New			:	Undo	:	New		:			:	Manual
Search 		: 	Side		:	New Type >	:	Redo	:	Open 	:			: 	Elements >
Preference	:	Extra 		:	Open 		: 	Cut		:	Options :			:	About 
Quit		:	Status 		:	Save 		:	Copy	: 	Refresh :			:
			:	Elements >	:	Save As		:	Paste	:	Build 	:			:
			:				:	Save All	:	Delete	:	Run		:			:
			:				:	Close 		:	Sel All	:	Run/Args:			:
			:				:	Close All	:	Sel None:			:			:
			
Big list of stuff to tweak (doesn't count things to add)

Menu 			-> organize (see above)
Toolbar 		-> icons!!!! (maybe I'll stick with unicode strings for icons??)
				-> User configurable
SidePane
	Symbols		-> show symbol ddoc comments
				-> add/remove tags from ui?
				-> if not doc stuff then something to show user more info about the symbol (ie signature or whatever)
	History		-> ctrl-H switches to page ✔
				-> allow filtering
	Project 	-> two toolbars? to see all buttons or remove some (no don't remove any)
				-> actually I kind of like this page
	Dirview		-> add a context menu
				-> real icons
				-> better sorting (sort by name but with folders first (or last))
ExtraPane
	LogView		-> maybe (big maybe) color code for engaging/disengaging vs in mainloop stuff (who doesn't like colors)
	Buildmsgs	-> needs to indicate when changed (if build messages are exactly the same can't be sure if anything happened at all)
	Debugger 	-> amputate and reattach a new one that actually makes sense
	Search 		-> implement all the features
				-> lots of room here for tweaks
	Terminal	-> Simple works not lots to do here
				-> maybe allow color font preferences if not to much c coding is needed
	Assistance	-> show more symbol info than just doc comments 
				-> prettify  the whole thing with colors and fonts .... blah blah blah

CenterPane
    Documents   -> turn off completion/calltip stuff when not editing D source code
                -> better context menu stuff

StatusBar       -> Find a Better use for it! Or any use.                


	
				
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~				
Features I'm thinking of right now
	Config/Preferences
		this is bigger than it looks.
		have to add a Reconfigure function to each core/ui/element module to allow on the fly changes
		have to supply a gui for each module
		should have took this in to account at design beginning.  Price of being a noob I guess. 
		
	External Tools
		allow using external shell commands to run with dcomposer variables
		
	VCS
		yes I want this now (force me to learn more about git at least)
	
	Print

    Format

    Bookmarks

    Auto save/backup

    Snippets
    
========================================================================================================================
Friday, 16 March 2012

Nothing accomplished today!
Feels so wrong.

========================================================================================================================
Saturday, 17 March 2012

working on new branch for assistant
so far ..
works ok with autopopups

just realized that call tips wont work when a ( returns no possible calltips throws off the whole call tip treeview

========================================================================================================================
Sunday, 17 March 2012

Done with assistant for now.
What it does...
    1.  Shows symbol information for items in autopopups
    2.  Shows a screwy kind of tooltip feature for mouse hovering
    3.  Shows symbol information when symbolview cursor changes
    4.  Jumps to symbol definitions
    5.  Follows children symbols when clicked on

Where it fails
    1.  Mouse hover feature is really annoying (unexpectedly changes the symbol)
    2.  No web link yet (can't imagine this will be too hard)
    3.  Crippled by symbols module short comings (ie unable to correctly follow function return values and/or member scoped objects)
    4.  TextView for comments is not pretty.
    5.  Child treeview model could be a treestore vs a liststore.

Other stuff
    1.  Replace insert button with a parent button.
    2.  ???

Over all I'm very satisfied.  Of course it's not perfect and others might think it's silly.
But it is mine, I made it, I think it has potential.

Anyway, I'm done with the assistant branch for now.

The critical question now is ... "What's next?"

========================================================================================================================
Monday, 3 April 2012

OMG switch from glade-gtk2 to glade.
I was actually trying to see if devhelp would be enabled in glade since it stopped working in glade-gtk2.
Nope, apparently devhelp is too old in Ubuntu repo to work.

Anyway... after opening and closing in glade several widget names had been changed.  This problem was hard to find at first
because I knew I hadn't made any changes.  What a pain in the ass!  Builder.addFromFile should really complain if some object
doesn't exist in the file. (ok ok I guess returning null is a complaint but who the hell checks return values?)

A very frustrating day.  Also could not figure out how to reliably set window position and size to equal last session.  The hard 
part was(is) setting the Paned.setPosition.  It seems to go fine, then just doesn't work. Something somewhere just resizes it
to some 'default' value.  Experimented with all the glade options just figuring out what they do.  Guess what, ended up with
a total mess.  Anyway it seems to work now (like a few times before) you just have to say the magic words before launching the app.
I foresee coming back to this one.

So what is next on the naive IDE horizon??

Preferences, a fully implemented GUI preference dialog thingy.
If I can pull this off I will be very pleased with myself.

Work (real life postal work) is threatening 6 days 10 hours.  So unless my kids surprise me and learn to cut grass, wash cars, cook,
do laundry, wash dishes, scrub toilets, etc. My programming (use loose definition plz) time may be cut back a little.

One more thing before bed.  I have a list (limited to 3 things max for each module) of to-do stuff.  Small stuff for the most part
but taken together could make a marked improvement. 

========================================================================================================================
Tuesday, 20 May 2012

Lots of problems!
1. MainWindow resizes at random! wtf.
2. upgrade to dmd 2.059 must have changed std.xml.decode setting, markups is broken
3. when "jumping to" a symbol source view will not scroll to mark properly
4. when debugging dealing with external document changes freezes everything
5. dragging text gets screwed up (I think because of autopopups)

This is what comes from messing with code when you're half (actually 99.9%) asleep and you don't have a specific goal to accomplish.

ok so far
1.- Has not repeated do not know what I fiddled with keep a weather eye out
2.* Hack Hack encode symbol name (because of template constraints) then decode (just doesn't seem right)
3.  guessing document isn't sized yet so can not scroll properly.... thinking of a simple fixed
4.  no solutions but an admonition to clean up the attempted fixes (smelly code)
5.* disabled calltips at OnDragBegin and enabled at OnDragEnd

simple stuff
A. Open projects from command line
B. --help option
C. Drag and Drop file opening

Learning plenty here.  Every little change causes a stupid headache! 
added a scrollbar parent to a notebook page in glade
now everything that referred to that page actually wants the parent.

Couldn't figure out why dirview would not sort or even call my sortfunction.
At some point I had added a refresh function that completely replaced the liststore
nullifing the sortfunction.  Feels so wrong to add the code that fixed it.

On new projects I will take more time working out kinks at the beginning.


========================================================================================================================
Thursday, 24 May 2012

Fixed a few obscure errors due to faulty settings in glade files.
Very proud of myself ... had to dig into the gtk source code to figure them out.
Ok not errors, warnings, but they annoyed me.

========================================================================================================================

Fri Jun  8 23:45:43 EDT 2012
About preferences
	* Each object (dcore, ui, element) should create a preference page inherited from PREFERENCE_PAGE

	* The object (not it's preference page) should connect to Config.Reconfig signal.
	  At the signal the object should reload all its configuration data from Config.

	* The object's preference page 'automatically' be added to the Preference dialog (well elements anyway).

	* Each preference page should override Apply to store its gui data into the config keyfile. (Then Config will emit
	  the Reconfig signal.)

	* Also each preference page should override the prepgui function to load its gui from the Config keyfile.
	  (Each time the Preference page is created or changes are disgarded all pages prepgui functions will be called.)

	* PreferenceUi keeps an array of all object's preferences pages and calls apply and prepgui when necessary.

	* all elements should have a enable/disable feature.

Documented ui.d, need to do it for all modules.  So much work though.  Next project I do will be documented as I go!

Other thoughts.  Really need to refactor DOC_MANAGER AND DOCUMENT.  They were the first modules with any significant code.
I thought I had some idea what they needed to do but I was WRONG about most of it.  Now they're a mess.

Also looking at some of the signals.  They are far too chaotic.  Signals must be well thought out and very simple or I can see
a quagmire of confusion.  Oh well, just thinking out loud (well not that loud).

========================================================================================================================
Mon Jun 11 23:23:26 EDT 2012

Adding simple preference pages to elements.  Came across a new terrible error.  Whenever I drag an item from the GtkRecentChooserWidget I get a core dump.
Googled and found nothing.  Guess this is going to force me to learn about gtk drag and drop.

Very boring stuff.  Can't decide what I want to do next and I'm not really into doing these repetitive preference pages.
 
OMG... I've been dealing with that drag and crash issue all day. Didn't get anywhere.  So now I just ran DComposer to check something unrelated and the bug
will not reproduce.  It is gone.  Drag Icon just goes back to widget like it's supposed to.  Sure it'll bite me in the butt later.

More to-dos:
	* ui.d -> fix menus (or break em to match standard crap)
	* terminalui.d -> context menu -- set environment variables and a way to send stdout to current editor.
	* documents.d and docman.d -> refactor get rid of functions I never needed to write, rename and clarify others... Lots of room for improvements. 
	* Document every function and create an API for new elements

	** create scripting
	** plugins
	** snippets
	** build system for dcomposer and for projects (export a make file)
	** element to allow vim commands or some of them ... a two mode editor

Well enough, I'm going to boot up my freshly installed freebsd (32 bit) that I finally got around to installing.  See if I can't make DComposer work on there before bed.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Thu Jun 14 01:01:23 EDT 2012

Ok what next 
	1. refactor docman and document  -- remove document_if
	2. get some darn icons!
	3. split windows
	4. autobackup/save
	5. VCS /git/ support
	6. 

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Wed Jun 20 22:46:18 EDT 2012

Just looked at the document files made from the doc comments I wrote.
Man they really suck!

Next on the to do list.
Put everything (resources, glade files, log, cfg, styles)in the correct folder.
Get prepared to actually have an build and install thingy.
The build system thing has really been bothering me.  The more I read about it the more confusing it gets.

	autotools -- omg so many files and programs running in dependant circles. Can someone just maybe briefly mention what the developer needs to input into the system and where/when.  Ok I get that this program needs that file and gives these files which feed the next program which also needs those files.  OK OK but where do I fit in?

 	Cmake...
	Dmake...
	Waf...
	make...
	dsss...
	

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Sun Jul  1 00:41:33 EDT 2012

Spent lots of time finding a silly bug.  Changed an index from long to size_t (for 64/32 bit compatiblilty).  The index was used
to access an array.  I forgot I was using a value of -1 to indicate there was no valid item.  I had no idea where my error was or
when it had been introduced.  Of course I eventually found the bug.  Produced a diff from several previous commits and went line by
line.  But first I put in about 1000 writeln's spewing forth all kinds of worthless info.  So disheartening.  It will be a wonder if I
ever get this thing to be both stable and functional.

I know what I've done so far needs lots of work still but I can't decide where to go.  The TreeView (xStore is not an xStore) error is still 
hounding me!  Found a non documented getListStoreStruct --- going to set a pointer at it and see if that discourages the gc from collecting it.
Or most likely the problem is not related to the gc.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Thursday July 5, 2012

Testing notes
	->make use of project type (app .so .a ...) Can't open if type is changed to null.
	->better gui defaults at first run (centerpane is hidden, no toolbar, window too small, at least stdlib.json loaded)
	->welcome screen at first run
	->project add/new file so don't have to create save then add
	->project wizard??
	->open files and save files start in project root not recent
	->sometimes saving file (or maybe just saveas) segfaults ... after the file is saved though ??
	-->> omg of course!!! I'm so dumb gotta remove docman.docs[oldname] and add docman.docs[newname] how can I live and
	-->> be so stupid
	->switching current document and then doing next search result confuses search (just keeps stepping through current)

ok started a new branch going to go file by file and squash as many BUGS as I can finding
	-> Docman/Document
		save as -- updates docman docs-
		save says success when it fails-
		warns can not open non utf text when file actually doesnt exist-
		Getword/Word if cursor is at start of word dont go backwardwordstart-
		
	-> SplitDoc
		horizontal and vertical are kindof ambiguous (is it the bar or the order of the windows?)-
		configure the "page" to be the same as in DocMan.append();-
	-> SearchUI
		if there is selected text then that should be in textentry rather than whatever word is at the cursor-
		keep up with page changes-

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Friday July 6, 2012

Fell asleep, now where was I...

	-> SearchUI
		segfaults on search file if no file opened-
		search folder should search in directory of current document ? or terminal directory or project or what ?
				lets go with folder current doc is in or cwd if none-
		summary of what is found to statusbar (let the user know its working if no results are found)-
		switch f3 and f4 hot keys-
		oh my if text is null -- enters some kind of infinite loop-
		aaarrgggh damn it got another treeview crap out!
		

	-> Search
		warns Failed to search in file some/directory
		should have an option to search sub folders -- with a depth variable??

	-> DocMan/Document
		undo/redo says fails assert action != null after using replace (from searchui)
		
	->project projectui projectview
		space between dmd and options (swear I fixed this before!)-
		projectview adding import paths fails-
		add a close project option-
		allow a single d file to act as a project-
		do away with the apply button on projectui make it act like projectview
		add project targets
		fix (use) the type option... save a project with null type makes it uneditable (ie worthless)-
		export a simple make file (?) (ok leave room for codeblocks netbean eclipse exports autotools waf cmake blah blah blah) xx plugin for this
		proview add file starts in project folder-
		clicking on an identifier creates a new one-
		build with no project has gives user no response-

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Monday July 9, 2012

Continuing...
	
	->dirview
		segfault on set current folder to doc when no doc-

	->symbolview
		P instead of X for package "icon"


Stop continuing and start making icons.  Using
Fugue Icons

(C) 2012 Yusuke Kamiyamane. All rights reserved.
These icons are licensed under a Creative Commons
Attribution 3.0 License.
<http://creativecommons.org/licenses/by/3.0/>

Ok, icons are finally done. (Well maybe not finally but originally)
Need to put attribution in the gui.-

One last thing, readme has who, what, where, when, and how.  Obviously missing the why.-


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
tuesday July 10, 2012

ok back to bug squashing
	-> document/docman
		after messing with stock icons no close icon on tab labels-
    -> dirview
        crap I totally forgot about the toolbar in dirview need more damn icons!
    -> docman/documents
        overriding stockid.close changes icons in dialogs.

    -> search/searchui
		if replace contains  substring of search then infinite loop!--
		(ie search = "eject" replace = "reject" will give you "rrrrrrrrrreject"--

	-> ui
		omg now there are icons in the menu AND THEY DON'T MATCH THE TOOLBAR!!!
		(I don't think this is application dependant (showing menu icons) so hijack icons before menu creation)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
wednesday July 11, 2012

	->calltips
		copy that ends in '(' gets screwed up


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
07.12.2012
	->calltips
		actualy pasting `xxx("`  will result in `xxx"(` everything else seems to work fine... curious.
		--seem to have fixed it yet again (if (insert text.len > 1) we're pasting; keep pasting til onpastedone


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
07.13.2012

So depressing, segfault after segfault.
Nothing is working right anymore.
Must be strong!
Almost every problem is related to treeviews and their models going out of sync.

->searchui/search
	searched for something deleted it (in the editor) hit search next and segfault (only 1 result)
	so must ensure the search location is valid before jumping to it


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
07.18.2012

ok I'm going to go through and disable gc around any major treemodel changes.
Think I've fixed the problem with pasting and '(' -- we'll see, stupidly convoluted
Sure I fixed the last search problem listed above.

Wasted so much time this weekend (my weekends are monday tuesday).  Not feeling well sat around watching movies.
Death Proof		-- Toooo much damn dialog! (What happened to the machine gun leg I saw in the previews??)
13 Assassins	-- Silly! Had good ratings.  Lost interest when each "assassin" jumped into combat 1 vs 100+ instead of fighting as a unit
Drive			-- Really good... a little slow (moody mood building) reminded me of Taxi Driver (a little)
Valhalla Rising -- hmmm if you can stay awake watching men sit on a boat for like an hour you get to see a wierd drug scene, then it gets boring.


Couldn't get motivated to write code.
I did manage to start a small test project using dcomposer.
It syncs a folder with a M3U playlist.  Something I could find useful.
Found lots of bugs.  I think all of several segfaults are caused when I change the treemodels. If I can get around that
the rest seem ... understandable.

So I don't forget... new crap I've noticed
	. strange window resizing. Sometimes size jumps to fill all my Workspaces.  And the max/unmax deco button disappears
	. completion popup window is ugly and in the way with too many duplicate choices
	. preferences should be always visible (and remove the apply button!)
	. move the project label off the toolbar and use the title bar like a normal person!
	. make use of the status bar (how much is that worth does anyone even look at statusbars?)
	. asssistant -> variables should show the types children / and maybe functions should show return types children
	. run w/args should have an arguments dialog if no args in project (which doesn't save the arguments)
	. search/searchui --> hotkey for replace should = shift + nexthotkey  (whole search/replace ui needs help)
	. after -replace- shouldn't jump to next result, need to see if the replacment is right otherwise lots of undos
	. searchui -> need to make all operations possible without seeing them (when the top of the page is hidden)
	. assistant is the most unique thingy spend more time making it work (correctly).
	. assistant make it follow the cursor not the mouse pointer (actually do it now)
	. Messages -> get rid of the stupid -1-2-3 thing put in a progress bar and move on.
	. notebooks ... make all pagetabs reorderable or none!
	. save more stuff in config like pane positions, current tabs, page order, etc
	
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
07.20.2012
	todays changes
		.	at exit asks to save modified text before closing main window (no functional differences, can't cancel but
			at least you know what application the dialog box belongs to).
		.	if you try to create more than 1000 "untitled" documents you get a nogo message and no new document.


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
07.23.2012
	woke up today and decided to allow files to be dropped into dcomposer.  What a headache! It is actually pretty simple
	but Oh my god!  The GTK documentation was completely worthless to me.  Drag and Drop is in widgets, GtkDragAndDrop,
	GdkDragContext, there are G??TargetLists, destFlags, actionflags, Atoms, targetentries all spinning around in chaos.

	I still really have no clue if I did it correctly but it seems to work.  Are those Target "forms" supposed to be guessed
	at?  Finally I looked at geany's code.  I was like "wow, thats it?"  So I deleted all the stupid functions, writelns,
	comments and other detritus of my fumblings.  It works... needs cosmetic surgery (drag a file to a doc and pastes file name,
	probably silly that the whole window accepts files)

	Oh and if you drag text to the window it tries to open a file named whatever the text is. (about to fix that now)

	I've been doing some reading lately...
		1. I would really like to create a powerful text editor (most important)
			a.  key bindings -- configurable and as mouseless as emacs/vim
			b.  extensible... should be able to perform any text manipulation one can imagine
			c.  Shell ... better interaction at very least define environment variables to use  stuff in dcomposer
			d.  finger tip version control (hehehe I like that 'finger tip control')simple/functional interface
		
		2. Assistant (or whatever)
			I think this is a good feature of dcomposer, I need to put more effort into making it look good and run smooth.
			If D is still a new langauge by the time I let anybody see dcomposer, then it should be very helpful.

		3. A manual
			Not just to show how things work but to put some more thought into how things ought to work.

		4. Have fun
			I like when stuff works.  It amazes me.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
07.29.2012

	Well trying to change the environment variables in the terminal sure didn't work!
	To ... much crap written through the command line.  Couldn't make it 'invisible'
	If a program was running in the shell it stole the command to export a variable.

	Has to be a way I'll look into it.

	Where to go now...

	Debugger 	: scared to start this again.
	Bookmarks	: how important is this?
	Keybindings : Really want to do this but I'm lazy
	              Ok not lazy just know I want it to  be good.
	Assistant	: Make it look good! (better) and not crash ever.
	VCS			: I use git in the terminal
	Snippets    : Don't like these really
	Goto Def	: Like this

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
08.04.2012

	Ok what have I done since the last entry
		-GotoDef context menu - done (hopefully)
		-Bookmarks - exists after closing files.  Happy with it ... only thing to do is save to project files
		-added the project working directory as a shortcut in openfiledialog
		-assistantui got rid of crappy tooltip code now assistant follows whatever is under the cursor.

	I've been avoiding customizable key bindings because
		-(this isn't a reason but have you noticed I like lists?)
		-looking at BindingSet screwed up my mind
		-so many bindings to present to user (hate typing)
		-I really want to create a simple vim emulation mode (soo much work)
		-Sadly I don't even know all the bindings that come as defaults

	other thoughts
		-a central signal/event dispatching module. forwards events for plugins to communicate without core/ui having to
		 know anything about it.
		-build counting/tracking
		-a tag tool.  A utility to create a tag file for any package.  should be very simple.
		-now 2.060 is out looking at a flagsfile utility to keep projects up to date. (Don't think any changes to dmd
		 command line were made this go 'round)
		 
	Do I really feel like upgrading to 2.060.  The whole change log seemed like a bunch of deprecations.  Who wants to
	put themselves through that headache.  Oops, did not mean to sound like an ingrate.  Very excited that dmd is continuing on.
			

	Much later that day ...

	ok working on saving bookmarks to project file.  So trying to make MARK a range by adding empty popFront and front.
	Realized I had no real idea how the range system works.  After lots of trial and error I have something that seems
	to work (more than once).  Kind of surprised that a range destroys it self as it walks.  I'm thinking there needs to
	be some kind of initiating function for starting a range.  I added another MARK (ptr?) called mFront to each MARK
	(in addition to prev and next) when empty returns true mFront = this on popfront mFront = mFront.next.  Will see how
	it holds up under use.
	(huh?)

	++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	08.06.2012

	Rewrote the whole bookmark module as it made about as much sense as the preceding paragraph. Now just have to get
	Toggle/Add to work correctly.

	Holy crap!  Another rewrite.  the whole double linked list with a current marker, all the range stuff, ablity
	to walk bidirectional for non range stuff, persistant over closed files, persistant over closed projects, ...
	Well just say I got very confused (this is like the 100th time I've said it but...) Finally it works!
	What a day.

	Sure there are easier ways to do this but hey, I'm stubborn.  I get ranges now so that's cool.

	Going out of town tomorrow so I get a break from all this.  Time to think of what to do next.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
08.19.2012

	Long time since last update. I have been kind of lost as what to do next.  Spent a lot of time watching the full
season 2 of Game of Thrones.  Can not wait for season 3.  Wish there were more shows like this.

	Anyway blew a lot of time watching movies and finding other ways to waste time.  Deciding which path to take next...
		. Key bindings -- think I've figured out keybindingsets  the key is 'paths'... didn't know each widget had a path.
		. more text commands (actions) up/down scope({}) start/end statements (;) etc
		. code clean up /documentation.
		. customizable toolbar.

	I've finally decided to pretty up assistantui using webkit.  I'm figuring out how to use it now.  I plan on allowing
users decide if they want to build with a webkit-1.0 dependancy.  WebKitGtk-3.0 didn't work (conflicts with gtk2 I recon),
and I don't see a 2.0 in the ubuntu repos.  To work gonna have to create html files along with tag(json) files.

	So basically two branches a textview comment viewer and an optional webkit viewer.

	One day I'll tell someone this ide is here, gonna have to remove these stupid notes first though.  If I forget, just
remember, I fall asleep for a few seconds after every sentence ... uh  where was I ...

	Random stuff...

dcomposer is like 13 megs (with all extra symbol info stuff).
I really need to go back and put something out for a debugger even if it sucks.
Vim mode.  (ctl)enter = vim command emulation mode.  enter exits
Oh well good night.


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
08.25.2012

Ok long time.  Got the beginnings of a doc viewer through webkit in assistantui.  Still lots to do...
	. Make assistantui work if not compiled with webkit (currently only webkit 1 cuz I didn't see 2 in ubuntu repos)
	. Make it work if user doesn't create html docs.
	. Make it work if user changes html docs defaults.
	. Make it look half way decent without html

	
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
08.25.2012

Walgreen's had pistachios on sale ... hard to operate a keyboard while satisfying my new addiction.  Next time I'll get
them already shelled.

Anyhow, getting bored with assistantui.  Think I've decided to return to the debugger fiasco.  I'll make it very simple.

Just found an error on bookmarks ... on project close same bookmarks are added to save file. So marks are duplicated
several times overs.  Fix = simply clear the list before saving

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
09.02.2012

Omg September already??

I've been busy, just not on DComposer,  watching movies and Dark Angel.  Seems like we're having lots of company lately.

Any Way... Got printing to work.  Why are the Gtk documents so obtuse.  After spending so much time trying to decipher
docs, found an example.  Can't believe how simple it is.  Never would have guessed from the documentation.

Need to add a preference page for sourceview specific options.

After this I'm going to put the debugger back in.  Even if it doesn't work for crap better than nothing.

Goodnight!

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Wed Sep 12 17:52:50 EDT 2012

Has it really been 10 days since the last entry?  Well I think I've got ShellFilter working pretty well right night.
At first tried to do something like
    string command = `echo -e ` ~ TextFromDocument ~ ` | ` ~ UserCommand 2> ErrorFile';
    Result = shell(command);
    
But guess what... no way to escape single quotes.  phobos std.process.escapeShellCommand() for some reason added what 
gtk_text_buffer called invalid_utf8 to the end of command if any single quotes were in TextFromDocument.  I guess I should
file a bug report.

So instead 
    tempfile.write(TextFromDocument);
    
    command = "cat " ~ tempfile.name ~ " | " ~ UserCommand 2> ErrorFile"
    
This seems to work reasonably well.  One thing though, security.  The 'internet' says using shell() is vulnerable to 
malicious hackers and should never be used.  Well then doesn't that make xterm and its ilk dangerous?
    
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Thu Sep 13 00:29:09 EDT 2012

Cumberland County Fair.  Hot dogs, funnel cakes, and porta-potties.

Bought a WalMart gas card put it in my wallet.
Went straight to the gas station in WalMart parking lot.
Card declined ... zero balance.
Back in WalMart raised a fuss for about 45 minutes.
Realized I had put the card in my wallet but had pulled out a forgotten old one from way back.
Every time I think I've discovered the absolute depth of my intellectual prowess ... a new abyss reveals itself.


Relevent point is ... little programming accomplished.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
09.18.2012

OMG spent hours trying to figure out why search and replace all would not work!!
I was testing by creating a new doc with man sort.  then search for "sort" and trying to replace it with some new text.
Kept crashing saying offset of "sort" was beyond end of line.
After hours of messing with my code I tried adding the new document with "man -Eutf8 sort" (I finally read the man man.)
And everything works fine!!
How the hell is man output encoded that it screws up my code.  Now it looks like I've got lots to learn.

OOOh so dumb, gotta go backwards through replaceall!  Been through this before!

Things I am considering to do next
	-Figure out all the key bindings and make them configurable
	-Snippets
	-A Bookmark View
	-Code coverage


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
09.19.2012 20:50:01
	-custom toolbar layout
	-Debugger ****
	-export Makefile
	-maybe a non symbol completion -- keyword/local stuff

Spending a lot of time tonight looking at/for parsers.  Looked at DScanner cool but it doesn't do local variables
either.  Wonder if that is like 'a thing.'  Anyway I do not think I understand what most people mean by parser.

Ok, messing around with dcomposer some things that really need attention or I just look stupid
	-sometimes autopopups doesn't display (something to do with inserting stuff)
	-assistant does not show the logical symbol when there is a choice
	-have to focus on search entry and press enter to start a search need a better way
	-log file isn't save on a crash! whats the point of logging errors if you never see em!
	
break it down...
	-broken menu icons
	-menu order
	-toolbar order
	-use status bar or lose it
	-dirview        -- use matching icons
	-projectview    -- add args for run w/args option
	-symbolview     -- better tooltip -- maybe full signature but do not need path/scope
	-historyview    -- stop the crash on drag
	-logui          -- font choice
	-build messages -- get rid of numbers and add progress bar
	-terminalui     -- nothing simple is good
	-searchui       -- better ui altogether more intuitive search 
	-shellfilter    -- either list of favorites or maybe a shell text processing manual of some kind (awk, sed, grep, regex, etc)
	-assistantui    -- smooth the rough edges... actually using it reveals
	-printui        -- nothing yet but I can't really test (ink is too expensive :)
	-ui             -- more storeguistate stuff, better menu w/icons better toolbar, statusbar (on close discard/save all)
	-autopopups     -- for all all of it need to make it work all the time and make it look better and less obstructive (scrolling!)
	-symbols        -- faster loading why is parallel loading slower?
	-splitdoc       -- this is much harder but allow split views of different docs or maybe detach tabs?(two notebooks in centerpane?)
	-search         -- faster maybe (after everything else is perfect)
	-projectui      -- a lot of this is duplicated better in proview (get rid of apply button here)
	-project        -- truthfully I hate this module... too ... blah I guess just not pretty, efficient, sleek.
	-preferences    -- more functionality in base class less room for deviation.  Too much variations in each subclass
	-log            -- two things 1. first entries are lost (hacked around) 2. after crash most if not all entries lost 
	-indent         -- seems to work fine (remember {} indenting)
	-gotodef        -- simple works fine
	-elements       -- not plugins but who really cares
	-document       -- ??? streamline it maybe
	-docman         -- clean up 
	-dcore          -- nuthin
	-dcomposer      -- nuthin
	-config         -- nuthin maybe some clean up
	-bookmarks      -- turn into a view (ie sidepane) clean it up -- actually a good beginning I think
	-all modules    -- clean up, document, conform to convention 
	
Tomorrow I'll prioritize all this crap.  Then I'm going to work on making it all nice and pretty before I add anymore
stuff.  Then I'll try a debugger again.  Then I'll announce this to whoever ... then I'll consider more features.

oh well.

G' night.

	
	
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Thu Sep 20 01:45:30 EDT 2012

Arrgh forgot to save changes I made here earlier!!

ok started a debugging branch
first prioity
 --core modules

	-symbols
		--weird crash on finding template scope members
	-log
	-project
	-search
	-config
	

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
09.21.2012

	--documented symbols and looked for potential bugs fixed at least one. x
		*noticed = I need not only the symbolview for all symbols but a more specific module view (should be helpful)
		*noticed = need a way to remove highlighting of search result (now only way to change them is to search for
			something that has no results)
		*noticed = need to have a search 'project source files' and a 'search all project' search option.
		*noticed = got that darn treeview / store out of sync error.  Long time no see. (in symbolview)

	--Log.d see the git logs ... tired of typing!
		*noticed = should have used a log library :)

thats it for now tomorrow  the big one project! omg again!

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
09.22.2012

	--project.d = stopped on Save().  I think perhaps the insides of project are not as bad as the outsides. (I hope)
	--search
		*noticed = new opts search project source / related / all (320,000 results really bogged my pc down)
		*might want to use (or at least test) grep in a shell to improve performance
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
09.24.2012
	--oh wait put this on hold ...gonna watch "God Bless America" the Bobcat Goldthwait movie
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
09.25.2012 23:59:56

	Terminalui causes a zombie dcomposer!  Help.
	Wondering how long this has been going on.  Geany also creates a zombie process.  So that tells me I'm in good
	company :)

	
